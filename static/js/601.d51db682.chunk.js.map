{"version":3,"file":"static/js/601.d51db682.chunk.js","mappings":"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","sources":["components/CarItem/CarItem.jsx","components/CarList/CarList.jsx","components/LoadMoreButton/LoadMoreButton.jsx","components/Searchbar/Searchbar.jsx","pages/CatalogPage.jsx","redux/cars/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFromFavorites, setFavorites } from 'redux/cars/favoritesSlice';\nimport { selectFavorites } from 'redux/cars/selectors';\n\nexport const CarItem = ({ car }) => {\n  const {\n    img,\n    make,\n    rentalPrice,\n    address,\n    rentalCompany,\n    type,\n    model,\n    year,\n    mileage,\n    functionalities,\n  } = car;\n  const dispatch = useDispatch();\n  const { favorites } = useSelector(selectFavorites);\n  const [isFavorited, setIsFavorited] = useState(\n    favorites.some(favorite => favorite.id === car.id)\n  );\n\n  const handleSetFavorites = () => {\n    dispatch(setFavorites(car));\n    setIsFavorited(true);\n  };\n\n  const handleRemoveFavorites = () => {\n    dispatch(removeFromFavorites(car));\n    setIsFavorited(false);\n  };\n\n  return (\n    <>\n      <button\n        onClick={isFavorited ? handleRemoveFavorites : handleSetFavorites}\n        type=\"button\"\n      >\n        {isFavorited ? 'Remove from favorites' : 'Add to favorites'}\n      </button>\n      <img src={img} alt={make} />\n      <div>\n        <h2>{`${make} ${model}, ${year}`}</h2>\n        <span>{rentalPrice}</span>\n        <p>{address}</p>\n        <p>{rentalCompany}</p>\n        <p>{type}</p>\n        <p>{model}</p>\n        <p>{mileage}</p>\n        <p>{functionalities[0]}</p>\n      </div>\n    </>\n  );\n};\n","import { CarItem } from 'components/CarItem/CarItem';\nimport { useSelector } from 'react-redux';\nimport { selectCars } from 'redux/cars/selectors';\n\nexport const CarList = () => {\n  const cars = useSelector(selectCars);\n\n  return (\n    <>\n      {cars.length > 0 && (\n        <ul>\n          {cars.map(car => (\n            <li key={car.id}>\n              <CarItem car={car} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\nimport { setCurrentPage } from 'redux/cars/paginationSlice';\nimport { selectPagination } from 'redux/cars/selectors';\n\nexport const LoadMoreButton = () => {\n  const { currentPage } = useSelector(selectPagination);\n  const dispatch = useDispatch();\n\n  const handleLoadMore = () => {\n    const nextPage = currentPage + 1;\n\n    dispatch(setCurrentPage(nextPage));\n\n    dispatch(fetchCars({ page: nextPage }));\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleLoadMore}>\n        Load more\n      </button>\n    </>\n  );\n};\n","import carMarks from 'data/makes.json';\nimport { Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\n\nexport const Searchbar = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Formik\n        initialValues={{ selectedMark: 'Enter some text' }}\n        onSubmit={(values, actions) => {\n          const { selectedMark } = values;\n          if (selectedMark === 'Enter some text') {\n            return;\n          }\n          dispatch(fetchCars({ value: selectedMark }));\n          actions.resetForm();\n        }}\n      >\n        {({ values }) => (\n          <Form>\n            <label>\n              Car brand\n              <Field name=\"selectedMark\" as=\"select\">\n                <option value={values.selectedMark === 'Enter some text'}>\n                  Enter some text\n                </option>\n                {carMarks.map(mark => (\n                  <option key={mark} value={mark}>\n                    {mark}\n                  </option>\n                ))}\n              </Field>\n            </label>\n            <button type=\"submit\">Search</button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { CarList } from 'components/CarList/CarList';\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMoreButton';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Section } from 'components/Section/Section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCars } from 'redux/cars/operations';\nimport {\n  selectCars,\n  selectError,\n  selectLoading,\n  selectPagination,\n} from 'redux/cars/selectors';\n\nexport const CatalogPage = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const { currentPage } = useSelector(selectPagination);\n\n  useEffect(() => {\n    dispatch(fetchCars({ page: 1 }));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        {isLoading && !error && <p>Loading...</p>}\n        <Searchbar />\n        <CarList />\n        {cars.length > 0 && !isLoading && currentPage < 3 && <LoadMoreButton />}\n      </Section>\n    </>\n  );\n};\n\nexport default CatalogPage;\n","export const selectCars = state => {\n  return state.cars.cars;\n};\n\nexport const selectLoading = state => {\n  return state.cars.isLoading;\n};\n\nexport const selectError = state => {\n  return state.cars.error;\n};\n\nexport const selectFilter = state => {\n  return state.filter;\n};\n\nexport const selectPagination = state => {\n  return state.pagination;\n};\n\nexport const selectFavorites = state => {\n  return state.favorites;\n};\n"],"names":["CarItem","_ref","car","img","make","rentalPrice","address","rentalCompany","type","model","year","mileage","functionalities","dispatch","useDispatch","favorites","useSelector","selectFavorites","_useState","useState","some","favorite","id","_useState2","_slicedToArray","isFavorited","setIsFavorited","_jsxs","_Fragment","children","_jsx","onClick","removeFromFavorites","setFavorites","src","alt","concat","CarList","cars","selectCars","length","map","LoadMoreButton","currentPage","selectPagination","nextPage","setCurrentPage","fetchCars","page","Searchbar","Formik","initialValues","selectedMark","onSubmit","values","actions","value","resetForm","Form","Field","name","as","carMarks","mark","CatalogPage","isLoading","selectLoading","error","selectError","useEffect","Section","state","pagination"],"sourceRoot":""}