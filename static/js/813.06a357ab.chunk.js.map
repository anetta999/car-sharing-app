{"version":3,"file":"static/js/813.06a357ab.chunk.js","mappings":"yNAGA,SAASA,IACL,IAAMC,GAAYC,EAAAA,EAAAA,SAAO,GAOzB,OANAC,EAAAA,EAAAA,IAA0B,WAEtB,OADAF,EAAUG,SAAU,EACb,WACHH,EAAUG,SAAU,CACxB,CACJ,GAAG,IACIH,CACX,C,qFCLMI,EAAe,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAkBhB,OAlBgBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,0BAAAC,MACjB,SAAwBC,GACpB,IAAMC,EAAUC,KAAKC,MAAMC,SAAShB,QACpC,GAAIa,GAAWD,EAAUK,YAAcH,KAAKC,MAAME,UAAW,CACzD,IAAMC,EAAOJ,KAAKC,MAAMI,QAAQnB,QAChCkB,EAAKE,OAASP,EAAQQ,cAAgB,EACtCH,EAAKI,MAAQT,EAAQU,aAAe,EACpCL,EAAKM,IAAMX,EAAQY,UACnBP,EAAKQ,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,GACA,CAAAjB,IAAA,qBAAAC,MAGA,WAAuB,GAAC,CAAAD,IAAA,SAAAC,MACxB,WACI,OAAOG,KAAKC,MAAMa,QACtB,KAAC3B,CAAA,CAlBgB,CAAS4B,EAAAA,WAoB9B,SAASC,EAAQC,GAA0B,IAAvBH,EAAQG,EAARH,SAAUX,EAASc,EAATd,UACpBe,GAAKC,EAAAA,EAAAA,SACLC,GAAMpC,EAAAA,EAAAA,QAAO,MACboB,GAAOpB,EAAAA,EAAAA,QAAO,CAChBwB,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,IAiCV,OAtBAS,EAAAA,EAAAA,qBAAmB,WACf,IAAAC,EAAqClB,EAAKlB,QAAlCsB,EAAKc,EAALd,MAAOF,EAAMgB,EAANhB,OAAQI,EAAGY,EAAHZ,IAAKE,EAAIU,EAAJV,KAC5B,IAAIT,GAAciB,EAAIlC,SAAYsB,GAAUF,EAA5C,CAEAc,EAAIlC,QAAQqC,QAAQC,YAAcN,EAClC,IAAMO,EAAQC,SAASC,cAAc,SAarC,OAZAD,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADC,OACDd,EAAE,yEAAAc,OAEdxB,EAAK,wCAAAwB,OACJ1B,EAAM,qCAAA0B,OACTtB,EAAG,sCAAAsB,OACFpB,EAAI,0CAIT,WACHc,SAASE,KAAKK,YAAYR,EAC9B,CAjBU,CAkBd,GAAG,CAACtB,IACIY,EAAAA,cAAoB5B,EAAiB,CAAEgB,UAAWA,EAAWD,SAAUkB,EAAKf,QAASD,GAAQW,EAAAA,aAAmBD,EAAU,CAAEM,IAAAA,IACxI,CC9DA,IAAMc,EAAgB,SAAHjB,GAA+F,IAAzFH,EAAQG,EAARH,SAAUqB,EAAOlB,EAAPkB,QAAShC,EAASc,EAATd,UAAWiC,EAAcnB,EAAdmB,eAAgBC,EAAMpB,EAANoB,OAAQC,EAAqBrB,EAArBqB,sBAAuBC,EAAItB,EAAJsB,KAC5FC,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/BxB,GAAKC,EAAAA,EAAAA,SACLwB,GAAUC,EAAAA,EAAAA,UAAQ,iBAAO,CAC3B1B,GAAAA,EACAiB,QAAAA,EACAhC,UAAAA,EACAkC,OAAAA,EACAD,eAAgB,SAACS,GACbL,EAAiBM,IAAID,GAAS,GAAM,IACcE,EADdC,GAAAC,EAAAA,EAAAA,GACXT,EAAiBU,UAAQ,IAAlD,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAoD,CAChD,IADiBN,EAAAlD,MAEb,MACR,CAAC,OAAAyD,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACDpB,GAAkBA,GACtB,EACAqB,SAAU,SAACZ,GAEP,OADAL,EAAiBM,IAAID,GAAS,GACvB,kBAAML,EAAiBkB,OAAOb,EAAQ,CACjD,EACH,GAMDP,OAAwBqB,EAAY,CAACxD,IAiBrC,OAhBAyC,EAAAA,EAAAA,UAAQ,WACJJ,EAAiBoB,SAAQ,SAACC,EAAGjE,GAAG,OAAK4C,EAAiBM,IAAIlD,GAAK,EAAM,GACzE,GAAG,CAACO,IAKJY,EAAAA,WAAgB,YACXZ,IACIqC,EAAiBpC,MAClBgC,GACAA,GACR,GAAG,CAACjC,IACS,cAAToC,IACAzB,EAAWC,EAAAA,cAAoBC,EAAU,CAAEb,UAAWA,GAAaW,IAE/DC,EAAAA,cAAoB+C,EAAAA,EAAAA,SAA0B,CAAEjE,MAAO8C,GAAW7B,EAC9E,EACA,SAAS4B,IACL,OAAO,IAAIqB,GACf,C,4BC3CMC,EAAc,SAACC,GAAK,OAAKA,EAAMrE,KAAO,EAAE,EAiD9C,IAAMsE,EAAkB,SAAHjD,GAA4H,IAAtHH,EAAQG,EAARH,SAAUuB,EAAMpB,EAANoB,OAAM8B,EAAAlD,EAAEkB,QAAAA,OAAO,IAAAgC,GAAOA,EAAE/B,EAAcnB,EAAdmB,eAAgBgC,EAAenD,EAAfmD,gBAAeC,EAAApD,EAAEqB,sBAAAA,OAAqB,IAAA+B,GAAOA,EAAAC,EAAArD,EAAEsB,KAAAA,OAAI,IAAA+B,EAAG,OAAMA,GACrIC,EAAAA,EAAAA,IAAWH,EAAiB,4CAG5B,IC7DsBI,ED6DhBC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBF,aE3DvD,WACI,IAAM1F,EAAYD,IAClB8F,GAAkDC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GACxCL,GAAcS,EAAAA,EAAAA,cAAY,WAC5BnG,EAAUG,SAAW+F,EAAqBD,EAAoB,EAClE,GAAG,CAACA,IAMJ,MAAO,EADqBE,EAAAA,EAAAA,cAAY,kBAAMC,EAAAA,GAAAA,WAAiBV,EAAY,GAAE,CAACA,IACjDO,EACjC,CF+CsEI,GAAiB,GAC7ErG,EAAYD,IAEZuG,EAjDV,SAAsBvE,GAClB,IAAMwE,EAAW,GAMjB,OAJAC,EAAAA,SAAAA,QAAiBzE,GAAU,SAACmD,IACpBuB,EAAAA,EAAAA,gBAAevB,IACfqB,EAASG,KAAKxB,EACtB,IACOqB,CACX,CAyC6BI,CAAa5E,GAClC6E,EAAmBN,EACjBO,GAAkB5G,EAAAA,EAAAA,QAAO,IAAI+E,KAAO7E,QAGpC2G,GAAkB7G,EAAAA,EAAAA,QAAO2G,GAEzBG,GAAc9G,EAAAA,EAAAA,QAAO,IAAI+E,KAAO7E,QAGhC6G,GAAkB/G,EAAAA,EAAAA,SAAO,GAW/B,IAVAC,EAAAA,EAAAA,IAA0B,WACtB8G,EAAgB7G,SAAU,EAnElC,SAA2B4B,EAAUgF,GACjChF,EAAS8C,SAAQ,SAACK,GACd,IAAMrE,EAAMoE,EAAYC,GACxB6B,EAAYhD,IAAIlD,EAAKqE,EACzB,GACJ,CA+DQ+B,CAAkBX,EAAkBS,GACpCD,EAAgB3G,QAAUyG,CAC9B,IC/EsBnB,EDgFL,WACbuB,EAAgB7G,SAAU,EAC1B4G,EAAYG,QACZL,EAAgBK,OACpB,GCnFOC,EAAAA,EAAAA,YAAU,kBAAM,kBAAM1B,GAAU,IAAE,IDoFrCuB,EAAgB7G,QAChB,OAAQ6B,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM4E,EAAiBQ,KAAI,SAAClC,GAAK,OAAMlD,EAAAA,cAAoBmB,EAAe,CAAEtC,IAAKoE,EAAYC,GAAQ9D,WAAW,EAAMgC,UAASA,QAAUwB,EAAmBrB,sBAAuBA,EAAuBC,KAAMA,GAAQ0B,EAAM,KAG9Q0B,GAAgBS,EAAAA,EAAAA,GAAOT,GAOvB,IAJA,IAAMU,EAAcR,EAAgB3G,QAAQiH,IAAInC,GAC1CsC,EAAajB,EAAiBc,IAAInC,GAElCuC,EAAaF,EAAYG,OACtBC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,IAAM7G,EAAMyG,EAAYI,IACS,IAA7BH,EAAWI,QAAQ9G,IAAgBgG,EAAgBe,IAAI/G,IACvDgG,EAAgB9C,IAAIlD,OAAK+D,EAEjC,CA4DA,MAzDa,SAATpB,GAAmBqD,EAAgBxF,OACnCuF,EAAmB,IAIvBC,EAAgBhC,SAAQ,SAACgD,EAAWhH,GAEhC,IAAiC,IAA7B0G,EAAWI,QAAQ9G,GAAvB,CAEA,IAAMqE,EAAQ6B,EAAYe,IAAIjH,GAC9B,GAAKqE,EAAL,CAEA,IAAM6C,EAAiBT,EAAYK,QAAQ9G,GACvCmH,EAAmBH,EACvB,IAAKG,EAAkB,CA2BnBA,EAAoBhG,EAAAA,cAAoBmB,EAAe,CAAEtC,IAAKoE,EAAYC,GAAQ9D,WAAW,EAAOiC,eA1BrF,WAEXwD,EAAgBlC,OAAO9D,GAIvB,IAAMoH,EAAeC,MAAMC,KAAKpB,EAAYqB,QAAQC,QAAO,SAACC,GAAQ,OAAMf,EAAWgB,SAASD,EAAS,IAavG,GAXAL,EAAapD,SAAQ,SAAC2D,GAAW,OAAKzB,EAAYpC,OAAO6D,EAAY,IAErE1B,EAAgB3G,QAAUmG,EAAiB+B,QAAO,SAACI,GAC/C,IAAMC,EAAkBzD,EAAYwD,GACpC,OAEAC,IAAoB7H,GAEhBoH,EAAaM,SAASG,EAC9B,KAEK7B,EAAgBxF,KAAM,CACvB,IAA0B,IAAtBrB,EAAUG,QACV,OACJuF,IACArC,GAAkBA,GACtB,CACJ,EAC4HC,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,GAAQ0B,GACxM2B,EAAgB9C,IAAIlD,EAAKmH,EAC7B,CACApB,EAAiB+B,OAAOZ,EAAgB,EAAGC,EAjCjC,CAHA,CAqCd,IAGApB,EAAmBA,EAAiBQ,KAAI,SAAClC,GACrC,IAAMrE,EAAMqE,EAAMrE,IAClB,OAAOgG,EAAgBe,IAAI/G,GAAQqE,EAAUlD,EAAAA,cAAoBmB,EAAe,CAAEtC,IAAKoE,EAAYC,GAAQ9D,WAAW,EAAMmC,sBAAuBA,EAAuBC,KAAMA,GAAQ0B,EAC5L,IAMQlD,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM6E,EAAgBxF,KAC5DuF,EACAA,EAAiBQ,KAAI,SAAClC,GAAK,OAAK0D,EAAAA,EAAAA,cAAa1D,EAAM,IAC7D,C,2DGpKMU,GAAqBiD,E,QAAAA,eAAc,CAAC,E,0DCGpC9D,GAAkB8D,E,QAAAA,eAAc,K,kKCLhCC,EAAK,WACP,SAAAA,KAAcrI,EAAAA,EAAAA,GAAA,KAAAqI,GACV7H,KAAK8H,MAAQ,GACb9H,KAAK+H,UAAY,IAAIC,GACzB,CAkBC,OAlBArI,EAAAA,EAAAA,GAAAkI,EAAA,EAAAjI,IAAA,MAAAC,MACD,SAAIoI,GACA,IAAKjI,KAAK+H,UAAUpB,IAAIsB,GAGpB,OAFAjI,KAAK+H,UAAUG,IAAID,GACnBjI,KAAK8H,MAAMrC,KAAKwC,IACT,CAEf,GAAC,CAAArI,IAAA,SAAAC,MACD,SAAOoI,GACH,IAAME,EAAQnI,KAAK8H,MAAMpB,QAAQuB,IAClB,IAAXE,IACAnI,KAAK8H,MAAMJ,OAAOS,EAAO,GACzBnI,KAAK+H,UAAUrE,OAAOuE,GAE9B,GAAC,CAAArI,IAAA,QAAAC,MACD,WACIG,KAAK8H,MAAMtB,OAAS,EACpBxG,KAAK+H,UAAU9B,OACnB,KAAC4B,CAAA,CAtBM,GCEX,IAAMO,EAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,IAAAC,EDQA,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EAClBC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAQV,EAAWW,QAAO,SAACC,EAAKpJ,GAElC,OADAoJ,EAAIpJ,GDIZ,SAA0B4I,GAKtB,IAAIS,EAAY,IAAIpB,EAChBqB,EAAY,IAAIrB,EAChBsB,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAAChF,GAAmD,IACpDiF,EADuC/J,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,IACNmJ,EACjCa,EAAQD,EAAoBR,EAAYC,EAO9C,OAT0BxJ,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,IAItB2J,EAAYnB,IAAI1D,GAChBkF,EAAMxB,IAAI1D,IAAaiF,GAAqBZ,IAE5CM,EAAWF,EAAUnB,MAAMtB,QAExBhC,CACX,EAIAmF,OAAQ,SAACnF,GACL0E,EAAUU,OAAOpF,GACjB6E,EAAY3F,OAAOc,EACvB,EAIAyD,QAAS,SAAC4B,GAMN,GAAIhB,EACAO,GAAiB,MADrB,CAIAP,GAAe,EAEf,IAAA5H,EADyB,CAACiI,EAAWD,GAKrC,GALCA,EAAShI,EAAA,IAAEiI,EAASjI,EAAA,IAEXgF,QAEVkD,EAAWF,EAAUnB,MAAMtB,OAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAI0C,EAAU1C,IAAK,CAC/B,IAAMjC,EAAWyE,EAAUnB,MAAMrB,GACjCjC,EAASqF,GACLR,EAAY1C,IAAInC,KAChB+E,EAAKC,SAAShF,GACdgE,IAER,CAEJK,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAKtB,QAAQ4B,GApBjB,CAsBJ,GAEJ,OAAON,CACX,CCjFmBO,EAAiB,kBAAOtB,GAAe,CAAI,IAC/CQ,CACX,GAAG,CAAC,GACEe,EAAc,SAACC,GAAM,OAAKlB,EAAMkB,GAAQ/B,QAAQS,EAAM,EACtDuB,EAAe,SAAfA,IACF,IAAMrB,EAAYsB,YAAYC,MAC9B3B,GAAe,EACfE,EAAMC,MAAQF,EACR,IAAO,GACP2B,KAAKC,IAAID,KAAKE,IAAI1B,EAAYF,EAAME,UAnB/B,IAmBuD,GAClEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EACrBT,EAAWxE,QAAQmG,GACnBrB,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB2B,GAE1B,EACMM,EAAO,WACT/B,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkB2B,EAE1B,EACMT,EAAWpB,EAAWW,QAAO,SAACC,EAAKpJ,GACrC,IAAM2J,EAAOT,EAAMlJ,GAMnB,OALAoJ,EAAIpJ,GAAO,SAACqI,GAAkD,IAAzCuC,EAAS9K,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAAU+K,EAAS/K,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAG7C,OAFK8I,GACD+B,IACGhB,EAAKC,SAASvB,EAASuC,EAAWC,EAC7C,EACOzB,CACX,GAAG,CAAC,GAEJ,MAAO,CAAEQ,SAAAA,EAAUG,OADJ,SAAC1B,GAAO,OAAKG,EAAWxE,SAAQ,SAAChE,GAAG,OAAKkJ,EAAMlJ,GAAK+J,OAAO1B,EAAQ,GAAC,EACxDS,MAAAA,EAAOI,MAAAA,EACtC,CCtD2E4B,CAAqD,qBAA1BC,sBAAwCA,sBAAwBC,EAAAA,GAAM,GAA1JzF,EAAKkD,EAAfmB,SAAyBqB,EAAWxC,EAAnBsB,OAA4BE,EAASxB,EAAhBK,MAAkBI,EAAKT,EAALS,K,gFCE1DgC,GAAsBlD,EAAAA,EAAAA,eAAc,CACtCmD,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBvD,EAAAA,EAAAA,eAAc,CAAC,G,mBCA/BwD,GAAcxD,EAAAA,EAAAA,eAAc,CAAEyD,QAAQ,ICCtCC,EAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASC,aAAa,ECA5EC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYvK,GACjB,OAAQA,GACW,kBAARA,GACPwK,OAAOC,UAAUC,eAAeC,KAAK3K,EAAK,UAClD,CCDA,SAAS4K,EAAeC,GACpB,MAAoB,kBAANA,GAAkBhF,MAAMiF,QAAQD,EAClD,CCLA,SAASE,EAAoBF,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEG,KACjB,CCJA,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAAStK,OAAKqK,GCLpC,SAASE,EAAsBtM,GAC3B,OAAQkM,EAAoBlM,EAAMuM,UAC9BF,EAAaG,MAAK,SAACC,GAAI,OAAKV,EAAe/L,EAAMyM,GAAM,GAC/D,CACA,SAASC,EAAc1M,GACnB,OAAO2M,QAAQL,EAAsBtM,IAAUA,EAAM4M,SACzD,CCNA,SAASC,EAAuB7M,GAC5B,IAAA8M,ECFJ,SAAgC9M,EAAO0C,GACnC,GAAI4J,EAAsBtM,GAAQ,CAC9B,IAAQkC,EAAqBlC,EAArBkC,QAASqK,EAAYvM,EAAZuM,QACjB,MAAO,CACHrK,SAAqB,IAAZA,GAAqB6J,EAAe7J,GACvCA,OACAwB,EACN6I,QAASR,EAAeQ,GAAWA,OAAU7I,EAErD,CACA,OAAyB,IAAlB1D,EAAM+M,QAAoBrK,EAAU,CAAC,CAChD,CDTiCsK,CAAuBhN,GAAOyE,EAAAA,EAAAA,YAAWyG,IAA9DhJ,EAAO4K,EAAP5K,QAASqK,EAAOO,EAAPP,QACjB,OAAO5J,EAAAA,EAAAA,UAAQ,iBAAO,CAAET,QAAAA,EAASqK,QAAAA,EAAS,GAAG,CAACU,EAA0B/K,GAAU+K,EAA0BV,IAChH,CACA,SAASU,EAA0BC,GAC/B,OAAOlG,MAAMiF,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAEC,EAAA,SACnBpO,GACPmO,EAAmBnO,GAAO,CACtBqO,UAAW,SAAChO,GAAK,OAAKoN,EAAazN,GAAK6M,MAAK,SAACC,GAAI,QAAOzM,EAAMyM,EAAK,GAAC,EACvE,EAHN,IAAK,IAAM9M,KAAOyN,EAAcW,EAArBpO,G,wBChBLsO,GAA2BtG,EAAAA,EAAAA,eAAc,CAAC,GCL1CuG,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBrN,GAAoF,IAAjFsN,EAAiBtN,EAAjBsN,kBAAmBC,EAAmBvN,EAAnBuN,oBAAqBC,EAASxN,EAATwN,UAAWC,EAAczN,EAAdyN,eAAgBC,EAAS1N,EAAT0N,UAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,IAAMhP,KAAOgP,EACdb,EAAmBnO,IAAIiP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBd,EAAmBnO,IACnBgP,EAAShP,GAGxB,CDeyBkP,CAAaP,GA2ClC,IAAMQ,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyB/O,EAAOgP,GAK5B,IAAIC,EACEC,GAAcN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbnK,EAAAA,EAAAA,YAAWoG,IACX7K,GAAK,IACRmP,SAAUC,EAAYpP,KAElBgL,EAAakE,EAAblE,SACFtI,EAAUmK,EAAuB7M,GACjCqP,EAAcZ,EAAezO,EAAOgL,GAC1C,IAAKA,GAAYsE,EAAAA,EAAW,CAOxB5M,EAAQ6M,cEtCpB,SAA0Bb,EAAWW,EAAarP,EAAOuO,GACrD,IAAuBiB,GAAW/K,EAAAA,EAAAA,YAAWyG,GAArCqE,cACFE,GAAchL,EAAAA,EAAAA,YAAW0G,GACzBuE,GAAkBjL,EAAAA,EAAAA,YAAWZ,EAAAA,GAC7B8L,GAAsBlL,EAAAA,EAAAA,YAAWoG,GAAqBI,cACtD2E,GAAmB7Q,EAAAA,EAAAA,UAIzBwP,EAAsBA,GAAuBkB,EAAYI,UACpDD,EAAiB3Q,SAAWsP,IAC7BqB,EAAiB3Q,QAAUsP,EAAoBG,EAAW,CACtDW,YAAAA,EACAG,OAAAA,EACAxP,MAAAA,EACA0P,gBAAAA,EACAI,wBAAuBJ,IACW,IAA5BA,EAAgBxN,QAEtByN,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiB3Q,SACvCmC,EAAAA,EAAAA,qBAAmB,WACfmO,GAAiBA,EAAcQ,OAAO/P,EAAO0P,EACjD,IAKA,IAAMM,GAAejR,EAAAA,EAAAA,QAAO4N,QAAQ3M,EAAMyL,KAAkCwE,OAAOC,kBAgCnF,OA/BAlR,EAAAA,EAAAA,IAA0B,WACjBuQ,IAELA,EAAcY,SAWVH,EAAa/Q,SAAWsQ,EAAca,gBACtCb,EAAca,eAAeC,iBAErC,KACApK,EAAAA,EAAAA,YAAU,WACDsJ,IAELA,EAAce,kBACTN,EAAa/Q,SAAWsQ,EAAca,gBACvCb,EAAca,eAAeC,iBAE7BL,EAAa/Q,UACb+Q,EAAa/Q,SAAU,EAEvBgR,OAAOC,iBAAkB,GAEjC,IACOX,CACX,CFzBoCgB,CAAiB7B,EAAWW,EAAaH,EAAgBX,GAKjF,IAAMiC,GAA2B/L,EAAAA,EAAAA,YAAWwJ,GACtCwC,GAAWhM,EAAAA,EAAAA,YAAW0G,GAAaC,OACrC1I,EAAQ6M,gBACRN,EAAgBvM,EAAQ6M,cAAcV,aAEtCK,EAAgBuB,EAAUnC,EAAmBkC,GAErD,CAKA,OAAQ1P,EAAAA,cAAoBoK,EAAcwF,SAAU,CAAE9Q,MAAO8C,GACzDuM,GAAiBvM,EAAQ6M,cAAiBzO,EAAAA,cAAoBmO,GAAaL,EAAAA,EAAAA,GAAA,CAAIW,cAAe7M,EAAQ6M,eAAkBL,IAAqB,KAC7IV,EAAUE,EAAW1O,EG1DjC,SAAsBqP,EAAaE,EAAeP,GAC9C,OAAO/J,EAAAA,EAAAA,cAAY,SAAC0L,GAChBA,GAAYtB,EAAYuB,OAASvB,EAAYuB,MAAMD,GAC/CpB,IACAoB,EACMpB,EAAcqB,MAAMD,GACpBpB,EAAcsB,WAEpB7B,IAC2B,oBAAhBA,EACPA,EAAY2B,GAEPjF,EAAYsD,KACjBA,EAAY/P,QAAU0R,GAGlC,GAMA,CAACpB,GACL,CHmCwCuB,CAAazB,EAAa3M,EAAQ6M,cAAeP,GAAcK,EAAarE,EAAUtI,EAAQ6M,eAClI,IAGA,OADAT,EAAoBZ,GAAyBQ,EACtCI,CACX,CACA,SAASM,EAAW2B,GAAe,IAAZ5B,EAAQ4B,EAAR5B,SACb6B,GAAgBvM,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBzD,GACrD,OAAO+P,QAA8BtN,IAAbyL,EAClB6B,EAAgB,IAAM7B,EACtBA,CACV,CI5DA,SAAS8B,EAAkBC,GACvB,SAAS9O,EAAOsM,GAA6C,IAAlCyC,EAA2B1R,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,OAAO4O,EAAsB6C,EAAaxC,EAAWyC,GACzD,CACA,GAAqB,qBAAVC,MACP,OAAOhP,EAMX,IAAMiP,EAAiB,IAAIvN,IAC3B,OAAO,IAAIsN,MAAMhP,EAAQ,CAMrBwE,IAAK,SAAC0K,EAAS3R,GAOX,OAHK0R,EAAe3K,IAAI/G,IACpB0R,EAAexO,IAAIlD,EAAKyC,EAAOzC,IAE5B0R,EAAezK,IAAIjH,EAC9B,GAER,CCxCA,IAAM4R,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe9C,GACpB,MAKqB,kBAAdA,IAIHA,EAAUrH,SAAS,SAOvBkK,EAAqB9K,QAAQiI,IAAc,GAIvC,QAAQ+C,KAAK/C,GAIrB,CC3BA,IAAMgD,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI7J,IAAI4J,GCtB/B,SAASE,EAAoBlS,EAAGqB,GAAwB,IAApB6M,EAAM7M,EAAN6M,OAAQsB,EAAQnO,EAARmO,SACxC,OAAQyC,EAAelL,IAAI/G,IACvBA,EAAImS,WAAW,YACbjE,QAAuBnK,IAAbyL,OACLuC,EAAgB/R,IAAgB,YAARA,EACvC,CCRA,IAAMoS,EAAgB,SAACnS,GAAK,OAAK+M,QAAQ/M,GAASA,EAAMoS,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBX,EAAmBpL,OCRzC,IAAMgM,EAAwB,SAACC,GAAK,OAAK,SAAC7S,GAAG,MAAoB,kBAARA,GAAoBA,EAAImS,WAAWU,EAAM,GAC5FC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,SAAC/S,EAAOgT,GAC3B,OAAOA,GAAyB,kBAAVhT,EAChBgT,EAAKC,UAAUjT,GACfA,CACV,ECPMkT,EAAQ,SAACzI,EAAKD,EAAK4B,GAAC,OAAK7B,KAAKE,IAAIF,KAAKC,IAAI4B,EAAG3B,GAAMD,EAAI,ECExD2I,EAAS,CACXtB,KAAM,SAACzF,GAAC,MAAkB,kBAANA,CAAc,EAClCgH,MAAOC,WACPJ,UAAW,SAAC7G,GAAC,OAAKA,CAAC,GAEjBkH,GAAKtE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJmE,GAAM,IACTF,UAAW,SAAC7G,GAAC,OAAK8G,EAAM,EAAG,EAAG9G,EAAE,IAE9BmH,GAAKvE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJmE,GAAM,IACTK,QAAS,ICPPC,EAAW,SAACrH,GAAC,OAAK7B,KAAKmJ,MAAU,IAAJtH,GAAc,GAAM,EACjDuH,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAAS1H,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAM2H,GAAiB,SAACC,GAAI,MAAM,CAC9BnC,KAAM,SAACzF,GAAC,OAAK0H,EAAS1H,IAAMA,EAAE6H,SAASD,IAAiC,IAAxB5H,EAAE8H,MAAM,KAAKvN,MAAY,EACzEyM,MAAOC,WACPJ,UAAW,SAAC7G,GAAC,SAAAjK,OAAQiK,GAACjK,OAAG6R,EAAI,EAChC,EACKG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,IAAkBxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBoF,IAAO,IACVhB,MAAO,SAAChH,GAAC,OAAKgI,GAAQhB,MAAMhH,GAAK,GAAG,EACpC6G,UAAW,SAAC7G,GAAC,OAAKgI,GAAQnB,UAAc,IAAJ7G,EAAQ,ICb1CqI,IAAGzF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFmE,GAAM,IACTF,UAAW1I,KAAKmJ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExB1T,MAAO0T,GACPiB,SAAUjB,GACV5T,OAAQ4T,GACRkB,UAAWlB,GACX9T,KAAM8T,GACNxT,IAAKwT,GACLmB,MAAOnB,GACPoB,OAAQpB,GACRtT,KAAMsT,GAENqB,QAASrB,GACTsB,WAAYtB,GACZuB,aAAcvB,GACdwB,cAAexB,GACfyB,YAAazB,GACb0B,OAAQ1B,GACR2B,UAAW3B,GACX4B,YAAa5B,GACb6B,aAAc7B,GACd8B,WAAY9B,GAEZ+B,OAAQjC,GACRkC,QAASlC,GACTmC,QAASnC,GACToC,QAASpC,GACTZ,MAAAA,EACAiD,OAAQjD,EACRkD,OAAQlD,EACRmD,OAAQnD,EACRoD,KAAMxC,GACNyC,MAAOzC,GACP0C,MAAO1C,GACP2C,SAAUzC,GACV0C,WAAY1C,GACZ2C,WAAY3C,GACZ4C,WAAY5C,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACH6C,YAAa7C,GACb5B,qBAAsB4B,GACtB8C,QAAS7D,EACT8D,QAAS5C,GACT6C,QAAS7C,GACT8C,QAASjD,GAETkD,OAAQ9C,GAER+C,YAAalE,EACbmE,cAAenE,EACfoE,WAAYjD,IC9DhB,SAASkD,GAAgB9O,EAAO+O,EAAcC,EAASC,GACnD,IAAQlW,EAA4CiH,EAA5CjH,MAAOmW,EAAqClP,EAArCkP,KAAM9E,EAA+BpK,EAA/BoK,UAAW+E,EAAoBnP,EAApBmP,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMpY,KAAO6X,EAAc,CAC5B,IAAM5X,EAAQ4X,EAAa7X,GAI3B,GAAI8S,EAAkB9S,GAClBgY,EAAKhY,GAAOC,MADhB,CAKA,IAAMoY,EAAY1D,GAAiB3U,GAC7BsY,EAActF,EAAe/S,EAAOoY,GAC1C,GAAIpG,EAAelL,IAAI/G,GAAM,CAKzB,GAHAkY,GAAe,EACfhF,EAAUlT,GAAOsY,GAEZF,EACD,SAEAnY,KAAWoY,EAAU5E,SAAW,KAChC2E,GAAkB,EAC1B,MACSpY,EAAImS,WAAW,WAEpBgG,GAAqB,EACrBF,EAAgBjY,GAAOsY,GAGvBzW,EAAM7B,GAAOsY,CArBjB,CAuBJ,CAiBA,GAhBKT,EAAa3E,YACVgF,GAAgBH,EAChBlW,EAAMqR,UTtClB,SAAwBA,EAAS7R,EAAqEkX,EAAoBR,GAOtH,IAPyI,IAAAS,EAAAnX,EAAxGoX,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAArX,EAAEsX,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKb/R,EAAI,EAAGA,EAAI8L,EAAe9L,IAAK,CACpC,IAAM7G,EAAMgS,EAAmBnL,QACR9C,IAAnBmP,EAAUlT,KAEV4Y,GAAmB,GAAJxW,OADOkQ,EAAetS,IAAQA,EACV,KAAAoC,OAAI8Q,EAAUlT,GAAI,MAE7D,CAaA,OAZIyY,IAA+BvF,EAAUT,IACzCmG,GAAmB,iBAEvBA,EAAkBA,EAAgBC,OAG9Bd,EACAa,EAAkBb,EAAkB7E,EAAWqF,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CSW8BE,CAAehQ,EAAMoK,UAAW4E,EAASM,EAAiBL,GAEvElW,EAAMqR,YAKXrR,EAAMqR,UAAY,SAOtBiF,EAAoB,CACpB,IAAAY,EAA2Dd,EAAnDZ,QAAAA,OAAO,IAAA0B,EAAG,MAAKA,EAAAC,EAAoCf,EAAlCX,QAAAA,OAAO,IAAA0B,EAAG,MAAKA,EAAAC,EAAmBhB,EAAjBV,QAAAA,OAAO,IAAA0B,EAAG,EAACA,EACrDpX,EAAMoW,gBAAkB,GAAH7V,OAAMiV,EAAO,KAAAjV,OAAIkV,EAAO,KAAAlV,OAAImV,EACrD,CACJ,CCvEA,IAAM2B,GAAwB,WAAH,MAAU,CACjCrX,MAAO,CAAC,EACRqR,UAAW,CAAC,EACZ+E,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASmB,GAAkBC,EAAQC,EAAQhZ,GACvC,IAAK,IAAML,KAAOqZ,EACTjH,EAAciH,EAAOrZ,KAAUkS,EAAoBlS,EAAKK,KACzD+Y,EAAOpZ,GAAOqZ,EAAOrZ,GAGjC,CAQA,SAASsZ,GAASjZ,EAAOqP,EAAarE,GAClC,IACMxJ,EAAQ,CAAC,EAMf,OAFAsX,GAAkBtX,EALAxB,EAAMwB,OAAS,CAAC,EAKExB,GACpC2L,OAAOuN,OAAO1X,EAdlB,SAA+BR,EAAwBqO,EAAarE,GAAU,IAA5C0M,EAAiB1W,EAAjB0W,kBAC9B,OAAO/U,EAAAA,EAAAA,UAAQ,WACX,IAAM8F,EDfuB,CACjCjH,MAAO,CAAC,EACRqR,UAAW,CAAC,EACZ+E,gBAAiB,CAAC,EAClBD,KAAM,CAAC,GCaH,OADAJ,GAAgB9O,EAAO4G,EAAa,CAAE+I,4BAA6BpN,GAAY0M,GACxE/L,OAAOuN,OAAO,CAAC,EAAGzQ,EAAMkP,KAAMlP,EAAMjH,MAC/C,GAAG,CAAC6N,GACR,CAQyB8J,CAAuBnZ,EAAOqP,EAAarE,IACzDhL,EAAMoZ,gBAAkBpZ,EAAMoZ,gBAAgB5X,GAASA,CAClE,CACA,SAAS6X,GAAarZ,EAAOqP,EAAarE,GAEtC,IAAMsO,EAAY,CAAC,EACb9X,EAAQyX,GAASjZ,EAAOqP,EAAarE,GAoB3C,OAnBIhL,EAAMuN,OAA+B,IAAvBvN,EAAMuZ,eAEpBD,EAAUE,WAAY,EAEtBhY,EAAMiY,WACFjY,EAAMkY,iBACFlY,EAAMmY,mBACF,OAEZnY,EAAMoY,aACa,IAAf5Z,EAAMuN,KACA,OAAM,OAAAxL,OACgB,MAAf/B,EAAMuN,KAAe,IAAM,WAEzB7J,IAAnB1D,EAAM6Z,WACL7Z,EAAM8Z,OAAS9Z,EAAM+Z,YAAc/Z,EAAMga,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU9X,MAAQA,EACX8X,CACX,CChDA,IAAMW,GAAmB,IAAIlS,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASmS,GAAkBva,GACvB,OAAQA,EAAImS,WAAW,UAClBnS,EAAImS,WAAW,SAAmB,cAARnS,GAC3BA,EAAImS,WAAW,WACfnS,EAAImS,WAAW,UACfnS,EAAImS,WAAW,UACfnS,EAAImS,WAAW,aACfmI,GAAiBvT,IAAI/G,EAC7B,CCrDA,IACiCwa,GAD7BC,GAAgB,SAACza,GAAG,OAAMua,GAAkBva,EAAI,EAoBpD,KAnBiCwa,GAyBLE,QAAQ,0BAA0BjH,WArB1DgH,GAAgB,SAACza,GAAG,OAAKA,EAAImS,WAAW,OAASoI,GAAkBva,GAAOwa,GAAYxa,EAAI,EAwB1F,CADJ,MAAO2a,IACH,CAEJ,SAASC,GAAYva,EAAOwa,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAM/a,KAAOK,EAQF,WAARL,GAA4C,kBAAjBK,EAAMiD,SAEjCmX,GAAcza,KACU,IAAvB8a,GAA+BP,GAAkBva,KAChD6a,IAAUN,GAAkBva,IAE7BK,EAAiB,WAAKL,EAAImS,WAAW,aACtC4I,EAAc/a,GAAOK,EAAML,IAGnC,OAAO+a,CACX,CCrDe,SAASC,GAAyB3B,EAAQ4B,GACvD,GAAc,MAAV5B,EAAgB,MAAO,CAAC,EAC5B,IACIrZ,EAAK6G,EADLuS,ECHS,SAAuCC,EAAQ4B,GAC5D,GAAc,MAAV5B,EAAgB,MAAO,CAAC,EAC5B,IAEIrZ,EAAK6G,EAFLuS,EAAS,CAAC,EACV8B,EAAalP,OAAOzE,KAAK8R,GAE7B,IAAKxS,EAAI,EAAGA,EAAIqU,EAAWtU,OAAQC,IACjC7G,EAAMkb,EAAWrU,GACboU,EAASnU,QAAQ9G,IAAQ,IAC7BoZ,EAAOpZ,GAAOqZ,EAAOrZ,IAEvB,OAAOoZ,CACT,CDRe,CAA6BC,EAAQ4B,GAElD,GAAIjP,OAAOmP,sBAAuB,CAChC,IAAIC,EAAmBpP,OAAOmP,sBAAsB9B,GACpD,IAAKxS,EAAI,EAAGA,EAAIuU,EAAiBxU,OAAQC,IACvC7G,EAAMob,EAAiBvU,GACnBoU,EAASnU,QAAQ9G,IAAQ,GACxBgM,OAAOC,UAAUoP,qBAAqBlP,KAAKkN,EAAQrZ,KACxDoZ,EAAOpZ,GAAOqZ,EAAOrZ,GAEzB,CACA,OAAOoZ,CACT,CEbA,SAASkC,GAAWC,EAAQC,EAAQhb,GAChC,MAAyB,kBAAX+a,EACRA,EACAjH,GAAGpB,UAAUsI,EAAShb,EAAO+a,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,iGCDX,SAASE,GAAc9S,EAAKzH,EAEfyW,EAAS+D,EAAU9D,GAAmB,IAFnB+D,EAAKza,EAALya,MAAOC,EAAK1a,EAAL0a,MAAOC,EAAS3a,EAAT2a,UAAW3E,EAAOhW,EAAPgW,QAASC,EAAOjW,EAAPiW,QAAS2E,EAAU5a,EAAV4a,WAAUC,EAAA7a,EAAE8a,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAA/a,EAAEgb,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQlH,GALAxE,GAAgB9O,EADXkS,GAAA3Z,EAAAib,IAC0BxE,EAASC,GAKpC8D,EACI/S,EAAMjH,MAAM0a,UACZzT,EAAM0T,MAAMD,QAAUzT,EAAMjH,MAAM0a,aAF1C,CAMAzT,EAAM0T,MAAQ1T,EAAMjH,MACpBiH,EAAMjH,MAAQ,CAAC,EACf,IAAQ2a,EAA6B1T,EAA7B0T,MAAO3a,EAAsBiH,EAAtBjH,MAAO4a,EAAe3T,EAAf2T,WAKlBD,EAAMtJ,YACFuJ,IACA5a,EAAMqR,UAAYsJ,EAAMtJ,kBACrBsJ,EAAMtJ,WAGbuJ,SACa1Y,IAAZsT,QAAqCtT,IAAZuT,GAAyBzV,EAAMqR,aACzDrR,EAAMoW,gBFzBd,SAAgCwE,EAAYpF,EAASC,GACjD,IAAMoF,EAAYpB,GAAWjE,EAASoF,EAAWlK,EAAGkK,EAAW7b,OACzD+b,EAAYrB,GAAWhE,EAASmF,EAAWjK,EAAGiK,EAAW/b,QAC/D,MAAO,GAAP0B,OAAUsa,EAAS,KAAAta,OAAIua,EAC3B,CEqBgCC,CAAuBH,OAAwB1Y,IAAZsT,EAAwBA,EAAU,QAAiBtT,IAAZuT,EAAwBA,EAAU,UAG1HvT,IAAV+X,IACAU,EAAMjK,EAAIuJ,QACA/X,IAAVgY,IACAS,EAAMhK,EAAIuJ,QACIhY,IAAdiY,IACAQ,EAAMhJ,MAAQwI,QAECjY,IAAfkY,GD7BR,SAAsBO,EAAO5V,GAAqD,IAA7CiW,EAAO/c,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAG0b,EAAM1b,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAGgd,IAAWhd,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GAErE0c,EAAMP,WAAa,EAGnB,IAAM1U,EAAOuV,EAAcrB,GAAWE,GAEtCa,EAAMjV,EAAKiU,QAAUlH,GAAGpB,WAAWsI,GAEnC,IAAMS,EAAa3H,GAAGpB,UAAUtM,GAC1BuV,EAAc7H,GAAGpB,UAAU2J,GACjCL,EAAMjV,EAAKmU,OAAS,GAAHtZ,OAAM6Z,EAAU,KAAA7Z,OAAI+Z,EACzC,CCkBQY,CAAaP,EAAOP,EAAYE,EAAaE,GAAY,EA3B7D,CA6BJ,CC/CA,IAAMW,GAAuB,WAAH,OAAA/N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GTFW,CACjCpN,MAAO,CAAC,EACRqR,UAAW,CAAC,EACZ+E,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ISDmB,IAC1BwE,MAAO,CAAC,GAAC,ECJPX,GAAW,SAACoB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIpR,aAAuB,ECMhF,SAASqR,GAAY7c,EAAOqP,EAAayN,EAAWpO,GAChD,IAAMqO,GAAcpa,EAAAA,EAAAA,UAAQ,WACxB,IAAM8F,EAAQkU,KAEd,OADApB,GAAc9S,EAAO4G,EAAa,CAAE+I,4BAA4B,GAASoD,GAAS9M,GAAY1O,EAAM0X,oBACpG9I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOnG,EAAM0T,OAAK,IACd3a,OAAKoN,EAAAA,EAAAA,GAAA,GAAOnG,EAAMjH,QAE1B,GAAG,CAAC6N,IACJ,GAAIrP,EAAMwB,MAAO,CACb,IAAMwb,EAAY,CAAC,EACnBlE,GAAkBkE,EAAWhd,EAAMwB,MAAOxB,GAC1C+c,EAAYvb,OAAKoN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQoO,GAAcD,EAAYvb,MACvD,CACA,OAAOub,CACX,CCdA,SAASE,KAA4C,IAA5BxC,EAAkBhb,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GACjC+O,EAAY,SAACE,EAAW1O,EAAOmB,EAAGH,EAAoBgK,GAAa,IAA7BwM,EAAYxW,EAAZwW,aAIlCuF,GAHiBvL,EAAe9C,GAChCmO,GACAxD,IAC6BrZ,EAAOwX,EAAcxM,EAAU0D,GAC5DgM,EAAgBH,GAAYva,EAA4B,kBAAd0O,EAAwB+L,GAClEyC,GAAYtO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX8L,GACAqC,GAAW,IACd5b,IAAAA,IAOIN,EAAab,EAAba,SACFsc,GAAmBxa,EAAAA,EAAAA,UAAQ,kBAAOoP,EAAclR,GAAYA,EAAS+F,MAAQ/F,CAAQ,GAAG,CAACA,IAC/F,OAAOa,EAAAA,EAAAA,eAAcgN,GAASE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBsO,GAAY,IACfrc,SAAUsc,IAElB,EACA,OAAO3O,CACX,CChCA,SAAS4O,GAAWtd,EAAOkB,EAAmBqc,EAAWC,GAAY,IAAtC9b,EAAKR,EAALQ,MAAOmW,EAAI3W,EAAJ2W,KAGlC,IAAK,IAAMhY,KAFXgM,OAAOuN,OAAOpZ,EAAQ0B,MAAOA,EAAO8b,GAAcA,EAAWC,oBAAoBF,IAE/D1F,EACd7X,EAAQ0B,MAAMgc,YAAY7d,EAAKgY,EAAKhY,GAE5C,CCHA,IAAM8d,GAAsB,IAAI1V,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS2V,GAAU5d,EAAS6d,EAAaC,EAAYN,GAEjD,IAAK,IAAM3d,KADXyd,GAAWtd,EAAS6d,OAAaja,EAAW4Z,GAC1BK,EAAYxB,MAC1Brc,EAAQ+d,aAAcJ,GAAoB/W,IAAI/G,GAA0BA,EAAnB0L,EAAY1L,GAAYge,EAAYxB,MAAMxc,GAEvG,CCNA,SAASme,GAA4B9d,EAAOH,GACxC,IAAQ2B,EAAUxB,EAAVwB,MACFuc,EAAY,CAAC,EACnB,IAAK,IAAMpe,KAAO6B,GACVuQ,EAAcvQ,EAAM7B,KACnBE,EAAU2B,OAASuQ,EAAclS,EAAU2B,MAAM7B,KAClDkS,EAAoBlS,EAAKK,MACzB+d,EAAUpe,GAAO6B,EAAM7B,IAG/B,OAAOoe,CACX,CCVA,SAASD,GAA4B9d,EAAOH,GACxC,IAAMke,EAAYC,GAA8Bhe,EAAOH,GACvD,IAAK,IAAMF,KAAOK,EAAO,CACrB,GAAI+R,EAAc/R,EAAML,KAASoS,EAAclS,EAAUF,IAIrDoe,GAHuD,IAArCpM,EAAmBlL,QAAQ9G,GACvC,OAASA,EAAIse,OAAO,GAAGC,cAAgBve,EAAIwe,UAAU,GACrDxe,GACiBK,EAAML,EAErC,CACA,OAAOoe,CACX,CCfA,SAASK,GAAwBpe,EAAOqe,EAAYjc,GAAkD,IAA1Ckc,EAAa7e,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8e,EAAe9e,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAf4e,IACPA,EAAaA,OAAsB3a,IAAXtB,EAAuBA,EAASpC,EAAMoC,OAAQkc,EAAeC,IAM/D,kBAAfF,IACPA,EAAare,EAAM4M,UAAY5M,EAAM4M,SAASyR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB3a,IAAXtB,EAAuBA,EAASpC,EAAMoC,OAAQkc,EAAeC,IAElFF,CACX,C,eCvBMG,GAAoB,SAACxS,GACvB,OAAOhF,MAAMiF,QAAQD,EACzB,ECMA,SAASyS,GAAmB7e,GACxB,ICPmBoM,EDOb0S,EAAiB3M,EAAcnS,GAASA,EAAMgH,MAAQhH,EAC5D,OCRmBoM,EDQE0S,ECPd/R,QAAQX,GAAkB,kBAANA,GAAkBA,EAAE2S,KAAO3S,EAAE4S,SDQlDF,EAAeE,UACfF,CACV,C,sCEMA,IAAMG,GAAqB,SAACC,GAAM,OAAK,SAAC9e,EAAOgL,GAC3C,IAAMtI,GAAU+B,EAAAA,EAAAA,YAAWyG,GACrBwE,GAAkBjL,EAAAA,EAAAA,YAAWZ,EAAAA,GAC7Bkb,EAAO,WAAH,OAbd,SAAkB/d,EAA+DhB,EAAO0C,EAASgN,GAAiB,IAA7FoO,EAA2B9c,EAA3B8c,4BAA6BkB,EAAiBhe,EAAjBge,kBAAmBC,EAAOje,EAAPie,QAC3DxW,EAAQ,CACV+O,aAAc0H,GAAiBlf,EAAO0C,EAASgN,EAAiBoO,GAChEH,YAAaqB,KAKjB,OAHIC,IACAxW,EAAMmI,MAAQ,SAACD,GAAQ,OAAKsO,EAAQjf,EAAO2Q,EAAUlI,EAAM,GAExDA,CACX,CAIuB0W,CAAUL,EAAQ9e,EAAO0C,EAASgN,EAAgB,EACrE,OAAO1E,EAAW+T,KAASvc,EAAAA,GAAAA,GAAYuc,EAC3C,CAAC,EACD,SAASG,GAAiBlf,EAAO0C,EAASgN,EAAiB0P,GACvD,IAAMnc,EAAS,CAAC,EACVoc,EAAeD,EAAmBpf,EAAO,CAAC,GAChD,IAAK,IAAML,KAAO0f,EACdpc,EAAOtD,GAAO8e,GAAmBY,EAAa1f,IAElD,IAAMuC,EAAqBlC,EAArBkC,QAASqK,EAAYvM,EAAZuM,QACT+S,EAA0BhT,EAAsBtM,GAChDuf,EAAkB7S,EAAc1M,GAClC0C,GACA6c,IACCD,IACiB,IAAlBtf,EAAM+M,eACUrJ,IAAZxB,IACAA,EAAUQ,EAAQR,cACNwB,IAAZ6I,IACAA,EAAU7J,EAAQ6J,UAE1B,IAAIiT,IAA4B9P,IACE,IAA5BA,EAAgBxN,QAGhBud,GADND,EAA4BA,IAAyC,IAAZtd,GACRqK,EAAUrK,EACvDud,GACwB,mBAAjBA,IACNvT,EAAoBuT,KACRzY,MAAMiF,QAAQwT,GAAgBA,EAAe,CAACA,IACtD9b,SAAQ,SAAC0a,GACV,IAAMqB,EAAWtB,GAAwBpe,EAAOqe,GAChD,GAAKqB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8B5G,GAAW2G,EAA1BE,WAAqBjF,GAAK+E,EAAQzD,KACzD,IAAK,IAAMtc,KAAOoZ,EAAQ,CACtB,IAAI8G,EAAc9G,EAAOpZ,GACzB,GAAIqH,MAAMiF,QAAQ4T,GAQdA,EAAcA,EAHAL,EACRK,EAAYtZ,OAAS,EACrB,GAGU,OAAhBsZ,IACA5c,EAAOtD,GAAOkgB,EAEtB,CACA,IAAK,IAAMlgB,KAAOggB,EACd1c,EAAOtD,GAAOggB,EAAchgB,EAnBtB,CAoBd,IAEJ,OAAOsD,CACX,C,eCtEM6c,GAAkB,CACpBrR,eAAgBoQ,GAAmB,CAC/Bf,4BAA6BA,GAC7BkB,kBAAmBrC,GACnBsC,QAAS,SAACjf,EAAO2Q,EAAQ3P,GAAoC,IAAhC2c,EAAW3c,EAAX2c,YAAanG,EAAYxW,EAAZwW,aACtCtS,GAAAA,GAAAA,MAAW,WACP,IACIyY,EAAYvB,WAEJ,oBADGzL,EAASoP,QAEVpP,EAASoP,UACTpP,EAASqP,uBAUvB,CARA,MAAO1c,GAEHqa,EAAYvB,WAAa,CACrBlK,EAAG,EACHC,EAAG,EACH5R,MAAO,EACPF,OAAQ,EAEhB,CACJ,IACA6E,GAAAA,GAAAA,QAAa,WACTqW,GAAcoC,EAAanG,EAAc,CAAEY,4BAA4B,GAASoD,GAAS7K,EAASsP,SAAUjgB,EAAM0X,mBAClHgG,GAAU/M,EAAUgN,EACxB,GACJ,KC/BFuC,GAAmB,CACrBzR,eAAgBoQ,GAAmB,CAC/Bf,4BAAAA,GACAkB,kBAAmBnG,M,8CCP3B,SAASsH,GAAYpH,EAAQqH,EAAWC,GAAsC,IAA7B5I,EAAOhY,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAE6gB,SAAS,GAElE,OADAvH,EAAOwH,iBAAiBH,EAAWC,EAAS5I,GACrC,kBAAMsB,EAAOyH,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAASthB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHuhB,MAAO,CACH9O,EAAGwO,EAAMK,EAAY,KACrB5O,EAAGuO,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBlI,EAAQqH,EAAWC,EAAS5I,GACjD,OAAO0I,GAAYpH,EAAQqH,EDMR,SAACC,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,CCR0CQ,CAAeb,GAAU5I,EACnE,CCEA,IAAM0J,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAACrV,GAAC,OAAKqV,EAAED,EAAEpV,GAAG,GAC3CsV,GAAO,WAAH,QAAAC,EAAA9hB,UAAA8G,OAAOib,EAAY,IAAAxa,MAAAua,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAhiB,UAAAgiB,GAAA,OAAKD,EAAa1Y,OAAOqY,GAAiB,ECRvE,SAASO,GAAWjV,GAChB,IAAIkV,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOlV,EAJM,WACbkV,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAcvU,GACnB,IAAIoU,GAAO,EACX,GAAa,MAATpU,EACAoU,EAAOE,UAEN,GAAa,MAATtU,EACLoU,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,IAAM7iB,EAAAA,GAAAA,GAAA,KAAA4iB,GACdpiB,KAAKjB,WAAY,EACjBiB,KAAKqiB,KAAOA,CAChB,CACY,OADX1iB,EAAAA,GAAAA,GAAAyiB,EAAA,EAAAxiB,IAAA,SAAAC,MACD,WAAW,KAACuiB,CAAA,CALH,GCMb,SAASE,GAAcD,EAAME,GACzB,IAAMlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOrB,GAAgBmB,EAAKnjB,QAASmhB,GAXjB,SAACM,EAAO8B,GACxB,GAA0B,UAAtB9B,EAAMC,cAA2BsB,KAArC,CAEA,IAAMjiB,EAAQoiB,EAAKK,WACfL,EAAKhS,gBAAkBpQ,EAAM0iB,YAC7BN,EAAKhS,eAAeuS,UAAU,aAAcL,GAE5CtiB,EAAMuiB,IACNrd,GAAAA,GAAAA,QAAa,kBAAMlF,EAAMuiB,GAAc7B,EAAO8B,EAAK,GAN7C,CAQd,GAC6D,CACzDlC,SAAU8B,EAAKK,WAAWF,IAElC,CAAC,IACKK,GAAY,SAAAC,IAAAzjB,EAAAA,GAAAA,GAAAwjB,EAAAC,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAAsjB,GAAA,SAAAA,IAAA,OAAArjB,EAAAA,GAAAA,GAAA,KAAAqjB,GAAAvjB,EAAAG,MAAA,KAAAC,UAAA,CAID,OAJCC,EAAAA,GAAAA,GAAAkjB,EAAA,EAAAjjB,IAAA,QAAAC,MACd,WACIG,KAAK8Q,QAAUyQ,GAAKe,GAActiB,KAAKqiB,MAAM,GAAOC,GAActiB,KAAKqiB,MAAM,GACjF,GAAC,CAAAziB,IAAA,UAAAC,MACD,WAAY,KAACgjB,CAAA,CAJC,CAAST,ICpBrBW,GAAY,SAAAD,IAAAzjB,EAAAA,GAAAA,GAAA0jB,EAAAD,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAAwjB,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZxjB,EAAAA,GAAAA,GAAA,KAAAujB,IACVC,EAAA1jB,EAAAG,MAAA,KAASC,YACJ6iB,UAAW,EAAMS,CAC1B,CA6Ba,OA7BZrjB,EAAAA,GAAAA,GAAAojB,EAAA,EAAAnjB,IAAA,UAAAC,MACD,WACI,IAAIojB,GAAiB,EAOrB,IACIA,EAAiBjjB,KAAKqiB,KAAKnjB,QAAQgkB,QAAQ,iBAI/C,CAFA,MAAO3f,GACH0f,GAAiB,CACrB,CACKA,GAAmBjjB,KAAKqiB,KAAKhS,iBAElCrQ,KAAKqiB,KAAKhS,eAAeuS,UAAU,cAAc,GACjD5iB,KAAKuiB,UAAW,EACpB,GAAC,CAAA3iB,IAAA,SAAAC,MACD,WACSG,KAAKuiB,UAAaviB,KAAKqiB,KAAKhS,iBAEjCrQ,KAAKqiB,KAAKhS,eAAeuS,UAAU,cAAc,GACjD5iB,KAAKuiB,UAAW,EACpB,GAAC,CAAA3iB,IAAA,QAAAC,MACD,WAAQ,IAAAsjB,EAAA,KACJnjB,KAAK8Q,QAAUyQ,GAAKnB,GAAYpgB,KAAKqiB,KAAKnjB,QAAS,SAAS,kBAAMikB,EAAKC,SAAS,IAAGhD,GAAYpgB,KAAKqiB,KAAKnjB,QAAS,QAAQ,kBAAMikB,EAAKE,QAAQ,IACjJ,GAAC,CAAAzjB,IAAA,UAAAC,MACD,WAAY,KAACkjB,CAAA,CAjCC,CAASX,ICGrBkB,GAAgB,SAAhBA,EAAiB7T,EAAQxL,GAC3B,QAAKA,IAGIwL,IAAWxL,GAITqf,EAAc7T,EAAQxL,EAAMsf,eAE3C,E,WCPA,SAASC,GAA0B9W,EAAM4T,GACrC,GAAKA,EAAL,CAEA,IAAMmD,EAAwB,IAAIC,aAAa,UAAYhX,GAC3D4T,EAAQmD,EAAuB1C,GAAiB0C,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAb,IAAAzjB,EAAAA,GAAAA,GAAAskB,EAAAb,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAAokB,GACd,SAAAA,IAAc,IAAAX,EA0DR,OA1DQxjB,EAAAA,GAAAA,GAAA,KAAAmkB,IACVX,EAAA1jB,EAAAG,MAAA,KAASC,YACJkkB,qBAAuBhZ,GAAAA,EAC5BoY,EAAKa,mBAAqBjZ,GAAAA,EAC1BoY,EAAKc,0BAA4BlZ,GAAAA,EACjCoY,EAAKe,kBAAoB,SAACC,EAAYC,GAClC,IAAIjB,EAAKkB,WAAT,CAEAlB,EAAKa,qBACL,IAAM5jB,EAAQ+iB,EAAKX,KAAKK,WAgBlByB,EAA0BjD,GAAgBhR,OAAQ,aAfhC,SAACkU,EAAUC,GAC/B,GAAKrB,EAAKsB,gBAAV,CAEA,IAAAC,EAAgDvB,EAAKX,KAAKK,WAAlD3I,EAAKwK,EAALxK,MAAOyK,EAAWD,EAAXC,YAAaC,EAAeF,EAAfE,gBAC5Btf,GAAAA,GAAAA,QAAa,WAKRsf,GACInB,GAAcN,EAAKX,KAAKnjB,QAASklB,EAASpL,QAEzCe,GAASA,EAAMqK,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EAE/C,GAXU,CAYd,GACsF,CAAE9D,UAAWtgB,EAAM8Z,OAAS9Z,EAAmB,eAC/HykB,EAA8BxD,GAAgBhR,OAAQ,iBAAiB,SAACyU,EAAaC,GAAU,OAAK5B,EAAK6B,YAAYF,EAAaC,EAAW,GAAE,CAAErE,UAAWtgB,EAAMukB,aAAevkB,EAAuB,mBAC9M+iB,EAAKa,mBAAqBtC,GAAK4C,EAAyBO,GACxD1B,EAAK8B,WAAWd,EAAYC,EArBlB,CAsBd,EACAjB,EAAK+B,qBAAuB,WACxB,IAmBMC,EAAwB5E,GAAY4C,EAAKX,KAAKnjB,QAAS,WAnBvC,SAAC+lB,GACnB,GAAyB,UAArBA,EAAarlB,MAAmBojB,EAAKkB,WAAzC,CAYAlB,EAAKa,qBACLb,EAAKa,mBAAqBzD,GAAY4C,EAAKX,KAAKnjB,QAAS,SAXrC,SAACgmB,GACM,UAAnBA,EAAWtlB,KAAoBojB,EAAKsB,iBAExCd,GAA0B,MAAM,SAAC7C,EAAO8B,GACpC,IAAQ1I,EAAUiJ,EAAKX,KAAKK,WAApB3I,MACJA,GACA5U,GAAAA,GAAAA,QAAa,kBAAM4U,EAAM4G,EAAO8B,EAAK,GAE7C,GACJ,IAGAe,GAA0B,QAAQ,SAAC7C,EAAO8B,GACtCO,EAAK8B,WAAWnE,EAAO8B,EAC3B,GAfU,CAgBd,IAOM0C,EAAqB/E,GAAY4C,EAAKX,KAAKnjB,QAAS,QALvC,WACV8jB,EAAKkB,YAEVV,GAA0B,UAAU,SAACmB,EAAaC,GAAU,OAAK5B,EAAK6B,YAAYF,EAAaC,EAAW,GAC9G,IAEA5B,EAAKc,0BAA4BvC,GAAKyD,EAAuBG,EACjE,EAAEnC,CACN,CAyCC,OAzCArjB,EAAAA,GAAAA,GAAAgkB,EAAA,EAAA/jB,IAAA,aAAAC,MACD,SAAW8gB,EAAO8B,GACdziB,KAAKkkB,YAAa,EAClB,IAAAkB,EAAiCplB,KAAKqiB,KAAKK,WAAnC1I,EAAUoL,EAAVpL,WAAoBoL,EAARnL,UAIJja,KAAKqiB,KAAKhS,gBACtBrQ,KAAKqiB,KAAKhS,eAAeuS,UAAU,YAAY,GAE/C5I,GACA7U,GAAAA,GAAAA,QAAa,kBAAM6U,EAAW2G,EAAO8B,EAAK,GAElD,GAAC,CAAA7iB,IAAA,gBAAAC,MACD,WAOI,OANAG,KAAK6jB,qBACL7jB,KAAKkkB,YAAa,EACJlkB,KAAKqiB,KAAKK,WACdzI,UAAYja,KAAKqiB,KAAKhS,gBAC5BrQ,KAAKqiB,KAAKhS,eAAeuS,UAAU,YAAY,IAE3CV,IACZ,GAAC,CAAAtiB,IAAA,cAAAC,MACD,SAAY8gB,EAAO8B,GACf,GAAKziB,KAAKskB,gBAAV,CAEA,IAAQE,EAAgBxkB,KAAKqiB,KAAKK,WAA1B8B,YACJA,GACArf,GAAAA,GAAAA,QAAa,kBAAMqf,EAAY7D,EAAO8B,EAAK,GAHrC,CAKd,GAAC,CAAA7iB,IAAA,QAAAC,MACD,WACI,IAAMI,EAAQD,KAAKqiB,KAAKK,WAClB2C,EAAwBnE,GAAgBjhB,EAAMwkB,gBAAkBvU,OAASlQ,KAAKqiB,KAAKnjB,QAAS,cAAec,KAAK+jB,kBAAmB,CAAExD,UAAWtgB,EAAM+Z,YAAc/Z,EAAsB,kBAC1LqlB,EAAsBlF,GAAYpgB,KAAKqiB,KAAKnjB,QAAS,QAASc,KAAK+kB,sBACzE/kB,KAAK4jB,qBAAuBrC,GAAK8D,EAAuBC,EAC5D,GAAC,CAAA1lB,IAAA,UAAAC,MACD,WACIG,KAAK4jB,uBACL5jB,KAAK6jB,qBACL7jB,KAAK8jB,2BACT,KAACH,CAAA,CArGa,CAASvB,I,YCXrBmD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMnhB,EAAW+gB,GAAkB1e,IAAI8e,EAAM3M,QAC7CxU,GAAYA,EAASmhB,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQjiB,QAAQ8hB,GACpB,EAoBA,SAASI,GAAoB/lB,EAAS2X,EAASlT,GAC3C,IAAMuhB,EApBV,SAAiC9kB,GAAuB,IAApB+kB,EAAI/kB,EAAJ+kB,KAAStO,EAAOkD,GAAA3Z,EAAAib,IAC1C+J,EAAaD,GAAQtkB,SAItB+jB,GAAU9e,IAAIsf,IACfR,GAAU3iB,IAAImjB,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAU5e,IAAIof,GAC9BrmB,EAAMumB,KAAKC,UAAU1O,GAQ3B,OAHKwO,EAActmB,KACfsmB,EAActmB,GAAO,IAAIymB,qBAAqBT,IAAwB/W,EAAAA,EAAAA,GAAA,CAAImX,KAAAA,GAAStO,KAEhFwO,EAActmB,EACzB,CAEsC0mB,CAAyB5O,GAG3D,OAFA6N,GAAkBziB,IAAI/C,EAASyE,GAC/BuhB,EAA0BQ,QAAQxmB,GAC3B,WACHwlB,GAAkB7hB,OAAO3D,GACzBgmB,EAA0BS,UAAUzmB,EACxC,CACJ,CC3CA,IAAM0mB,GAAiB,CACnBha,KAAM,EACNia,IAAK,GAEHC,GAAa,SAAA7D,IAAAzjB,EAAAA,GAAAA,GAAAsnB,EAAA7D,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAAonB,GACf,SAAAA,IAAc,IAAA3D,EAGY,OAHZxjB,EAAAA,GAAAA,GAAA,KAAAmnB,IACV3D,EAAA1jB,EAAAG,MAAA,KAASC,YACJknB,gBAAiB,EACtB5D,EAAK6D,UAAW,EAAM7D,CAC1B,CAqDa,OArDZrjB,EAAAA,GAAAA,GAAAgnB,EAAA,EAAA/mB,IAAA,gBAAAC,MACD,WAAgB,IAAAsjB,EAAA,KACZnjB,KAAK8Q,UACL,IAA8CgW,EAApB9mB,KAAKqiB,KAAKK,WAA5BqE,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbd,EAAoDe,EAApDf,KAAcgB,EAAsCD,EAA9CnR,OAAMqR,EAAwCF,EAA1BG,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASJ,EAATI,KAC7CzP,EAAU,CACZsO,KAAMA,EAAOA,EAAK9mB,aAAUyE,EAC5BqjB,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoB9lB,KAAKqiB,KAAKnjB,QAASwY,GA7BjB,SAACiO,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAIlE,EAAK0D,WAAaQ,IAEtBlE,EAAK0D,SAAWQ,GAKZF,GAASE,IAAkBlE,EAAKyD,gBAApC,CAGSS,IACLlE,EAAKyD,gBAAiB,GAEtBzD,EAAKd,KAAKhS,gBACV8S,EAAKd,KAAKhS,eAAeuS,UAAU,cAAeyE,GAMtD,IAAAC,EAA6CnE,EAAKd,KAAKK,WAA/C6E,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnBhjB,EAAW6iB,EAAiBE,EAAkBC,EACpDhjB,GAAYA,EAASmhB,EAVrB,CAWJ,GAEJ,GAAC,CAAA/lB,IAAA,QAAAC,MACD,WACIG,KAAKynB,eACT,GAAC,CAAA7nB,IAAA,SAAAC,MACD,WACI,GAAoC,qBAAzBwmB,qBAAX,CAEA,IAAAqB,EAA6B1nB,KAAKqiB,KAA1BpiB,EAAKynB,EAALznB,MAAOH,EAAS4nB,EAAT5nB,UACT6nB,EAAoB,CAAC,SAAU,SAAU,QAAQlb,KAO/D,SAAiCxL,GAA0D,IAAA2mB,EAAA3mB,EAAvD8lB,SAAAA,OAAQ,IAAAa,EAAG,CAAC,EAACA,EAAwCC,GAAxCnoB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAsC,CAAC,GAAjCqnB,SAAUe,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAACnb,GAAI,OAAKqa,EAASra,KAAUob,EAAapb,EAAK,CAC1D,CAToEqb,CAAyB9nB,EAAOH,IACxF6nB,GACA3nB,KAAKynB,eAJC,CAMd,GAAC,CAAA7nB,IAAA,UAAAC,MACD,WAAY,KAAC8mB,CAAA,CA1DE,CAASvE,ICF5B,IAAM4F,GAAoB,CACtBna,OAAQ,CACJuU,QAASuE,IAEbhZ,IAAK,CACDyU,QAASuB,IAEblW,MAAO,CACH2U,QAASW,IAEbrV,MAAO,CACH0U,QAASS,K,WChBjB,SAASoF,GAAeC,EAAMC,GAC1B,IAAKlhB,MAAMiF,QAAQic,GACf,OAAO,EACX,IAAMC,EAAaD,EAAK3hB,OACxB,GAAI4hB,IAAeF,EAAK1hB,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAI2hB,EAAY3hB,IAC5B,GAAI0hB,EAAK1hB,KAAOyhB,EAAKzhB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAAS4hB,GAAe7Y,EAAe8O,EAAYjc,GAC/C,IAAMpC,EAAQuP,EAAckT,WAC5B,OAAOrE,GAAwBpe,EAAOqe,OAAuB3a,IAAXtB,EAAuBA,EAASpC,EAAMoC,OAf5F,SAAoBmN,GAChB,IAAMtQ,EAAU,CAAC,EAEjB,OADAsQ,EAActM,OAAOU,SAAQ,SAAC/D,EAAOD,GAAG,OAAMV,EAAQU,GAAOC,EAAMgH,KAAK,IACjE3H,CACX,CAWoGopB,CAAW9Y,GAP/G,SAAqBA,GACjB,IAAM+Y,EAAW,CAAC,EAElB,OADA/Y,EAActM,OAAOU,SAAQ,SAAC/D,EAAOD,GAAG,OAAM2oB,EAAS3oB,GAAOC,EAAMoS,aAAa,IAC1EsW,CACX,CAG+HtW,CAAYzC,GAC3I,C,eCfMgZ,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,EACnDC,GAAwB,SAACC,GAAY,OAAKA,EAAe,GAAI,ECP7DC,IACO,E,sBCDPC,GAAqB,SAACC,GAAM,OAAK7hB,MAAMiF,QAAQ4c,IAAgC,kBAAdA,EAAO,EAAe,ECE7F,SAASC,GAAuBD,GAC5B,OAAOlc,SAASkc,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB7hB,MAAMiF,QAAQ4c,IAAWA,EAAOG,MAAMF,IAC/C,CACA,IAAMG,GAAsB,SAAHjoB,GAAA,IAAA+P,GAAAjM,EAAAA,GAAAA,GAAA9D,EAAA,GAAKogB,EAACrQ,EAAA,GAAEsQ,EAACtQ,EAAA,GAAEmY,EAACnY,EAAA,GAAEoY,EAACpY,EAAA,yBAAAhP,OAAsBqf,EAAC,MAAArf,OAAKsf,EAAC,MAAAtf,OAAKmnB,EAAC,MAAAnnB,OAAKonB,EAAC,MAC3EJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB7hB,MAAMiF,QAAQ4c,GACVA,EAAO3iB,IAAI2jB,IACXd,GAAqBF,EACnC,CCRA,IAAMiB,GAAa,SAACC,EAAGC,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,CAAC,EAoBL,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO3f,GAAAA,EACX,IAAM4f,EAAW,SAACC,GAAE,OArBxB,SAAyBtY,EAAGuY,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACApkB,EAAI,EACR,IAEImkB,EAAWb,GADXc,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOnY,GAC7B,EACXwY,EAAaE,EAGbH,EAAaG,QAEZzgB,KAAK0gB,IAAIF,GAfO,QAgBnBnkB,EAfuB,IAgB7B,OAAOokB,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAACN,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EAAI,CAC5E,CC9CA,IAAMhB,GAASY,GAAY,IAAM,EAAG,EAAG,GACjCX,GAAUW,GAAY,EAAG,EAAG,IAAM,GAClCV,GAAYU,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAe,SAAClC,GAAM,OAAK,SAAC9d,GAAC,OAAKA,GAAK,GAAM8d,EAAO,EAAI9d,GAAK,GAAK,EAAI8d,EAAO,GAAK,EAAI9d,KAAO,CAAC,GCA9FigB,GAAgB,SAACnC,GAAM,OAAK,SAAC9d,GAAC,OAAK,EAAI8d,EAAO,EAAI9d,EAAE,GCCpD0e,GAAS,SAAC1e,GAAC,OAAK,EAAIZ,KAAK8gB,IAAI9gB,KAAK+gB,KAAKngB,GAAG,EAC1C2e,GAAUsB,GAAcvB,IACxB0B,GAAYJ,GAAatB,ICDzBG,GAAUM,GAAY,IAAM,KAAM,IAAM,KACxCP,GAASqB,GAAcpB,IACvBwB,GAAYL,GAAapB,ICEzB0B,GAAe,CACjBjC,OAAQze,GAAAA,EACR2e,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACA0B,UAAAA,GACAzB,QAAAA,GACAC,OAAAA,GACAyB,UAAAA,GACAxB,QAAAA,GACA0B,WCjBe,SAACvgB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAM4e,GAAO5e,GAAK,IAAO,EAAIZ,KAAKohB,IAAI,GAAI,IAAMxgB,EAAI,IAAI,GDmB3FygB,GAA6B,SAACnN,GAChC,GAAIrX,MAAMiF,QAAQoS,GAAa,EAE3B/Z,EAAAA,GAAAA,GAAgC,IAAtB+Z,EAAW9X,OAAc,2DACnC,IAAAklB,GAAA3mB,EAAAA,GAAAA,GAAyBuZ,EAAU,GACnC,OAAO6L,GADEuB,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAfpN,IAEZ/Z,EAAAA,GAAAA,QAAuCZ,IAA7B2nB,GAAahN,GAA2B,wBAAFtc,OAA0Bsc,EAAU,MAC7EgN,GAAahN,IAEjBA,CACX,EE5BMqN,GAAgB,SAAC9Y,EAAM+Y,GAAQ,OAAK,SAAC3f,GACvC,OAAOW,QAAS+G,EAAS1H,IAAMyH,EAAiBhC,KAAKzF,IAAMA,EAAE8F,WAAWc,IACnE+Y,GAAYhgB,OAAOC,UAAUC,eAAeC,KAAKE,EAAG2f,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAAC/f,GAAM,IAAAhL,EAC/C,IAAK0S,EAAS1H,GACV,OAAOA,EACX,IAAAggB,EAAyBhgB,EAAEigB,MAAM1Y,GAAW2Y,GAAApnB,EAAAA,GAAAA,GAAAknB,EAAA,GAArC5K,EAAC8K,EAAA,GAAE7K,EAAC6K,EAAA,GAAEhD,EAACgD,EAAA,GAAEhZ,EAAKgZ,EAAA,GACrB,OAAAlrB,EAAA,IAAAmrB,EAAAA,GAAAA,GAAAnrB,EACK6qB,EAAQ5Y,WAAWmO,KAAE+K,EAAAA,GAAAA,GAAAnrB,EACrB8qB,EAAQ7Y,WAAWoO,KAAE8K,EAAAA,GAAAA,GAAAnrB,EACrB+qB,EAAQ9Y,WAAWiW,KAAEiD,EAAAA,GAAAA,GAAAnrB,EAAA,aACL0C,IAAVwP,EAAsBD,WAAWC,GAAS,GAAClS,CAE1D,CAAC,ECdKorB,IAAOxd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNmE,GAAM,IACTF,UAAW,SAAC7G,GAAC,OAAK7B,KAAKmJ,MAHN,SAACtH,GAAC,OAAK8G,EAAM,EAAG,IAAK9G,EAAE,CAGXqgB,CAAargB,GAAG,IAE3CsgB,GAAO,CACT7a,KAAMia,GAAc,MAAO,OAC3B1Y,MAAO4Y,GAAW,MAAO,QAAS,QAClC/Y,UAAW,SAAA7R,GAAA,IAAGurB,EAAGvrB,EAAHurB,IAAKC,EAAKxrB,EAALwrB,MAAOC,EAAIzrB,EAAJyrB,KAAIC,EAAA1rB,EAAEkS,MAAOyZ,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDN,GAAQvZ,UAAU0Z,GAClB,KACAH,GAAQvZ,UAAU2Z,GAClB,KACAJ,GAAQvZ,UAAU4Z,GAClB,KACApZ,EAASH,EAAML,UAAU8Z,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRnb,KAAMia,GAAc,KACpB1Y,MAhCJ,SAAkBhH,GACd,IAAI6gB,EAAI,GACJC,EAAI,GACJzL,EAAI,GACJD,EAAI,GAmBR,OAjBIpV,EAAEzF,OAAS,GACXsmB,EAAI7gB,EAAEmS,UAAU,EAAG,GACnB2O,EAAI9gB,EAAEmS,UAAU,EAAG,GACnBkD,EAAIrV,EAAEmS,UAAU,EAAG,GACnBiD,EAAIpV,EAAEmS,UAAU,EAAG,KAInB0O,EAAI7gB,EAAEmS,UAAU,EAAG,GACnB2O,EAAI9gB,EAAEmS,UAAU,EAAG,GACnBkD,EAAIrV,EAAEmS,UAAU,EAAG,GACnBiD,EAAIpV,EAAEmS,UAAU,EAAG,GACnB0O,GAAKA,EACLC,GAAKA,EACLzL,GAAKA,EACLD,GAAKA,GAEF,CACHmL,IAAKQ,SAASF,EAAG,IACjBL,MAAOO,SAASD,EAAG,IACnBL,KAAMM,SAAS1L,EAAG,IAClBnO,MAAOkO,EAAI2L,SAAS3L,EAAG,IAAM,IAAM,EAE3C,EAIIvO,UAAWyZ,GAAKzZ,WC/Bdma,GAAO,CACTvb,KAAMia,GAAc,MAAO,OAC3B1Y,MAAO4Y,GAAW,MAAO,aAAc,aACvC/Y,UAAW,SAAA7R,GAAwD,IAArDisB,EAAGjsB,EAAHisB,IAAKC,EAAUlsB,EAAVksB,WAAYC,EAASnsB,EAATmsB,UAAST,EAAA1rB,EAAEkS,MAAOyZ,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJviB,KAAKmJ,MAAM2Z,GACX,KACAjZ,GAAQnB,UAAUQ,EAAS6Z,IAC3B,KACAlZ,GAAQnB,UAAUQ,EAAS8Z,IAC3B,KACA9Z,EAASH,EAAML,UAAU8Z,IACzB,GACR,GCbES,GAAQ,CACV3b,KAAM,SAACzF,GAAC,OAAKsgB,GAAK7a,KAAKzF,IAAM4gB,GAAInb,KAAKzF,IAAMghB,GAAKvb,KAAKzF,EAAE,EACxDgH,MAAO,SAAChH,GACJ,OAAIsgB,GAAK7a,KAAKzF,GACHsgB,GAAKtZ,MAAMhH,GAEbghB,GAAKvb,KAAKzF,GACRghB,GAAKha,MAAMhH,GAGX4gB,GAAI5Z,MAAMhH,EAEzB,EACA6G,UAAW,SAAC7G,GACR,OAAO0H,EAAS1H,GACVA,EACAA,EAAEH,eAAe,OACbygB,GAAKzZ,UAAU7G,GACfghB,GAAKna,UAAU7G,EAC7B,GCHE2S,GAAM,SAAC1X,EAAMomB,EAAIC,GAAQ,OAAMA,EAAWrmB,EAAOqmB,EAAWD,EAAKpmB,CAAI,ECpB3E,SAASsmB,GAASxiB,EAAGyiB,EAAGzD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDhf,EAAc,GAATyiB,EAAIziB,GAASgf,EACzBA,EAAI,GACGyD,EACPzD,EAAI,EAAI,EACDhf,GAAKyiB,EAAIziB,IAAM,EAAI,EAAIgf,GAAK,EAChChf,CACX,CCHA,IAAM0iB,GAAiB,SAACxmB,EAAMomB,EAAIrhB,GAC9B,IAAM0hB,EAAWzmB,EAAOA,EACxB,OAAOkD,KAAKwjB,KAAKxjB,KAAKC,IAAI,EAAG4B,GAAKqhB,EAAKA,EAAKK,GAAYA,GAC5D,EACME,GAAa,CAAChB,GAAKN,GAAMU,IAE/B,SAASa,GAAOT,GACZ,IAFkBphB,EAEZ4G,GAFY5G,EAEQohB,EAFFQ,GAAWE,MAAK,SAAClb,GAAI,OAAKA,EAAKnB,KAAKzF,EAAE,MAG9D1H,EAAAA,GAAAA,GAAUqI,QAAQiG,GAAO,IAAF7Q,OAAMqrB,EAAK,yEAClC,IAAIW,EAAQnb,EAAKI,MAAMoa,GAKvB,OAJIxa,IAASoa,KAETe,EDRR,SAAmB/sB,GAAwC,IAArCisB,EAAGjsB,EAAHisB,IAAKC,EAAUlsB,EAAVksB,WAAYC,EAASnsB,EAATmsB,UAAWja,EAAKlS,EAALkS,MAC9C+Z,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMM,EAAIL,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCniB,EAAI,EAAIoiB,EAAYK,EAC1BjB,EAAMgB,GAASxiB,EAAGyiB,EAAGP,EAAM,EAAI,GAC/BT,EAAQe,GAASxiB,EAAGyiB,EAAGP,GACvBR,EAAOc,GAASxiB,EAAGyiB,EAAGP,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKpiB,KAAKmJ,MAAY,IAANiZ,GAChBC,MAAOriB,KAAKmJ,MAAc,IAARkZ,GAClBC,KAAMtiB,KAAKmJ,MAAa,IAAPmZ,GACjBvZ,MAAAA,EAER,CCjBgB8a,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAAChnB,EAAMomB,GACpB,IAAMa,EAAWL,GAAO5mB,GAClBknB,EAASN,GAAOR,GAChBe,GAAOxf,EAAAA,EAAAA,GAAA,GAAQsf,GACrB,OAAO,SAACliB,GAKJ,OAJAoiB,EAAQ7B,IAAMkB,GAAeS,EAAS3B,IAAK4B,EAAO5B,IAAKvgB,GACvDoiB,EAAQ5B,MAAQiB,GAAeS,EAAS1B,MAAO2B,EAAO3B,MAAOxgB,GAC7DoiB,EAAQ3B,KAAOgB,GAAeS,EAASzB,KAAM0B,EAAO1B,KAAMzgB,GAC1DoiB,EAAQlb,MAAQyL,GAAIuP,EAAShb,MAAOib,EAAOjb,MAAOlH,GAC3CsgB,GAAKzZ,UAAUub,EAC1B,CACJ,ECvBA,IAAMC,GAAkB,CACpBC,MtEZqB,gFsEarBC,SAAU,OACV/b,MAAO,OACPQ,MAAOrI,GAAAA,GAEL6jB,GAAiB,CACnBF,MAAO9a,EACP+a,SAAU,SACV/b,MAAO,OACPQ,MAAOoa,GAAMpa,OAEXyb,GAAkB,CACpBH,MAAO/a,EACPgb,SAAU,UACV/b,MAAO,OACPQ,MAAOD,EAAOC,OAElB,SAAS0b,GAASlM,EAAIxhB,GAAqC,IAAA2tB,EAAjCL,EAAKttB,EAALstB,MAAOC,EAAQvtB,EAARutB,SAAU/b,EAAKxR,EAALwR,MAAOQ,EAAKhS,EAALgS,MACxCiQ,EAAUT,EAAKoM,UAAU3C,MAAMqC,GAChCrL,IAELT,EAAK,MAAQ+L,GAAYtL,EAAQ1c,OACjCic,EAAKoM,UAAYpM,EAAKoM,UAAUrjB,QAAQ+iB,EAAO9b,IAC/Cmc,EAAAnM,EAAKvf,QAAOuC,KAAIhG,MAAAmvB,GAAAxoB,EAAAA,GAAAA,GAAI8c,EAAQ/c,IAAI8M,KACpC,CACA,SAAS6b,GAAoBjvB,GACzB,IAAMkvB,EAAgBlvB,EAAMmvB,WACtBvM,EAAO,CACT5iB,MAAOkvB,EACPF,UAAWE,EACX7rB,OAAQ,GACR+rB,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI1M,EAAK5iB,MAAMyH,SAAS,WACpBqnB,GAASlM,EAAM6L,IACnBK,GAASlM,EAAMgM,IACfE,GAASlM,EAAMiM,IACRjM,CACX,CACA,SAAS2M,GAAkBnjB,GACvB,OAAO6iB,GAAoB7iB,GAAG/I,MAClC,CACA,SAASmsB,GAAkBpW,GACvB,IAAAqW,EAAkDR,GAAoB7V,GAA9D/V,EAAMosB,EAANpsB,OAAQgsB,EAASI,EAATJ,UAAWD,EAAOK,EAAPL,QAASJ,EAASS,EAATT,UAC9BU,EAAYrsB,EAAOsD,OACzB,OAAO,SAACyF,GAEJ,IADA,IAAIujB,EAASX,EACJpoB,EAAI,EAAGA,EAAI8oB,EAAW9oB,IAEvB+oB,EADA/oB,EAAIwoB,EACKO,EAAOhkB,QAAQ8iB,GAAgB7b,MAAOxG,EAAExF,IAE5CA,EAAIwoB,EAAUC,EACVM,EAAOhkB,QAAQijB,GAAehc,MAAO4a,GAAMva,UAAU7G,EAAExF,KAGvD+oB,EAAOhkB,QAAQkjB,GAAgBjc,MAAOa,EAASrH,EAAExF,KAGlE,OAAO+oB,CACX,CACJ,CACA,IAAMC,GAAuB,SAACxjB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAMyjB,GAAU,CACZhe,KA/EJ,SAAczF,GACV,IAAIsO,EAAIoV,EACR,OAAQC,MAAM3jB,IACV0H,EAAS1H,MACwB,QAA9BsO,EAAKtO,EAAEigB,MAAM1Y,UAAgC,IAAP+G,OAAgB,EAASA,EAAG/T,SAAW,KAC3C,QAA9BmpB,EAAK1jB,EAAEigB,MAAMzY,UAAgC,IAAPkc,OAAgB,EAASA,EAAGnpB,SAAW,GAChF,CACZ,EAyEIyM,MAAOmc,GACPC,kBAAAA,GACAQ,kBATJ,SAA2B5jB,GACvB,IAAM6jB,EAASV,GAAkBnjB,GAEjC,OADoBojB,GAAkBpjB,EAC/B8jB,CAAYD,EAAO3pB,IAAIspB,IAClC,GC5EMO,GAAe,SAAC7U,EAAQnC,GAAM,OAAK,SAAChO,GAAC,SAAAhJ,OAAQgJ,EAAI,EAAIgO,EAASmC,EAAM,CAAE,EAC5E,SAAS8U,GAAS9U,EAAQnC,GACtB,MAAsB,kBAAXmC,EACA,SAAClP,GAAC,OAAK2S,GAAIzD,EAAQnC,EAAQ/M,EAAE,EAE/BohB,GAAM3b,KAAKyJ,GACT+S,GAAS/S,EAAQnC,GAGjBmC,EAAOpJ,WAAW,QACnBie,GAAa7U,EAAQnC,GACrBkX,GAAW/U,EAAQnC,EAEjC,CACA,IAAMmX,GAAW,SAACjpB,EAAMomB,GACpB,IAAMkC,GAAMppB,EAAAA,GAAAA,GAAOc,GACbqoB,EAAYC,EAAOhpB,OACnB4pB,EAAalpB,EAAKf,KAAI,SAACkqB,EAAU5pB,GAAC,OAAKwpB,GAASI,EAAU/C,EAAG7mB,GAAG,IACtE,OAAO,SAACwF,GACJ,IAAK,IAAIxF,EAAI,EAAGA,EAAI8oB,EAAW9oB,IAC3B+oB,EAAO/oB,GAAK2pB,EAAW3pB,GAAGwF,GAE9B,OAAOujB,CACX,CACJ,EACMc,GAAY,SAACnV,EAAQnC,GACvB,IAAMwW,GAAM3gB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQsM,GAAWnC,GACzBoX,EAAa,CAAC,EACpB,IAAK,IAAMxwB,KAAO4vB,OACM7rB,IAAhBwX,EAAOvb,SAAsC+D,IAAhBqV,EAAOpZ,KACpCwwB,EAAWxwB,GAAOqwB,GAAS9U,EAAOvb,GAAMoZ,EAAOpZ,KAGvD,OAAO,SAACqM,GACJ,IAAK,IAAMrM,KAAOwwB,EACdZ,EAAO5vB,GAAOwwB,EAAWxwB,GAAKqM,GAElC,OAAOujB,CACX,CACJ,EACMU,GAAa,SAAC/U,EAAQnC,GACxB,IAAMuX,EAAWb,GAAQL,kBAAkBrW,GACrCwX,EAAc1B,GAAoB3T,GAClCsV,EAAc3B,GAAoB9V,GAIxC,OAHuBwX,EAAYvB,UAAYwB,EAAYxB,SACvDuB,EAAYtB,YAAcuB,EAAYvB,WACtCsB,EAAYrB,YAAcsB,EAAYtB,WAE/B5N,GAAK4O,GAASK,EAAYttB,OAAQutB,EAAYvtB,QAASqtB,KAG9DG,EAAAA,GAAAA,IAAQ,EAAM,mBAAF1uB,OAAqBmZ,EAAM,WAAAnZ,OAAUgX,EAAM,6KAChDgX,GAAa7U,EAAQnC,GAEpC,ECjDMuU,GAAW,SAACrmB,EAAMomB,EAAIztB,GACxB,IAAM8wB,EAAmBrD,EAAKpmB,EAC9B,OAA4B,IAArBypB,EAAyB,GAAK9wB,EAAQqH,GAAQypB,CACzD,ECLMC,GAAY,SAAC1pB,EAAMomB,GAAE,OAAK,SAACtiB,GAAC,OAAK4T,GAAI1X,EAAMomB,EAAItiB,EAAE,GAgBvD,SAAS6lB,GAAarB,EAAQlG,EAAMwH,GAIhC,IAHA,IAhBwB7kB,EAgBlB8kB,EAAS,GACTC,EAAeF,IAhBJ,kBADO7kB,EAiB+BujB,EAAO,IAfnDoB,GAEW,kBAAN3kB,EACLohB,GAAM3b,KAAKzF,GAAKiiB,GAAWgC,GAE7BjpB,MAAMiF,QAAQD,GACZkkB,GAEW,kBAANlkB,EACLqkB,GAEJM,IAKDK,EAAYzB,EAAOhpB,OAAS,EACzBC,EAAI,EAAGA,EAAIwqB,EAAWxqB,IAAK,CAChC,IAAIyqB,EAAQF,EAAaxB,EAAO/oB,GAAI+oB,EAAO/oB,EAAI,IAC/C,GAAI6iB,EAAM,CACN,IAAM6H,EAAiBlqB,MAAMiF,QAAQod,GAAQA,EAAK7iB,IAAMmE,GAAAA,EAAO0e,EAC/D4H,EAAQ3P,GAAK4P,EAAgBD,EACjC,CACAH,EAAOtrB,KAAKyrB,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO7B,GAAqD,IAAAvuB,EAAAvB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC4xB,EAAArwB,EAAzC8R,MAAOwe,OAAO,IAAAD,GAAOA,EAAEhI,EAAIroB,EAAJqoB,KAAM4H,EAAKjwB,EAALiwB,MACzDM,EAAcH,EAAM7qB,OAM1B,IALAjC,EAAAA,GAAAA,GAAUitB,IAAgBhC,EAAOhpB,OAAQ,wDAKrB,IAAhBgrB,EACA,OAAO,kBAAMhC,EAAO,EAAE,EAEtB6B,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQjrB,EAAAA,GAAAA,GAAIirB,GAAOI,UACnBjC,GAASppB,EAAAA,GAAAA,GAAIopB,GAAQiC,WAEzB,IAAMV,EAASF,GAAarB,EAAQlG,EAAM4H,GACpCD,EAAYF,EAAOvqB,OACnBkrB,EAAe,SAACzlB,GAClB,IAAIxF,EAAI,EACR,GAAIwqB,EAAY,EACZ,KAAOxqB,EAAI4qB,EAAM7qB,OAAS,KAClByF,EAAIolB,EAAM5qB,EAAI,IADOA,KAKjC,IAAMkrB,EAAkBpE,GAAS8D,EAAM5qB,GAAI4qB,EAAM5qB,EAAI,GAAIwF,GACzD,OAAO8kB,EAAOtqB,GAAGkrB,EACrB,EACA,OAAOJ,EACD,SAACtlB,GAAC,OAAKylB,EAAa3e,EAAMse,EAAM,GAAIA,EAAMG,EAAc,GAAIvlB,GAAG,EAC/DylB,CACV,CCvFA,SAASE,GAAcC,GACnB,IAAMzW,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ0W,GAExB,IADA,IAAMxnB,EAAM8Q,EAAOA,EAAO5U,OAAS,GAC1BC,EAAI,EAAGA,GAAKqrB,EAAWrrB,IAAK,CACjC,IAAMsrB,EAAiBxE,GAAS,EAAGuE,EAAWrrB,GAC9C2U,EAAO3V,KAAKmZ,GAAItU,EAAK,EAAGynB,GAC5B,CACJ,CDLIC,CAAW5W,EAAQyW,EAAIrrB,OAAS,GACzB4U,CACX,CEIA,SAAS6W,GAAShxB,GAA4E,IAHvEiC,EAAQ4lB,EAG+DoJ,EAAAjxB,EAAzEkxB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAaE,EAAcnxB,EAAzBgxB,UAA2BI,EAAKpxB,EAALoxB,MAAKC,EAAArxB,EAAEqoB,KAAAA,OAAI,IAAAgJ,EAAG,YAAWA,EAK/EC,ECfY,SAACjJ,GACnB,OAAOriB,MAAMiF,QAAQod,IAA4B,kBAAZA,EAAK,EAC9C,CDa4BkJ,CAAclJ,GAChCA,EAAKnjB,IAAIslB,IACTA,GAA2BnC,GAK3B5gB,EAAQ,CACVrF,MAAM,EACNxD,MAAOuyB,EAAe,IAKpBK,EE7BV,SAA8BrX,EAAQ+W,GAClC,OAAO/W,EAAOjV,KAAI,SAACusB,GAAC,OAAKA,EAAIP,CAAQ,GACzC,CF2B0BQ,CAGtBN,GAASA,EAAM7rB,SAAW4rB,EAAe5rB,OACnC6rB,EACAT,GAAcQ,GAAiBD,GAC/BS,EAAoBxB,GAAYqB,EAAeL,EAAgB,CACjE9I,KAAMriB,MAAMiF,QAAQqmB,GACdA,GA9BSrvB,EA+BKkvB,EA/BGtJ,EA+BayJ,EA9BjCrvB,EAAOiD,KAAI,kBAAM2iB,GAAUW,EAAS,IAAE/hB,OAAO,EAAGxE,EAAOsD,OAAS,MAgCvE,MAAO,CACHqsB,mBAAoBV,EACpBjK,KAAM,SAAC8B,GAGH,OAFAthB,EAAM7I,MAAQ+yB,EAAkB5I,GAChCthB,EAAMrF,KAAO2mB,GAAKmI,EACXzpB,CACX,EAER,CG1CA,SAASoqB,GAAkBvK,EAAUwK,GACjC,OAAOA,EAAgBxK,GAAY,IAAOwK,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAcjJ,EAAG9qB,GAC5C,IAAMg0B,EAAQ9oB,KAAKC,IAAI2f,EAFI,EAEwB,GACnD,OAAO8I,GAAkB5zB,EAAU+zB,EAAaC,GAAQlJ,EAAIkJ,EAChE,CCFA,IAAMC,GAAU,KAKhB,SAASC,GAAUnyB,GAA6D,IACxEoyB,EACAC,EAFwEpB,EAAAjxB,EAA1DkxB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAAqB,EAAAtyB,EAAEuyB,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAAxyB,EAAEsnB,SAAAA,OAAQ,IAAAkL,EAAG,EAACA,EAAAC,EAAAzyB,EAAE0yB,KAAAA,OAAI,IAAAD,EAAG,EAACA,GAGvEhD,EAAAA,GAAAA,GAAQyB,GAAY3J,GANJ,IAMwC,8CACxD,IAAIoL,EAAe,EAAIJ,EAIvBI,EAAe7gB,EAVA,IACA,EAS8B6gB,GAC7CzB,EAAWpf,EAbK,IACA,GAY2B2V,GAAsByJ,IAC7DyB,EAAe,GAIfP,EAAW,SAACQ,GACR,IAAMC,EAAmBD,EAAeD,EAClCjrB,EAAQmrB,EAAmB3B,EAC3B9Q,EAAIyS,EAAmBvL,EACvBjH,EAAIyS,GAAgBF,EAAcD,GAClCzK,EAAI/e,KAAK4pB,KAAKrrB,GACpB,OAAOwqB,GAAW9R,EAAIC,EAAK6H,CAC/B,EACAmK,EAAa,SAACO,GACV,IACMlrB,EADmBkrB,EAAeD,EACPzB,EAC3B/I,EAAIzgB,EAAQ4f,EAAWA,EACvBhlB,EAAI6G,KAAKohB,IAAIoI,EAAc,GAAKxpB,KAAKohB,IAAIqI,EAAc,GAAK1B,EAC5D3uB,EAAI4G,KAAK4pB,KAAKrrB,GACdokB,EAAIgH,GAAgB3pB,KAAKohB,IAAIqI,EAAc,GAAID,GAErD,QADgBP,EAASQ,GAAgBV,GAAU,GAAK,EAAI,KACzC/J,EAAI7lB,GAAKC,GAAMupB,CACtC,IAMAsG,EAAW,SAACQ,GAGR,OAFUzpB,KAAK4pB,KAAKH,EAAe1B,KACxB0B,EAAetL,GAAY4J,EAAW,GAC1C,IACX,EACAmB,EAAa,SAACO,GAGV,OAFUzpB,KAAK4pB,KAAKH,EAAe1B,IACIA,EAAWA,GAAvC5J,EAAWsL,GAE1B,GAEJ,IACMA,EAmBV,SAAyBR,EAAUC,EAAYW,GAE3C,IADA,IAAIC,EAASD,EACJxtB,EAAI,EAAGA,EAHG,GAGiBA,IAChCytB,GAAkBb,EAASa,GAAUZ,EAAWY,GAEpD,OAAOA,CACX,CAzByBC,CAAgBd,EAAUC,EAD1B,EAAInB,GAGzB,GADAA,EAAW3J,GAAsB2J,GAC7BvC,MAAMiE,GACN,MAAO,CACHO,UAAW,IACXC,QAAS,GACTlC,SAAAA,GAIJ,IAAMiC,EAAYhqB,KAAKohB,IAAIqI,EAAc,GAAKF,EAC9C,MAAO,CACHS,UAAAA,EACAC,QAAwB,EAAfT,EAAmBxpB,KAAKwjB,KAAK+F,EAAOS,GAC7CjC,SAAAA,EAGZ,CASA,SAAS4B,GAAgBF,EAAcD,GACnC,OAAOC,EAAezpB,KAAKwjB,KAAK,EAAIgG,EAAeA,EACvD,C,6CClFMU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9c,EAASvQ,GAC3B,OAAOA,EAAKsF,MAAK,SAAC7M,GAAG,YAAsB+D,IAAjB+T,EAAQ9X,EAAkB,GACxD,CAuBA,SAAS60B,GAAMxzB,GAAkD,IA0BzDyzB,EA1BUzC,EAAShxB,EAATgxB,UAAW0C,EAAS1zB,EAAT0zB,UAAWC,EAAS3zB,EAAT2zB,UAAcld,EAAOkD,GAAA3Z,EAAAib,IACnDf,EAAS8W,EAAU,GACnBjZ,EAASiZ,EAAUA,EAAUzrB,OAAS,GAKtCkC,EAAQ,CAAErF,MAAM,EAAOxD,MAAOsb,GACpC0Z,EA9BJ,SAA0Bnd,GACtB,IAAIod,GAAajmB,EAAAA,EAAAA,GAAA,CACb0Z,SAAU,EACV6L,UAAW,IACXC,QAAS,GACTV,KAAM,EACNoB,wBAAwB,GACrBrd,GAGP,IAAK8c,GAAa9c,EAAS6c,KACvBC,GAAa9c,EAAS4c,IAAe,CACrC,IAAMU,EAAU5B,GAAW1b,IAC3Bod,GAAajmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNimB,GACAE,GAAO,IACVrB,KAAM,KAEIoB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CASsFG,EAAgBpmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7F6I,GAAO,IACV6Q,UAAWG,GAAsBhR,EAAQ6Q,UAAY,MAFjD6L,EAASS,EAATT,UAAWC,EAAOQ,EAAPR,QAASV,EAAIkB,EAAJlB,KAAMxB,EAAQ0C,EAAR1C,SAAU5J,EAAQsM,EAARtM,SAAUwM,EAAsBF,EAAtBE,uBAIhDG,EAAkB3M,GAAY,EAC9BqL,EAAeS,GAAW,EAAIjqB,KAAKwjB,KAAKwG,EAAYT,IACpDwB,EAAenc,EAASmC,EACxBia,EAAsB1M,GAAsBte,KAAKwjB,KAAKwG,EAAYT,IAQlE0B,EAAkBjrB,KAAK0gB,IAAIqK,GAAgB,EAIjD,GAHAP,IAAcA,EAAYS,EAAkB,IAAO,GACnDV,IAAcA,EAAYU,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,IAAM0B,EAAcvB,GAAgBqB,EAAqBxB,GAEzDc,EAAgB,SAAC1K,GACb,IAAMqJ,EAAWjpB,KAAK4pB,KAAKJ,EAAewB,EAAsBpL,GAChE,OAAQhR,EACJqa,IACO6B,EACCtB,EAAewB,EAAsBD,GACrCG,EACAlrB,KAAK8gB,IAAIoK,EAActL,GACvBmL,EAAe/qB,KAAKmrB,IAAID,EAActL,GACtD,CACJ,MACK,GAAqB,IAAjB4J,EAELc,EAAgB,SAAC1K,GAAC,OAAKhR,EACnB5O,KAAK4pB,KAAKoB,EAAsBpL,IAC3BmL,GACID,EAAkBE,EAAsBD,GAAgBnL,EAAE,MAEtE,CAED,IAAMwL,EAAoBJ,EAAsBhrB,KAAKwjB,KAAKgG,EAAeA,EAAe,GACxFc,EAAgB,SAAC1K,GACb,IAAMqJ,EAAWjpB,KAAK4pB,KAAKJ,EAAewB,EAAsBpL,GAE1DyL,EAAWrrB,KAAKE,IAAIkrB,EAAoBxL,EAAG,KACjD,OAAQhR,EACHqa,IACK6B,EACEtB,EAAewB,EAAsBD,GACrC/qB,KAAKsrB,KAAKD,GACVD,EACIL,EACA/qB,KAAKurB,KAAKF,IAClBD,CACZ,CACJ,CACA,MAAO,CACH3C,mBAAoBkC,GAAyB5C,GAAmB,KAChEjK,KAAM,SAAC8B,GACH,IAAM9qB,EAAUw1B,EAAc1K,GAC9B,GAAK+K,EAqBDrsB,EAAMrF,KAAO2mB,GAAKmI,MArBO,CACzB,IAAI3T,EAAkB0W,EACZ,IAANlL,IAOIxL,EADAoV,EAAe,EACGZ,GAAsB0B,EAAe1K,EAAG9qB,GAGxC,GAG1B,IAAM02B,EAA2BxrB,KAAK0gB,IAAItM,IAAoBoW,EACxDiB,EAA+BzrB,KAAK0gB,IAAI9R,EAAS9Z,IAAYy1B,EACnEjsB,EAAMrF,KACFuyB,GAA4BC,CACpC,CAKA,OADAntB,EAAM7I,MAAQ6I,EAAMrF,KAAO2V,EAAS9Z,EAC7BwJ,CACX,EAER,CC7HA,SAASotB,GAAO70B,GAAiK,IAA9JgxB,EAAShxB,EAATgxB,UAASwB,EAAAxyB,EAAEsnB,SAAAA,OAAQ,IAAAkL,EAAG,EAAGA,EAAAsC,EAAA90B,EAAE+0B,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAAh1B,EAAEi1B,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAAl1B,EAAEm1B,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAAp1B,EAAEq1B,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAYt1B,EAAZs1B,aAAcjsB,EAAGrJ,EAAHqJ,IAAKD,EAAGpJ,EAAHoJ,IAAGmsB,EAAAv1B,EAAE0zB,UAAAA,OAAS,IAAA6B,EAAG,GAAGA,EAAE5B,EAAS3zB,EAAT2zB,UACzJzZ,EAAS8W,EAAU,GACnBvpB,EAAQ,CACVrF,MAAM,EACNxD,MAAOsb,GAGLsb,EAAkB,SAACxqB,GACrB,YAAYtI,IAAR2G,EACOD,OACC1G,IAAR0G,GAEGD,KAAK0gB,IAAIxgB,EAAM2B,GAAK7B,KAAK0gB,IAAIzgB,EAAM4B,GAD/B3B,EAC0CD,CACzD,EACIqsB,EAAYV,EAAQzN,EAClBoO,EAAQxb,EAASub,EACjB1d,OAA0BrV,IAAjB4yB,EAA6BI,EAAQJ,EAAaI,GAK7D3d,IAAW2d,IACXD,EAAY1d,EAASmC,GACzB,IAcIyb,EACAC,EAfEC,EAAY,SAAC9M,GAAC,OAAM0M,EAAYtsB,KAAK4pB,KAAKhK,EAAIkM,EAAa,EAC3Da,EAAa,SAAC/M,GAAC,OAAKhR,EAAS8d,EAAU9M,EAAE,EACzCgN,EAAgB,SAAChN,GACnB,IAAMrhB,EAAQmuB,EAAU9M,GAClBiN,EAASF,EAAW/M,GAC1BthB,EAAMrF,KAAO+G,KAAK0gB,IAAIniB,IAAUgsB,EAChCjsB,EAAM7I,MAAQ6I,EAAMrF,KAAO2V,EAASie,CACxC,EASMC,EAAqB,SAAClN,GAjCN,IAAC/d,KAkCAvD,EAAM7I,WAlCS8D,IAAR2G,GAAqB2B,EAAI3B,QAAiB3G,IAAR0G,GAAqB4B,EAAI5B,KAoCrFusB,EAAsB5M,EACtB6M,EAAWpC,GAAO,CACdxC,UAAW,CAACvpB,EAAM7I,MAAO42B,EAAgB/tB,EAAM7I,QAC/C0oB,SAAUyK,GAAsB+D,EAAY/M,EAAGthB,EAAM7I,OACrDw0B,QAAS+B,EACThC,UAAWkC,EACX3B,UAAAA,EACAC,UAAAA,IAER,EAEA,OADAsC,EAAmB,GACZ,CACHrE,mBAAoB,KACpB3K,KAAM,SAAC8B,GAOH,IAAImN,GAAkB,EAUtB,OATKN,QAAoClzB,IAAxBizB,IACbO,GAAkB,EAClBH,EAAchN,GACdkN,EAAmBlN,SAMKrmB,IAAxBizB,GAAqC5M,EAAI4M,EAClCC,EAAS3O,KAAK8B,EAAI4M,KAGxBO,GAAmBH,EAAchN,GAC3BthB,EAEf,EAER,CClFA,IAAM0uB,GAAkB,SAACpnB,GACrB,IAAMqnB,EAAgB,SAAHp2B,GAAA,IAAM2H,EAAS3H,EAAT2H,UAAS,OAAOoH,EAAOpH,EAAU,EAC1D,MAAO,CACHwD,MAAO,kBAAMjH,GAAAA,GAAAA,OAAakyB,GAAe,EAAK,EAC9CC,KAAM,kBAAMzsB,EAAAA,GAAAA,IAAYwsB,EAAc,EAKtCltB,IAAK,kBAAMN,GAAAA,GAAAA,aAAyBA,GAAAA,GAAAA,UAAsBK,YAAYC,KAAK,EAEnF,ECRA,SAASotB,GAAsBC,GAI3B,IAHA,IAAIrF,EAAW,EAEXzpB,EAAQ8uB,EAAUtP,KAAKiK,IACnBzpB,EAAMrF,MAAQ8uB,EALG,KAMrBA,GAHa,GAIbzpB,EAAQ8uB,EAAUtP,KAAKiK,GAE3B,OAAOA,GATkB,IASiBsF,IAAWtF,CACzD,C,sICJMuF,GAAQ,CACVC,MAAO7B,GACPA,QAAAA,GACA8B,MAAO3F,GACPA,UAAWA,GACXwC,OAAAA,IASJ,SAASoD,GAAY52B,GAA2M,IAGxN62B,EACAC,EAYAC,EAhBwNC,EAAAh3B,EAAxMi3B,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAAl3B,EAAEm3B,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAp3B,EAAEq3B,OAAAA,OAAM,IAAAD,EAAGjB,GAAeiB,EAAaE,EAAWt3B,EAAtBgxB,UAASuG,EAAAv3B,EAAe4R,KAAAA,OAAI,IAAA2lB,EAAG,YAAWA,EAAAC,EAAAx3B,EAAEy3B,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAA13B,EAAE23B,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAA53B,EAAE63B,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEE,EAAM93B,EAAN83B,OAAQC,EAAM/3B,EAAN+3B,OAAQC,EAAUh4B,EAAVg4B,WAAYC,EAAQj4B,EAARi4B,SAAaxhB,EAAOkD,GAAA3Z,EAAAib,IACpNid,EAAQ,EACRC,GAAa,EAOXC,EAAwB,WAC1BtB,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IAEA,IAKIG,EALEC,EAAmB/B,GAAM7kB,IAASof,GAMpCwH,IAAqBxH,IACK,kBAAnBsG,EAAY,KAInBiB,EAAwBpI,GAAY,CAAC,EAAG,KAAMmH,EAAa,CACvDxlB,OAAO,IAEXwlB,EAAc,CAAC,EAAG,MAEtB,IACImB,EADElC,EAAYiC,GAAgB5qB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6I,GAAO,IAAEua,UAAWsG,KAEzC,WAAfO,IACAY,EAAoBD,GAAgB5qB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B6I,GAAO,IACVua,WAAW7rB,EAAAA,GAAAA,GAAImyB,GAAa9G,UAC5BlJ,WAAY7Q,EAAQ6Q,UAAY,OAGxC,IAAIoR,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjCtC,EAAU3E,oBAA+B6F,IACzClB,EAAU3E,mBAAqB0E,GAAsBC,IAEzD,IAAQ3E,EAAuB2E,EAAvB3E,mBACJkH,EAAmBtC,IACnBuC,EAAgBvC,IACO,OAAvB5E,IAEAmH,GADAD,EAAmBlH,EAAqB+F,IACJF,EAAS,GAAKE,GAEtD,IAAIqB,EAAc,EACZC,EAAO,SAACtxB,GACV,GAAkB,OAAdixB,EAAJ,CAQIV,EAAQ,IACRU,EAAYzvB,KAAKE,IAAIuvB,EAAWjxB,IAChCuwB,EAAQ,IACRU,EAAYzvB,KAAKE,IAAI1B,EAAYoxB,EAAgBb,EAAOU,IAW5D,IAAMM,GATFF,EADa,OAAbL,EACcA,EAMAxvB,KAAKmJ,MAAM3K,EAAYixB,GAAaV,GAGff,GAASe,GAAS,EAAI,GAAK,GAC5DiB,EAAiBjB,GAAS,EAAIgB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAc7vB,KAAKC,IAAI8vB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiB9C,EACrB,GAAIkB,EAAQ,CAMR,IAAMnL,EAAWnjB,KAAKE,IAAI2vB,EAAaD,GAAiBD,EAKpDQ,EAAmBnwB,KAAKowB,MAAMjN,GAK9BkN,EAAoBlN,EAAW,GAK9BkN,GAAqBlN,GAAY,IAClCkN,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBnwB,KAAKE,IAAIiwB,EAAkB7B,EAAS,GAIhC9rB,QAAQ2tB,EAAmB,KAE3B,YAAfzB,GACA2B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAfjB,IACLwB,EAAiBZ,IAGzBW,EAAUtnB,EAAM,EAAG,EAAG0nB,GAAqBV,CAC/C,CAMA,IAAMrxB,EAAQ0xB,EACR,CAAE/2B,MAAM,EAAOxD,MAAO04B,EAAY,IAClC+B,EAAepS,KAAKmS,GACtBb,IACA9wB,EAAM7I,MAAQ25B,EAAsB9wB,EAAM7I,QAE9C,IAAMwD,EAASqF,EAATrF,KACD+2B,GAAyC,OAAvBvH,IACnBxvB,EAAO81B,GAAS,EAAIc,GAAeD,EAAgBC,GAAe,GAEtE,IAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2Bt2B,GAO7D,OANI61B,GACAA,EAASxwB,EAAM7I,OAEf66B,GACAC,IAEGjyB,CAnGG,CAoGd,EACMkyB,EAAsB,WACxB5C,GAAmBA,EAAgBV,OACnCU,OAAkBr0B,CACtB,EACMgG,EAAS,WACXgwB,EAAY,OACZiB,IACA9C,IACAuB,IACAQ,EAAYC,EAAa,IAC7B,EACMa,EAAS,WACXhB,EAAY,WACZV,GAAcA,IACd2B,IACA9C,GACJ,EACM+C,EAAO,WACT,IAAIzB,EAAJ,CAEKpB,IACDA,EAAkBM,EAAO4B,IAC7B,IAAM/vB,EAAM6tB,EAAgB7tB,MAC5B4uB,GAAUA,IACO,OAAba,EACAC,EAAY1vB,EAAMyvB,EAEZC,GAA2B,aAAdF,IACnBE,EAAY1vB,GAEE,aAAdwvB,GACAN,IAEJS,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZ3B,EAAgB5rB,OArBN,CAsBd,EACI8rB,GACA2C,IAEJ,IAAMC,EAAW,CACbC,KAAI,SAACxB,EAASyB,GACV,OAAOjD,EAAuBgD,KAAKxB,EAASyB,EAChD,EACIC,WACA,OAAOvS,GAAsBuR,EACjC,EACIgB,SAAKC,GACLA,EAAU1S,GAAsB0S,GAChCjB,EAAciB,EACG,OAAbtB,GAAsB5B,GAA6B,IAAVmB,EAIzCU,EAAY7B,EAAgB7tB,MAAQ+wB,EAAU/B,EAH9CS,EAAWsB,CAKnB,EACI/I,eACA,IAAMA,EAA4C,OAAjCqF,EAAU3E,mBACrB0E,GAAsBC,GACtBA,EAAU3E,mBAChB,OAAOnK,GAAsByJ,EACjC,EACIgH,YACA,OAAOA,CACX,EACIA,UAAMgC,GACFA,IAAahC,GAAUnB,IAE3BmB,EAAQgC,EACRL,EAASG,KAAOvS,GAAsBuR,GAC1C,EACIvxB,YACA,OAAOixB,CACX,EACAkB,KAAAA,EACAO,MAAO,WACHzB,EAAY,SACZC,EAAWK,CACf,EACA3C,KAAM,WACF8B,GAAa,EACK,SAAdO,IAEJA,EAAY,OACZX,GAAUA,IACVrvB,IACJ,EACAA,OAAQ,WACe,OAAfmwB,GACAI,EAAKJ,GACTnwB,GACJ,EACA0xB,SAAU,WACN1B,EAAY,UAChB,EACA2B,OAAQ,SAACjB,GAEL,OADAR,EAAY,EACLK,EAAKG,EAChB,GAEJ,OAAOS,CACX,C,iCClSMS,GCTN,SAAc/2B,GACV,IAAI0vB,EACJ,OAAO,WAGH,YAFevwB,IAAXuwB,IACAA,EAAS1vB,KACN0vB,CACX,CACJ,CDEsBsH,EAAK,kBAAM5vB,OAAOE,eAAeC,KAAK0vB,QAAQ5vB,UAAW,UAAU,IAInF6vB,GAAoB,IAAI1zB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS2zB,GAA2B97B,EAAO+7B,EAAS36B,GAAYA,EAARi4B,SAAoC,IAA1BD,EAAUh4B,EAAVg4B,WAAevhB,EAAOkD,GAAA3Z,EAAAib,IAOpF,KAN+Bqf,MAC3BG,GAAkB/0B,IAAIi1B,KACrBlkB,EAAQkhB,aACc,WAAvBlhB,EAAQohB,YACY,IAApBphB,EAAQ2c,SACS,YAAjB3c,EAAQ7E,MAER,OAAO,EAIX,IACIilB,EACAC,EAFAqB,GAAa,EAQbyC,GAAgB,EAKdxC,EAAwB,WAC1BtB,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IACA,IAAMpH,EAA2Cva,EAA3Cua,UAAS6J,EAAkCpkB,EAAhCya,SAAAA,OAAQ,IAAA2J,EAAG,IAAGA,EAAExS,EAAgB5R,EAAhB4R,KAAM+I,EAAU3a,EAAV2a,MAIvC,GAvCkC,SAACuJ,EAAWlkB,GAAO,MAAsB,WAAjBA,EAAQ7E,MACpD,oBAAd+oB,IACC7S,GAAuBrR,EAAQ4R,KAAK,CAqCjCyS,CAA8BH,EAAWlkB,GAAU,CAanD,IAZA,IAAMskB,EAAkBnE,IAAYhpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B6I,GAAO,IACVghB,OAAQ,EACRN,MAAO,KAEP1vB,EAAQ,CAAErF,MAAM,EAAOxD,MAAOoyB,EAAU,IACtCgK,EAAwB,GAK1BjS,EAAI,GACAthB,EAAMrF,MAAQ2mB,EArDV,KAsDRthB,EAAQszB,EAAgBV,OAAOtR,GAC/BiS,EAAsBx2B,KAAKiD,EAAM7I,OACjCmqB,GA7DQ,GA+DZqI,OAAQ1uB,EACRsuB,EAAYgK,EACZ9J,EAAWnI,EAjEC,GAkEZV,EAAO,QACX,CACA,IAAMhc,EE3FV,SAAsBvN,EAAS67B,EAAW3J,GAAwF,IAAAhxB,EAAAvB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACy4B,EAAAl3B,EAAzEm3B,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEhG,EAAQlxB,EAARkxB,SAAQsG,EAAAx3B,EAAEy3B,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAI,EAAA53B,EAAE63B,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEvP,EAAIroB,EAAJqoB,KAAM+I,EAAKpxB,EAALoxB,MACzG6J,GAAe9P,EAAAA,GAAAA,GAAA,GAAMwP,EAAY3J,GACnCI,IACA6J,EAAgB9gB,OAASiX,GAC7B,IAAMvJ,EAASgB,GAAwBR,GAMvC,OAFIriB,MAAMiF,QAAQ4c,KACdoT,EAAgBpT,OAASA,GACtB/oB,EAAQyM,QAAQ0vB,EAAiB,CACpC9D,MAAAA,EACAjG,SAAAA,EACArJ,OAAS7hB,MAAMiF,QAAQ4c,GAAmB,SAATA,EACjCqT,KAAM,OACNC,WAAY1D,EAAS,EACrB2D,UAA0B,YAAfvD,EAA2B,YAAc,UAE5D,CFyEsBwD,CAAaz8B,EAAM08B,MAAMr9B,QAAS08B,EAAW3J,GAASpjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjE6I,GAAO,IACVya,SAAAA,EASA7I,KAAMA,EACN+I,MAAAA,KAEEmK,EAAkB,WACpBX,GAAgB,EAChBvuB,EAAU3D,QACd,EACM8yB,EAAa,WACfZ,GAAgB,EAChB12B,GAAAA,GAAAA,OAAaq3B,GACb1E,IACAuB,GACJ,EAkFA,OAzEA/rB,EAAUovB,SAAW,WACbb,IAEJh8B,EAAMiD,IGhId,SAA0BmvB,EAAShxB,GAAmC,IAA/By3B,EAAMz3B,EAANy3B,OAAMG,EAAA53B,EAAE63B,WAI3C,OAAO7G,EAHOyG,GAAyB,eADc,IAAAG,EAAG,OAAMA,IACbH,EAAS,IAAM,EAC1D,EACAzG,EAAUzrB,OAAS,EAE7B,CH2HkBm2B,CAAiB1K,EAAWva,IACtCuhB,GAAcA,IACdwD,IACJ,EAIiB,CACb1B,KAAI,SAACxB,EAASyB,GACV,OAAOjD,EAAuBgD,KAAKxB,EAASyB,EAChD,EACA4B,eAAc,SAACC,GAGX,OAFAvvB,EAAUuvB,SAAWA,EACrBvvB,EAAUovB,SAAW,KACd9xB,GAAAA,CACX,EACIqwB,WACA,OAAOvS,GAAsBpb,EAAU2sB,aAAe,EAC1D,EACIgB,SAAKC,GACL5tB,EAAU2sB,YAAczR,GAAsB0S,EAClD,EACI/B,YACA,OAAO7rB,EAAUwvB,YACrB,EACI3D,UAAMgC,GACN7tB,EAAUwvB,aAAe3B,CAC7B,EACIhJ,eACA,OAAOzJ,GAAsByJ,EACjC,EACA0I,KAAM,WACEzB,IAEJ9rB,EAAUutB,QAIVhwB,EAAAA,GAAAA,IAAY2xB,GAChB,EACApB,MAAO,kBAAM9tB,EAAU8tB,OAAO,EAC9B9D,KAAM,WAEF,GADA8B,GAAa,EACe,SAAxB9rB,EAAUqsB,UAAd,CAUA,IAAQM,EAAgB3sB,EAAhB2sB,YACR,GAAIA,EAAa,CACb,IAAM+B,EAAkBnE,IAAYhpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B6I,GAAO,IACVwgB,UAAU,KAEdr4B,EAAMk9B,gBAAgBf,EAAgBV,OAAOrB,EAlKzC,IAkKoEp6B,MAAOm8B,EAAgBV,OAAOrB,GAAap6B,MAlK/G,GAmKR,CACA48B,GAjBU,CAkBd,EACApB,SAAU,WACFQ,GAEJvuB,EAAUqtB,QACd,EACAhxB,OAAQ8yB,EAGhB,CIpMA,SAASO,GAAsB/7B,GAA8C,IAA3CgxB,EAAShxB,EAATgxB,UAAWmG,EAAKn3B,EAALm3B,MAAOc,EAAQj4B,EAARi4B,SAAUD,EAAUh4B,EAAVg4B,WACpDgE,EAAW,WAUb,OATA/D,GAAYA,EAASjH,EAAUA,EAAUzrB,OAAS,IAClDyyB,GAAcA,IAQP,CACHgC,KAAM,EACN9B,MAAO,EACPhH,SAAU,EACV0I,KAAOjwB,GAAAA,EACPwwB,MAAQxwB,GAAAA,EACR0sB,KAAO1sB,GAAAA,EACPmwB,KAAM,SAACxB,GAEH,OADAA,IACOD,QAAQC,SACnB,EACA5vB,OAASiB,GAAAA,EACTywB,SAAWzwB,GAAAA,EAEnB,EACA,OAAOwtB,EACDP,GAAa,CACX5F,UAAW,CAAC,EAAG,GACfE,SAAU,EACViG,MAAAA,EACAa,WAAYgE,IAEdA,GACV,CCnCA,IAAMC,GAAoB,CACtBrqB,KAAM,SACNuhB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTuI,GAAsB,CACxBtqB,KAAM,YACNsf,SAAU,IAMR7I,GAAO,CACTzW,KAAM,YACNyW,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB6I,SAAU,IAERiL,GAAuB,SAACC,EAAQp8B,GAAoB,IAAhBgxB,EAAShxB,EAATgxB,UACtC,OAAIA,EAAUzrB,OAAS,EACZ22B,GAEFtrB,EAAelL,IAAI02B,GACjBA,EAAStrB,WAAW,SAxBS,CACxCc,KAAM,SACNuhB,UAAW,IACXC,QAAoB,IAsBapC,EAAU,GAtBnB,EAAI7nB,KAAKwjB,KAAK,KAAO,GAC7CgH,UAAW,IAsBDsI,GAEH5T,EACX,EC1BMgU,GAAe,SAAC19B,EAAKC,GAEvB,MAAY,WAARD,MAKiB,kBAAVC,IAAsBoH,MAAMiF,QAAQrM,OAE1B,kBAAVA,IACN6vB,GAAQhe,KAAK7R,IAAoB,MAAVA,GACvBA,EAAMkS,WAAW,SAK1B,ECrBMwrB,GAAc,IAAIv1B,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASw1B,GAAmBvxB,GACxB,IAAAwxB,EAAsBxxB,EAAEyxB,MAAM,GAAI,GAAG3pB,MAAM,KAAI4pB,GAAA54B,EAAAA,GAAAA,GAAA04B,EAAA,GAAxC/wB,EAAIixB,EAAA,GAAE99B,EAAK89B,EAAA,GAClB,GAAa,gBAATjxB,EACA,OAAOT,EACX,IAAAhL,EAAiBpB,EAAMqsB,MAAM1Y,IAAe,GAArCR,GAAuCjO,EAAAA,GAAAA,GAAA9D,EAAA,GAAjC,GACb,IAAK+R,EACD,OAAO/G,EACX,IAAM4H,EAAOhU,EAAM2L,QAAQwH,EAAQ,IAC/B4qB,EAAeL,GAAY52B,IAAI+F,GAAQ,EAAI,EAG/C,OAFIsG,IAAWnT,IACX+9B,GAAgB,KACblxB,EAAO,IAAMkxB,EAAe/pB,EAAO,GAC9C,CACA,IAAMgqB,GAAgB,oBAChBz2B,IAAMyH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6gB,IAAO,IACVG,kBAAmB,SAAC5jB,GAChB,IAAM6xB,EAAY7xB,EAAEigB,MAAM2R,IAC1B,OAAOC,EAAYA,EAAU33B,IAAIq3B,IAAoBpwB,KAAK,KAAOnB,CACrE,ICnBE8xB,IAAiBlvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0F,IAAgB,IAEnB8Y,MAAAA,GACA2Q,gBAAiB3Q,GACjB4Q,aAAc5Q,GACd8O,KAAM9O,GACN6Q,OAAQ7Q,GAER8Q,YAAa9Q,GACb+Q,eAAgB/Q,GAChBgR,iBAAkBhR,GAClBiR,kBAAmBjR,GACnBkR,gBAAiBlR,GACjBjmB,OAAAA,GACAo3B,aAAcp3B,KAKZq3B,GAAsB,SAAC7+B,GAAG,OAAKm+B,GAAkBn+B,EAAI,ECvB3D,SAASiwB,GAAkBjwB,EAAKC,GAC5B,IAAI6+B,EAAmBD,GAAoB7+B,GAI3C,OAHI8+B,IAAqBt3B,KACrBs3B,EAAmBhP,IAEhBgP,EAAiB7O,kBAClB6O,EAAiB7O,kBAAkBhwB,QACnC8D,CACV,CCTA,IAAMg7B,GAAoB,SAAC1yB,GAAC,MAAK,aAAayF,KAAKzF,EAAE,ECDrD,SAAS2yB,GAAO/+B,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiB8+B,GAAkB9+B,QAD7D,CAGT,CCLA,SAASg/B,GAAah/B,EAAO+7B,EAAW5iB,EAAQ6G,GAC5C,IACIoS,EADE6M,EAAqBxB,GAAa1B,EAAW5iB,GAG/CiZ,EADAhrB,MAAMiF,QAAQ8M,IACL5S,EAAAA,GAAAA,GAAO4S,GAGJ,CAAC,KAAMA,GAKvB,IAHA,IAAM+lB,OAAoCp7B,IAApBkc,EAAW3Y,KAAqB2Y,EAAW3Y,KAAOrH,EAAMgH,MAC1Em4B,OAA0Br7B,EACxBs7B,EAAsB,GACnBx4B,EAAI,EAAGA,EAAIwrB,EAAUzrB,OAAQC,IAIb,OAAjBwrB,EAAUxrB,KACVwrB,EAAUxrB,GAAW,IAANA,EAAUs4B,EAAgB9M,EAAUxrB,EAAI,IAEvDm4B,GAAO3M,EAAUxrB,KACjBw4B,EAAoBx5B,KAAKgB,GAGD,kBAAjBwrB,EAAUxrB,IACA,SAAjBwrB,EAAUxrB,IACO,MAAjBwrB,EAAUxrB,KACVu4B,EAA0B/M,EAAUxrB,IAG5C,GAAIq4B,GACAG,EAAoBz4B,QACpBw4B,EACA,IAAK,IAAIv4B,EAAI,EAAGA,EAAIw4B,EAAoBz4B,OAAQC,IAAK,CAEjDwrB,EADcgN,EAAoBx4B,IACfopB,GAAkB+L,EAAWoD,EACpD,CAEJ,OAAO/M,CACX,C,kICrCA,SAASiN,GAAmBj+B,GAAOA,EAAJk+B,KAAmBl+B,EAAbm3B,MAA4Bn3B,EAAbm+B,cAA8Bn+B,EAAfo+B,gBAAiCp+B,EAAhBq+B,iBAAwBr+B,EAANy3B,OAAkBz3B,EAAV63B,WAAuB73B,EAAX23B,YAAiB33B,EAAJiG,KAAajG,EAAPo5B,QAA0B,IAAdxa,EAAUjF,GAAA3Z,EAAAib,IAC/J,QAAStQ,OAAOzE,KAAK0Y,GAAYrZ,MACrC,CACA,SAAS+4B,GAAmB1f,EAAYjgB,GACpC,OAAOigB,EAAWjgB,IAAQigB,EAAoB,SAAKA,CACvD,CCVA,IAAM2f,IACc,ECWdC,GAAqB,SAAC7D,EAAW/7B,EAAOmZ,GAA4B,IAApB6G,EAAUngB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAO,SAACu5B,GACJ,IAAMyG,EAAkBH,GAAmB1f,EAAY+b,IAAc,CAAC,EAMhExD,EAAQsH,EAAgBtH,OAASvY,EAAWuY,OAAS,EAK3DuH,EAAsB9f,EAAhBwa,QAAAA,OAAO,IAAAsF,EAAG,EAACA,EACjBtF,GAAoB7R,GAAsB4P,GAC1C,IAAMnG,EAAY4M,GAAah/B,EAAO+7B,EAAW5iB,EAAQ0mB,GAMnDE,EAAiB3N,EAAU,GAC3B4N,EAAiB5N,EAAUA,EAAUzrB,OAAS,GAC9Cs5B,EAAqBxC,GAAa1B,EAAWgE,GAC7Cd,EAAqBxB,GAAa1B,EAAWiE,IACnDnP,EAAAA,GAAAA,GAAQoP,IAAuBhB,EAAoB,6BAAF98B,OAA+B45B,EAAS,WAAA55B,OAAU49B,EAAc,UAAA59B,OAAS69B,EAAc,OAAA79B,OAAM49B,EAAc,+DAAA59B,OAA8D49B,EAAc,8BAAA59B,OAA6B69B,EAAc,+BACnR,IAAInoB,GAAO7I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPojB,UAAAA,EACA1J,SAAU1oB,EAAMoS,cAChBqX,KAAM,WACHoW,GAAe,IAClBtH,OAAQiC,EACRnB,SAAU,SAACjtB,GACPpM,EAAMiD,IAAImJ,GACVyzB,EAAgBxG,UAAYwG,EAAgBxG,SAASjtB,EACzD,EACAgtB,WAAY,WACRA,IACAyG,EAAgBzG,YAAcyG,EAAgBzG,YAClD,IAuBJ,GAjBKiG,GAAoBQ,KACrBhoB,GAAO7I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA6I,GACA0lB,GAAqBxB,EAAWlkB,KAQvCA,EAAQya,WACRza,EAAQya,SAAW3J,GAAsB9Q,EAAQya,WAEjDza,EAAQkhB,cACRlhB,EAAQkhB,YAAcpQ,GAAsB9Q,EAAQkhB,eAEnDkH,IACAhB,GACDlW,KACyB,IAAzB8W,EAAgB7sB,MAChB2sB,GAKA,OAAOxC,GAAuBpU,IAA6B/Z,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChD6I,GAAO,IAAE0gB,MAAO,IACrB1gB,GAKV,IAMCmI,EAAWkgB,WACRlgC,EAAM08B,OACN18B,EAAM08B,MAAMr9B,mBAAmB8gC,cAK9BngC,EAAM08B,MAAM7Z,WAAWwW,SAAU,CAClC,IAAM+G,EAAuBtE,GAA2B97B,EAAO+7B,EAAWlkB,GAC1E,GAAIuoB,EACA,OAAOA,CACf,CAIA,OAAOpI,GAAangB,EACxB,CACJ,EC/GA,SAASwoB,GAAwBrgC,GAC7B,OAAO+M,QAAQoF,EAAcnS,IAAUA,EAAMqI,IACjD,CCDA,IAAMi4B,GAAoB,SAACl0B,GAAC,MAAK,iBAAiByF,KAAKzF,EAAE,ECHzD,SAASm0B,GAAcvO,EAAKwO,IACG,IAAvBxO,EAAInrB,QAAQ25B,IACZxO,EAAIpsB,KAAK46B,EACjB,CACA,SAASC,GAAWzO,EAAKwO,GACrB,IAAMl4B,EAAQ0pB,EAAInrB,QAAQ25B,GACtBl4B,GAAS,GACT0pB,EAAInqB,OAAOS,EAAO,EAC1B,CCRwD,IAElDo4B,GAAmB,WACrB,SAAAA,KAAc/gC,EAAAA,GAAAA,GAAA,KAAA+gC,GACVvgC,KAAKwgC,cAAgB,EACzB,CA+BC,OA/BA7gC,EAAAA,GAAAA,GAAA4gC,EAAA,EAAA3gC,IAAA,MAAAC,MACD,SAAIygB,GAAS,IAAA0C,EAAA,KAET,OADAod,GAAcpgC,KAAKwgC,cAAelgB,GAC3B,kBAAMggB,GAAWtd,EAAKwd,cAAelgB,EAAQ,CACxD,GAAC,CAAA1gB,IAAA,SAAAC,MACD,SAAOwhB,EAAGC,EAAG6H,GACT,IAAMsX,EAAmBzgC,KAAKwgC,cAAch6B,OAC5C,GAAKi6B,EAEL,GAAyB,IAArBA,EAIAzgC,KAAKwgC,cAAc,GAAGnf,EAAGC,EAAG6H,QAG5B,IAAK,IAAI1iB,EAAI,EAAGA,EAAIg6B,EAAkBh6B,IAAK,CAKvC,IAAM6Z,EAAUtgB,KAAKwgC,cAAc/5B,GACnC6Z,GAAWA,EAAQe,EAAGC,EAAG6H,EAC7B,CAER,GAAC,CAAAvpB,IAAA,UAAAC,MACD,WACI,OAAOG,KAAKwgC,cAAch6B,MAC9B,GAAC,CAAA5G,IAAA,QAAAC,MACD,WACIG,KAAKwgC,cAAch6B,OAAS,CAChC,KAAC+5B,CAAA,CAlCoB,GCGnBG,GAAU,SAAC7gC,GACb,OAAQ+vB,MAAM1c,WAAWrT,GAC7B,EACM8gC,GAAsB,CACxBzhC,aAASyE,GAOPi9B,GAAW,WASb,SAAAA,EAAYC,GAAoB,IAAA7d,EAAA,KAAdtL,EAAOhY,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACF,EAAAA,GAAAA,GAAA,KAAAohC,GAK1B5gC,KAAK8gC,QAAU,UAMf9gC,KAAK+gC,UAAY,EAMjB/gC,KAAKghC,YAAc,EAQnBhhC,KAAKihC,kBAAmB,EAIxBjhC,KAAKkhC,OAAS,CAAC,EACflhC,KAAKmhC,gBAAkB,SAACl1B,GAAqB,IAAlBmE,IAAM1Q,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GAC7BsjB,EAAKmF,KAAOnF,EAAK9jB,QACjB8jB,EAAK9jB,QAAU+M,EAEf,IAAQtD,EAAqBkB,GAAAA,GAAAA,MAAdjB,EAAciB,GAAAA,GAAAA,UACzBmZ,EAAKge,cAAgBp4B,IACrBoa,EAAK+d,UAAYp4B,EACjBqa,EAAKge,YAAcp4B,EACnBzD,GAAAA,GAAAA,WAAiB6d,EAAKoe,wBAGtBpe,EAAKmF,OAASnF,EAAK9jB,SAAW8jB,EAAKke,OAAOG,QAC1Cre,EAAKke,OAAOG,OAAOC,OAAOte,EAAK9jB,SAG/B8jB,EAAKke,OAAOK,gBACZve,EAAKke,OAAOK,eAAeD,OAAOte,EAAK/Q,eAGvC7B,GAAU4S,EAAKke,OAAOM,eACtBxe,EAAKke,OAAOM,cAAcF,OAAOte,EAAK9jB,QAE9C,EASAc,KAAKohC,sBAAwB,kBAAMj8B,GAAAA,GAAAA,WAAiB6d,EAAKye,cAAc,EAUvEzhC,KAAKyhC,cAAgB,SAAAxgC,GAAYA,EAAT2H,YACFoa,EAAKge,cACnBhe,EAAKmF,KAAOnF,EAAK9jB,QACb8jB,EAAKke,OAAOK,gBACZve,EAAKke,OAAOK,eAAeD,OAAOte,EAAK/Q,eAGnD,EACAjS,KAAK0hC,aAAc,EACnB1hC,KAAKmoB,KAAOnoB,KAAKd,QAAU2hC,EAC3B7gC,KAAKihC,iBAAmBP,GAAQ1gC,KAAKd,SACrCc,KAAKu8B,MAAQ7kB,EAAQ6kB,KACzB,CA8NC,OA7ND58B,EAAAA,GAAAA,GAAAihC,EAAA,EAAAhhC,IAAA,WAAAC,MAwCA,SAAS8hC,GAIL,OAAO3hC,KAAK4hC,GAAG,SAAUD,EAC7B,GAAC,CAAA/hC,IAAA,KAAAC,MACD,SAAGwgB,EAAW7b,GAAU,IAAA2e,EAAA,KACfnjB,KAAKkhC,OAAO7gB,KACbrgB,KAAKkhC,OAAO7gB,GAAa,IAAIkgB,IAEjC,IAAMsB,EAAc7hC,KAAKkhC,OAAO7gB,GAAWnY,IAAI1D,GAC/C,MAAkB,WAAd6b,EACO,WACHwhB,IAKA18B,GAAAA,GAAAA,MAAW,WACFge,EAAK+d,OAAOG,OAAOS,WACpB3e,EAAKmU,MAEb,GACJ,EAEGuK,CACX,GAAC,CAAAjiC,IAAA,iBAAAC,MACD,WACI,IAAK,IAAMkiC,KAAiB/hC,KAAKkhC,OAC7BlhC,KAAKkhC,OAAOa,GAAe97B,OAEnC,GACA,CAAArG,IAAA,SAAAC,MAKA,SAAOmiC,EAAeC,GAClBjiC,KAAKgiC,cAAgBA,EACrBhiC,KAAKiiC,kBAAoBA,CAC7B,GACA,CAAAriC,IAAA,MAAAC,MAeA,SAAIoM,GAAkB,IAAfmE,IAAM1Q,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GACJ0Q,GAAWpQ,KAAKgiC,cAIjBhiC,KAAKgiC,cAAc/1B,EAAGjM,KAAKmhC,iBAH3BnhC,KAAKmhC,gBAAgBl1B,EAAGmE,EAKhC,GAAC,CAAAxQ,IAAA,kBAAAC,MACD,SAAgBsoB,EAAMjpB,EAASyJ,GAC3B3I,KAAK8C,IAAI5D,GACTc,KAAKmoB,KAAOA,EACZnoB,KAAK+gC,UAAYp4B,CACrB,GACA,CAAA/I,IAAA,OAAAC,MAIA,SAAKoM,GACDjM,KAAKmhC,gBAAgBl1B,GACrBjM,KAAKmoB,KAAOlc,EACZjM,KAAKs3B,OACDt3B,KAAKiiC,mBACLjiC,KAAKiiC,mBACb,GACA,CAAAriC,IAAA,MAAAC,MAOA,WAII,OAHI8gC,GAAoBzhC,SACpByhC,GAAoBzhC,QAAQuG,KAAKzF,MAE9BA,KAAKd,OAChB,GACA,CAAAU,IAAA,cAAAC,MAGA,WACI,OAAOG,KAAKmoB,IAChB,GACA,CAAAvoB,IAAA,cAAAC,MAOA,WAEI,OAAOG,KAAKihC,iBAEJnO,GAAkB5f,WAAWlT,KAAKd,SAC9BgU,WAAWlT,KAAKmoB,MAAOnoB,KAAK+gC,WAClC,CACV,GACA,CAAAnhC,IAAA,QAAAC,MAYA,SAAMqiC,GAAgB,IAAAC,EAAA,KAElB,OADAniC,KAAKs3B,OACE,IAAIgC,SAAQ,SAACC,GAChB4I,EAAKT,aAAc,EACnBS,EAAK70B,UAAY40B,EAAe3I,GAC5B4I,EAAKjB,OAAOkB,gBACZD,EAAKjB,OAAOkB,eAAed,QAEnC,IAAGvG,MAAK,WACAoH,EAAKjB,OAAOmB,mBACZF,EAAKjB,OAAOmB,kBAAkBf,SAElCa,EAAKG,gBACT,GACJ,GACA,CAAA1iC,IAAA,OAAAC,MAKA,WACQG,KAAKsN,YACLtN,KAAKsN,UAAUgqB,OACXt3B,KAAKkhC,OAAOqB,iBACZviC,KAAKkhC,OAAOqB,gBAAgBjB,UAGpCthC,KAAKsiC,gBACT,GACA,CAAA1iC,IAAA,cAAAC,MAKA,WACI,QAASG,KAAKsN,SAClB,GAAC,CAAA1N,IAAA,iBAAAC,MACD,kBACWG,KAAKsN,SAChB,GACA,CAAA1N,IAAA,UAAAC,MASA,WACIG,KAAKwiC,iBACLxiC,KAAKs3B,OACDt3B,KAAKiiC,mBACLjiC,KAAKiiC,mBAEb,KAACrB,CAAA,CA1TY,GA4TjB,SAAS6B,GAAY5B,EAAMnpB,GACvB,OAAO,IAAIkpB,GAAYC,EAAMnpB,EACjC,CC3UA,IAAMgrB,GAAgB,SAACz2B,GAAC,OAAK,SAAC4G,GAAI,OAAKA,EAAKnB,KAAKzF,EAAE,GCK7C02B,GAAsB,CAAC3vB,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACTzC,KAAM,SAACzF,GAAC,MAAW,SAANA,CAAY,EACzBgH,MAAO,SAAChH,GAAC,OAAKA,CAAC,IDOb22B,GAAyB,SAAC32B,GAAC,OAAK02B,GAAoB5U,KAAK2U,GAAcz2B,GAAG,EEJ1E42B,GAAa,GAAH7gC,QAAAoE,EAAAA,GAAAA,GAAOu8B,IAAmB,CAAEtV,GAAOqC,K,kCCKnD,SAASoT,GAAetzB,EAAe5P,EAAKC,GACpC2P,EAAcuzB,SAASnjC,GACvB4P,EAAcwzB,SAASpjC,GAAKkD,IAAIjD,GAGhC2P,EAAcyzB,SAASrjC,EAAK6iC,GAAY5iC,GAEhD,CACA,SAASqjC,GAAU1zB,EAAe8O,GAC9B,IlFjBkCrS,EkFiB5B0T,EAAW0I,GAAe7Y,EAAe8O,GAC/Crd,EAAyD0e,EAAWnQ,EAAc2zB,qBAAqBxjB,GAAU,GAAS,CAAC,EAACyjB,EAAAniC,EAAtH2e,cAAAA,OAAa,IAAAwjB,EAAG,CAAC,EAACA,EAAsBpqB,GAAtB/X,EAAE4e,WAA0BjF,GAAA3Z,EAAAib,KAEpD,IAAK,IAAMtc,KADXoZ,GAAMnK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQmK,GAAW4G,GACC,CAEtBkjB,GAAetzB,EAAe5P,GlFtBAqM,EkFqBa+M,EAAOpZ,GlFnB/C6e,GAAkBxS,GAAKA,EAAEA,EAAEzF,OAAS,IAAM,EAAIyF,GkFqBrD,CACJ,CAuEA,SAASo3B,GAAwBzjC,EAAKigB,GAClC,GAAKA,EAGL,OADwBA,EAAWjgB,IAAQigB,EAAoB,SAAKA,GAC7C3Y,IAC3B,C,sCC3FA,SAASo8B,GAAoBriC,EAAoCrB,GAAK,IAAtC2jC,EAAatiC,EAAbsiC,cAAeC,EAAcviC,EAAduiC,eACrCC,EAAcF,EAAcz3B,eAAelM,KAAgC,IAAxB4jC,EAAe5jC,GAExE,OADA4jC,EAAe5jC,IAAO,EACf6jC,CACX,CACA,SAASC,GAAoB7jC,EAAOmZ,GAChC,IAAM9Z,EAAUW,EAAMgH,MACtB,IAAII,MAAMiF,QAAQ8M,GAOd,OAAO9Z,IAAY8Z,EANnB,IAAK,IAAIvS,EAAI,EAAGA,EAAIuS,EAAOxS,OAAQC,IAC/B,GAAIuS,EAAOvS,KAAOvH,EACd,OAAO,CAMvB,CACA,SAASykC,GAAcn0B,EAAe8O,GAA0D,IAAAtN,EAAAtR,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACkkC,EAAA5yB,EAA1ConB,MAAAA,OAAK,IAAAwL,EAAG,EAACA,EAAEC,EAAkB7yB,EAAlB6yB,mBAAoBhxB,EAAI7B,EAAJ6B,KAC/EixB,EAAsFt0B,EAAc2zB,qBAAqB7kB,GAAWylB,EAAAD,EAA9HjkB,WAAAA,OAAU,IAAAkkB,EAAGv0B,EAAc4tB,uBAAsB2G,EAAEnkB,EAAakkB,EAAblkB,cAAkB5G,EAAM4B,GAAAkpB,EAAA5nB,IAC3E8nB,EAAax0B,EAAcwzB,SAAS,cACtCa,IACAhkB,EAAagkB,GACjB,IAAMI,EAAa,GACbC,EAAqBrxB,GACvBrD,EAAca,gBACdb,EAAca,eAAe8zB,WAAWtxB,GAAM7E,EAAA,SACvCpO,GACP,IAAMC,EAAQ2P,EAAcwzB,SAASpjC,GAC/BkgB,EAAc9G,EAAOpZ,GAC3B,IAAKC,QACe8D,IAAhBmc,GACCokB,GACGZ,GAAqBY,EAAoBtkC,GAC7C,iBAEJ,IAAM8/B,GAAe7wB,EAAAA,EAAAA,GAAA,CACjBupB,MAAAA,EACAiC,QAAS,GACNkF,GAAmB1f,GAAc,CAAC,EAAGjgB,IAM5C,GAAIsQ,OAAOk0B,wBAAyB,CAChC,IAAMC,EAAW70B,EAAckT,WAAWhX,GAC1C,GAAI24B,EAAU,CACV,IAAMhK,EAAUnqB,OAAOk0B,wBAAwBC,EAAUzkC,EAAKC,EAAOsF,GAAAA,IACrD,OAAZk1B,IACAqF,EAAgBrF,QAAUA,EAC1BqF,EAAgBK,WAAY,EAEpC,CACJ,CACA,IAAIuE,GAAW5E,EAAgBK,YAC1B2D,GAAoB7jC,EAAOigB,GAahC,GAZ6B,WAAzB4f,EAAgB7sB,OACfhT,EAAMoS,eAAiBytB,EAAgBnX,YACxC+b,GAAU,GAOVzkC,EAAMyN,YACNg3B,GAAU,GAEVA,EACA,iBACJzkC,EAAMuM,MAAMqzB,GAAmB7/B,EAAKC,EAAOigB,EAAatQ,EAAc+0B,oBAAsB1yB,EAAelL,IAAI/G,GACzG,CAAEiT,MAAM,GACR6sB,IACN,IAAMpyB,EAAYzN,EAAMyN,UACpB4yB,GAAwB8D,KACxBA,EAAW97B,IAAItI,GACf0N,EAAUytB,MAAK,kBAAMiJ,EAAWp6B,OAAOhK,EAAI,KAE/CqkC,EAAWx+B,KAAK6H,EAAW,EApD/B,IAAK,IAAM1N,KAAOoZ,EAAQhL,EAAfpO,GA2DX,OALIggB,GACA0Z,QAAQ5S,IAAIud,GAAYlJ,MAAK,WACzBnb,GAAiBsjB,GAAU1zB,EAAeoQ,EAC9C,IAEGqkB,CACX,CCjGA,SAASO,GAAeh1B,EAAei1B,GAAuB,IAAd/sB,EAAOhY,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDigB,EAAW0I,GAAe7Y,EAAei1B,EAAS/sB,EAAQrV,QAChEpB,EAAkE0e,GAAY,CAAC,EAAC+kB,EAAAzjC,EAA1E4e,WAAAA,OAAU,IAAA6kB,EAAGl1B,EAAc4tB,wBAA0B,CAAC,EAACsH,EACzDhtB,EAAQmsB,qBACRhkB,EAAanI,EAAQmsB,oBAMzB,IAAMc,EAAehlB,EACf,kBAAM2Z,QAAQ5S,IAAIid,GAAcn0B,EAAemQ,EAAUjI,GAAS,EAClE,kBAAM4hB,QAAQC,SAAS,EAKvBqL,EAAqBp1B,EAAcq1B,iBAAmBr1B,EAAcq1B,gBAAgBzkC,KACpF,WAAsB,IAArB0kC,EAAYplC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EACdqlC,EAAkEllB,EAAUmlB,EAAAD,EAApE3F,cAAAA,OAAa,IAAA4F,EAAG,EAACA,EAAE3F,EAAe0F,EAAf1F,gBAAiBC,EAAgByF,EAAhBzF,iBAC5C,OAAO2F,GAAgBz1B,EAAei1B,EAASrF,EAAgB0F,EAAczF,EAAiBC,EAAkB5nB,EACpH,EACE,kBAAM4hB,QAAQC,SAAS,EAK7B2L,EAAiBrlB,EAATsf,EAAI+F,EAAJ/F,KACR,GAAIA,EAAM,CACN,IAAAnuB,EAA+B,mBAATmuB,EAChB,CAACwF,EAAcC,GACf,CAACA,EAAoBD,GAAaQ,GAAApgC,EAAAA,GAAAA,GAAAiM,EAAA,GAFjCo0B,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAGlB,OAAOC,IAAQrK,MAAK,kBAAMsK,GAAM,GACpC,CAEI,OAAO/L,QAAQ5S,IAAI,CAACie,IAAgBC,EAAmBltB,EAAQ0gB,QAEvE,CACA,SAAS6M,GAAgBz1B,EAAei1B,GAAgF,IAAvErF,EAAa1/B,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAG2/B,EAAe3/B,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAG4/B,EAAgB5/B,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAGgY,EAAOhY,UAAA8G,OAAA,EAAA9G,UAAA,QAAAiE,EAC5GsgC,EAAa,GACbqB,GAAsB91B,EAAcq1B,gBAAgBzkC,KAAO,GAAKi/B,EAChEkG,EAA+C,IAArBjG,EAC1B,eAAC74B,EAAC/G,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAK+G,EAAI44B,CAAe,EAC9B,eAAC54B,EAAC/G,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAK4lC,EAAqB7+B,EAAI44B,CAAe,EAUzD,OATAp4B,MAAMC,KAAKsI,EAAcq1B,iBACpBW,KAAKC,IACL7hC,SAAQ,SAACK,EAAOwC,GACjBxC,EAAMq9B,OAAO,iBAAkBmD,GAC/BR,EAAWx+B,KAAK++B,GAAevgC,EAAOwgC,GAAO51B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtC6I,GAAO,IACV0gB,MAAOgH,EAAgBmG,EAAwB9+B,MAChDs0B,MAAK,kBAAM92B,EAAMq9B,OAAO,oBAAqBmD,EAAQ,IAC5D,IACOnL,QAAQ5S,IAAIud,EACvB,CACA,SAASwB,GAAgBpkB,EAAGC,GACxB,OAAOD,EAAEqkB,iBAAiBpkB,EAC9B,C,sCCpDMqkB,IAAuBv/B,EAAAA,GAAAA,GAAIiG,GAAsBolB,UACjDmU,GAAoBv5B,EAAqB7F,OAC/C,SAASq/B,GAAYr2B,GACjB,OAAO,SAACy0B,GAAU,OAAK3K,QAAQ5S,IAAIud,EAAW99B,KAAI,SAAAlF,GAAA,IAAGqM,EAASrM,EAATqM,UAAWoK,EAAOzW,EAAPyW,QAAO,OCP3E,SAA8BlI,EAAe8O,GAA0B,IAE/DhR,EAFiDoK,EAAOhY,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFA8P,EAAc8xB,OAAO,iBAAkBhjB,GAEnCrX,MAAMiF,QAAQoS,GAAa,CAC3B,IAAM2lB,EAAa3lB,EAAWnY,KAAI,SAACs+B,GAAO,OAAKD,GAAeh1B,EAAei1B,EAAS/sB,EAAQ,IAC9FpK,EAAYgsB,QAAQ5S,IAAIud,EAC5B,MACK,GAA0B,kBAAf3lB,EACZhR,EAAYk3B,GAAeh1B,EAAe8O,EAAY5G,OAErD,CACD,IAAMouB,EAA2C,oBAAfxnB,EAC5B+J,GAAe7Y,EAAe8O,EAAY5G,EAAQrV,QAClDic,EACNhR,EAAYgsB,QAAQ5S,IAAIid,GAAcn0B,EAAes2B,EAAoBpuB,GAC7E,CACA,OAAOpK,EAAUytB,MAAK,kBAAMvrB,EAAc8xB,OAAO,oBAAqBhjB,EAAW,GACrF,CDVkFynB,CAAqBv2B,EAAelC,EAAWoK,EAAQ,IAAE,CAC3I,CACA,SAASsuB,GAAqBx2B,GAC1B,IAAIhD,EAAUq5B,GAAYr2B,GACpB9G,EA6RC,CACH8D,QAASy5B,IAAgB,GACzBC,YAAaD,KACbtjB,WAAYsjB,KACZhsB,SAAUgsB,KACVE,UAAWF,KACXG,WAAYH,KACZ14B,KAAM04B,MAnSNlgC,GAAkB,EAKhBsgC,EAA0B,SAACr9B,EAAKsV,GAClC,IAAMqB,EAAW0I,GAAe7Y,EAAe8O,GAC/C,GAAIqB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkB5G,EAAM4B,GAAK+E,EAAQzD,IACzDlT,GAAG6F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ7F,GAAQgQ,GAAW4G,EAClC,CACA,OAAO5W,CACX,EAkBA,SAASsH,EAAeoH,EAAS4uB,GA8B7B,IA7BA,IAAMrmC,EAAQuP,EAAckT,WACtB/f,EAAU6M,EAAc+2B,mBAAkB,IAAS,CAAC,EAKpDtC,EAAa,GAKbuC,EAAc,IAAIx+B,IAMpBy+B,EAAkB,CAAC,EAKnBC,EAAsBjP,IAC1BzpB,EAAA,SAMSvH,GACL,IAAMoM,EAAO8yB,GAAqBl/B,GAC5BkgC,EAAYj+B,EAAMmK,GAClB1F,OAAuBxJ,IAAhB1D,EAAM4S,GAAsB5S,EAAM4S,GAAQlQ,EAAQkQ,GACzD+zB,EAAgB56B,EAAemB,GAK/B05B,EAAch0B,IAASyzB,EAAoBK,EAAUpkB,SAAW,MAClD,IAAhBskB,IACAH,EAAsBjgC,GAO1B,IAAIqgC,EAAc35B,IAASxK,EAAQkQ,IAAS1F,IAASlN,EAAM4S,IAAS+zB,EAepE,GAXIE,GACA/gC,GACAyJ,EAAcu3B,yBACdD,GAAc,GAMlBH,EAAUpD,eAAa10B,EAAAA,EAAAA,GAAA,GAAQ43B,IAI7BE,EAAUpkB,UAA4B,OAAhBskB,IAElB15B,IAASw5B,EAAUK,UAErB76B,EAAoBgB,IACJ,mBAATA,EACP,iBAOJ,IAAM85B,EA8JlB,SAAgC9e,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAIlhB,MAAMiF,QAAQgc,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CAtKqC+e,CAAuBP,EAAUK,SAAU75B,GAChEg6B,EAAoBF,GAEnBp0B,IAASyzB,GACNK,EAAUpkB,WACTukB,GACDF,GAEHngC,EAAIigC,GAAuBE,EAC5BQ,GAAuB,EAKrBC,EAAiBpgC,MAAMiF,QAAQiB,GAAQA,EAAO,CAACA,GAKjDm6B,EAAiBD,EAAet+B,OAAOs9B,EAAyB,CAAC,IACjD,IAAhBQ,IACAS,EAAiB,CAAC,GAUtB,IAAAC,EAAoCZ,EAA5Ba,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,GAAO54B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN24B,GACAF,GAEDI,EAAgB,SAAC9nC,GACnBunC,GAAoB,EAChBX,EAAY7/B,IAAI/G,KAChBwnC,GAAuB,EACvBZ,EAAY9iC,OAAO9D,IAEvB+mC,EAAUnD,eAAe5jC,IAAO,CACpC,EACA,IAAK,IAAMA,KAAO6nC,EAAS,CACvB,IAAMvf,EAAOof,EAAe1nC,GACtBuoB,EAAOqf,EAAmB5nC,GAEhC,IAAI6mC,EAAgB36B,eAAelM,GAAnC,EAMI6e,GAAkByJ,IAASzJ,GAAkB0J,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,QAGdxkB,IAATukB,EAEAwf,EAAc9nC,GAId4mC,EAAYt+B,IAAItI,QAGN+D,IAATukB,GAAsBse,EAAY7/B,IAAI/G,GAK3C8nC,EAAc9nC,GAOd+mC,EAAUpD,cAAc3jC,IAAO,CAjCvB,CAmChB,CAKA+mC,EAAUK,SAAW75B,EACrBw5B,EAAUa,mBAAqBF,EAI3BX,EAAUpkB,WACVkkB,GAAe53B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ43B,GAAoBa,IAE3CvhC,GAAmByJ,EAAcO,wBACjCo3B,GAAoB,IAKpBA,GAAuBL,IAAeM,GACtCnD,EAAWx+B,KAAIhG,MAAfwkC,GAAU79B,EAAAA,GAAAA,GAASihC,EAAelhC,KAAI,SAACmH,GAAS,MAAM,CAClDA,UAAWA,EACXoK,SAAO7I,EAAAA,EAAAA,GAAA,CAAIgE,KAAAA,GAAS6E,GACvB,KACJ,EA5JIjR,EAAI,EAAGA,EAAIm/B,GAAmBn/B,IAAKuH,EAAnCvH,GAmKT,GAAI+/B,EAAYpmC,KAAM,CAClB,IAAMunC,EAAoB,CAAC,EAC3BnB,EAAY5iC,SAAQ,SAAChE,GACjB,IAAMgoC,EAAiBp4B,EAAcq4B,cAAcjoC,QAC5B+D,IAAnBikC,IACAD,EAAkB/nC,GAAOgoC,EAEjC,IACA3D,EAAWx+B,KAAK,CAAE6H,UAAWq6B,GACjC,CACA,IAAIG,EAAgBl7B,QAAQq3B,EAAWz9B,QAOvC,OANIT,IACmB,IAAlB9F,EAAMkC,SAAqBlC,EAAMkC,UAAYlC,EAAMuM,SACnDgD,EAAcu3B,yBACfe,GAAgB,GAEpB/hC,GAAkB,EACX+hC,EAAgBt7B,EAAQy3B,GAAc3K,QAAQC,SACzD,CAkBA,MAAO,CACHjpB,eAAAA,EACAsS,UAhBJ,SAAmB/P,EAAM0P,EAAU7K,GAC/B,IAAI6C,EAEJ,GAAI7R,EAAMmK,GAAM0P,WAAaA,EACzB,OAAO+W,QAAQC,UAEsB,QAAxChf,EAAK/K,EAAcq1B,uBAAoC,IAAPtqB,GAAyBA,EAAG3W,SAAQ,SAACK,GAAY,IAAIsW,EAAI,OAAuC,QAA/BA,EAAKtW,EAAMoM,sBAAmC,IAAPkK,OAAgB,EAASA,EAAGqI,UAAU/P,EAAM0P,EAAW,IAChN7Z,EAAMmK,GAAM0P,SAAWA,EACvB,IAAM0hB,EAAa3zB,EAAeoH,EAAS7E,GAC3C,IAAK,IAAMjT,KAAO8I,EACdA,EAAM9I,GAAK2jC,cAAgB,CAAC,EAEhC,OAAOU,CACX,EAII8D,mBArPJ,SAA4BC,GACxBx7B,EAAUw7B,EAAax4B,EAC3B,EAoPI20B,SAAU,kBAAMz7B,CAAK,EAE7B,CAUA,SAASu9B,KAAkC,IAAlB1jB,EAAQ7iB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAC7B,MAAO,CACH6iB,SAAAA,EACAghB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBgE,mBAAoB,CAAC,EAE7B,CExSyC,IAEnCS,GAAgB,SAAAnlB,IAAAzjB,EAAAA,GAAAA,GAAA4oC,EAAAnlB,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAA0oC,GAMlB,SAAAA,EAAY5lB,GAAM,IAAAW,EAE4D,OAF5DxjB,EAAAA,GAAAA,GAAA,KAAAyoC,GACdjlB,EAAA1jB,EAAAyM,KAAA,KAAMsW,GACNA,EAAKhS,iBAAmBgS,EAAKhS,eAAiB21B,GAAqB3jB,IAAOW,CAC9E,CAqBa,OArBZrjB,EAAAA,GAAAA,GAAAsoC,EAAA,EAAAroC,IAAA,sCAAAC,MACD,WACI,IAAQ2M,EAAYxM,KAAKqiB,KAAKK,WAAtBlW,QACRxM,KAAK8Q,UACD3E,EAAoBK,KACpBxM,KAAK8Q,QAAUtE,EAAQ07B,UAAUloC,KAAKqiB,MAE9C,GACA,CAAAziB,IAAA,QAAAC,MAGA,WACIG,KAAKmoC,qCACT,GAAC,CAAAvoC,IAAA,SAAAC,MACD,WACwBG,KAAKqiB,KAAKK,WAAtBlW,WACyBxM,KAAKqiB,KAAKviB,WAAa,CAAC,GAAjD0M,SAEJxM,KAAKmoC,qCAEb,GAAC,CAAAvoC,IAAA,UAAAC,MACD,WAAY,KAACooC,CAAA,CA9BK,CAAS7lB,ICF3BlhB,GAAK,EACHknC,GAAoB,SAAAtlB,IAAAzjB,EAAAA,GAAAA,GAAA+oC,EAAAtlB,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAA6oC,GACtB,SAAAA,IAAc,IAAAplB,EAEK,OAFLxjB,EAAAA,GAAAA,GAAA,KAAA4oC,IACVplB,EAAA1jB,EAAAG,MAAA,KAASC,YACJwB,GAAKA,KAAK8hB,CACnB,CAoBa,OApBZrjB,EAAAA,GAAAA,GAAAyoC,EAAA,EAAAxoC,IAAA,SAAAC,MACD,WAAS,IAAAsjB,EAAA,KACL,GAAKnjB,KAAKqiB,KAAK1S,gBAAf,CAEA,IAAA04B,EAA8CroC,KAAKqiB,KAAK1S,gBAAhDxP,EAASkoC,EAATloC,UAAWiC,EAAcimC,EAAdjmC,eAAgBC,EAAMgmC,EAANhmC,OAChBimC,GAAkBtoC,KAAKqiB,KAAKkmB,qBAAuB,CAAC,GAA/DpoC,UACR,GAAKH,KAAKqiB,KAAKhS,gBAAkBlQ,IAAcmoC,EAA/C,CAGA,IAAME,EAAgBxoC,KAAKqiB,KAAKhS,eAAeuS,UAAU,QAASziB,EAAW,CAAEkC,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASrC,KAAKqiB,KAAKK,WAAWrgB,SACxJD,IAAmBjC,GACnBqoC,EAAczN,MAAK,kBAAM34B,EAAe+gB,EAAKjiB,GAAG,GAHpD,CALU,CAUd,GAAC,CAAAtB,IAAA,QAAAC,MACD,WACI,IAAQ4D,GAAazD,KAAKqiB,KAAK1S,iBAAmB,CAAC,GAA3ClM,SACJA,IACAzD,KAAK8Q,QAAUrN,EAASzD,KAAKkB,IAErC,GAAC,CAAAtB,IAAA,UAAAC,MACD,WAAY,KAACuoC,CAAA,CAxBS,CAAShmB,ICA7B6hB,GAAa,CACf32B,UAAW,CACP8U,QAAS6lB,IAEb16B,KAAM,CACF6U,QAASgmB,KCRXzxB,GAAW,SAAC0K,EAAGC,GAAC,OAAKlX,KAAK0gB,IAAIzJ,EAAIC,EAAE,EAC1C,SAASmnB,GAAWpnB,EAAGC,GAEnB,IAAMonB,EAAS/xB,GAAS0K,EAAElP,EAAGmP,EAAEnP,GACzBw2B,EAAShyB,GAAS0K,EAAEjP,EAAGkP,EAAElP,GAC/B,OAAOhI,KAAKwjB,KAAKxjB,KAAAohB,IAAAkd,EAAU,GAACt+B,KAAAohB,IAAGmd,EAAU,GAC7C,CCEA,IAGMC,GAAU,WACZ,SAAAA,EAAYjoB,EAAOkoB,GAAgF,IAAA7lB,EAAA,KAAA/hB,EAAAvB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAjEqL,EAAkB9J,EAAlB8J,mBAAoB+9B,EAAa7nC,EAAb6nC,cAAaC,EAAA9nC,EAAE+nC,iBAAAA,OAAgB,IAAAD,GAAQA,EAgEtF,IAhEsFvpC,EAAAA,GAAAA,GAAA,KAAAopC,GAItF5oC,KAAKgkB,WAAa,KAIlBhkB,KAAKipC,cAAgB,KAIrBjpC,KAAKkpC,kBAAoB,KAIzBlpC,KAAK6oC,SAAW,CAAC,EAIjB7oC,KAAK8oC,cAAgB54B,OACrBlQ,KAAKmpC,YAAc,WACf,GAAMnmB,EAAKimB,eAAiBjmB,EAAKkmB,kBAAjC,CAEA,IAAMzmB,EAAO2mB,GAAWpmB,EAAKkmB,kBAAmBlmB,EAAKqmB,SAC/CC,EAAmC,OAApBtmB,EAAKgB,WAIpBulB,EAA0Bd,GAAWhmB,EAAKrH,OAAQ,CAAEjJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKk3B,GAAiBC,EAAtB,CAEA,IAAQtoB,EAAUwB,EAAVxB,MACArY,EAAciB,GAAAA,GAAAA,UACtBmZ,EAAKqmB,QAAQ5jC,MAAIoJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoS,GAAK,IAAErY,UAAAA,KAC9B,IAAA4gC,EAA4BxmB,EAAK6lB,SAAzBY,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZJ,IACDG,GAAWA,EAAQzmB,EAAKimB,cAAexmB,GACvCO,EAAKgB,WAAahB,EAAKimB,eAE3BS,GAAUA,EAAO1mB,EAAKimB,cAAexmB,EAT3B,CARA,CAkBd,EACAziB,KAAK2pC,kBAAoB,SAAChpB,EAAO8B,GAC7BO,EAAKimB,cAAgBtoB,EACrBqC,EAAKkmB,kBAAoBU,GAAennB,EAAMO,EAAKjY,oBAEnD5F,GAAAA,GAAAA,OAAa6d,EAAKmmB,aAAa,EACnC,EACAnpC,KAAK6pC,gBAAkB,SAAClpB,EAAO8B,GAC3BO,EAAK8mB,MACL,IAAAC,EAAiD/mB,EAAK6lB,SAA9CmB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aAAcC,EAAeH,EAAfG,gBAG7B,GAFIlnB,EAAKgmB,kBACLkB,GAAmBA,IACjBlnB,EAAKimB,eAAiBjmB,EAAKkmB,kBAAjC,CAEA,IAAMiB,EAAUf,GAA0B,kBAAfzoB,EAAM9N,KAC3BmQ,EAAKkmB,kBACLU,GAAennB,EAAMO,EAAKjY,oBAAqBiY,EAAKqmB,SACtDrmB,EAAKgB,YAAcgmB,GACnBA,EAAMrpB,EAAOwpB,GAEjBF,GAAgBA,EAAatpB,EAAOwpB,EAP1B,CAQd,EAEKzpB,GAAiBC,GAAtB,CAEA3gB,KAAKgpC,iBAAmBA,EACxBhpC,KAAK6oC,SAAWA,EAChB7oC,KAAK+K,mBAAqBA,EAC1B/K,KAAK8oC,cAAgBA,GAAiB54B,OACtC,IAAMuS,EAAO1B,GAAiBJ,GACxBypB,EAAcR,GAAennB,EAAMziB,KAAK+K,oBACtCkW,EAAUmpB,EAAVnpB,MACArY,EAAciB,GAAAA,GAAAA,UACtB7J,KAAKqpC,QAAU,EAAAx6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMoS,GAAK,IAAErY,UAAAA,KAC5B,IAAQyhC,EAAmBxB,EAAnBwB,eACRA,GACIA,EAAe1pB,EAAOyoB,GAAWgB,EAAapqC,KAAKqpC,UACvDrpC,KAAKsqC,gBAAkB/oB,GAAKL,GAAgBlhB,KAAK8oC,cAAe,cAAe9oC,KAAK2pC,mBAAoBzoB,GAAgBlhB,KAAK8oC,cAAe,YAAa9oC,KAAK6pC,iBAAkB3oB,GAAgBlhB,KAAK8oC,cAAe,gBAAiB9oC,KAAK6pC,iBAbhO,CAcd,CAOC,OAPAlqC,EAAAA,GAAAA,GAAAipC,EAAA,EAAAhpC,IAAA,iBAAAC,MACD,SAAegpC,GACX7oC,KAAK6oC,SAAWA,CACpB,GAAC,CAAAjpC,IAAA,MAAAC,MACD,WACIG,KAAKsqC,iBAAmBtqC,KAAKsqC,mBAC7Bz/B,EAAAA,GAAAA,IAAY7K,KAAKmpC,YACrB,KAACP,CAAA,CAvFW,GAyFhB,SAASgB,GAAennB,EAAM1X,GAC1B,OAAOA,EAAqB,CAAEkW,MAAOlW,EAAmB0X,EAAKxB,QAAWwB,CAC5E,CACA,SAAS8nB,GAAclpB,EAAGC,GACtB,MAAO,CAAEnP,EAAGkP,EAAElP,EAAImP,EAAEnP,EAAGC,EAAGiP,EAAEjP,EAAIkP,EAAElP,EACtC,CACA,SAASg3B,GAAUp4B,EAAYq4B,GAAS,IAAlBpoB,EAAKjQ,EAALiQ,MAClB,MAAO,CACHA,MAAAA,EACAtY,MAAO4hC,GAActpB,EAAOupB,GAAgBnB,IAC5CjuB,OAAQmvB,GAActpB,EAAOwpB,GAAiBpB,IAC9C9gB,SAAUtW,GAAYo3B,EAAS,IAEvC,CACA,SAASoB,GAAiBpB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASmB,GAAgBnB,GACrB,OAAOA,EAAQA,EAAQ7iC,OAAS,EACpC,CACA,SAASyL,GAAYo3B,EAAStI,GAC1B,GAAIsI,EAAQ7iC,OAAS,EACjB,MAAO,CAAE2L,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI3L,EAAI4iC,EAAQ7iC,OAAS,EACrBkkC,EAAmB,KACjBC,EAAYH,GAAgBnB,GAC3B5iC,GAAK,IACRikC,EAAmBrB,EAAQ5iC,KACvBkkC,EAAU/hC,UAAY8hC,EAAiB9hC,UACvC4f,GAAsBuY,MAG1Bt6B,IAEJ,IAAKikC,EACD,MAAO,CAAEv4B,EAAG,EAAGC,EAAG,GAEtB,IAAM6oB,EAAOvS,GAAsBiiB,EAAU/hC,UAAY8hC,EAAiB9hC,WAC1E,GAAa,IAATqyB,EACA,MAAO,CAAE9oB,EAAG,EAAGC,EAAG,GAEtB,IAAMoM,EAAkB,CACpBrM,GAAIw4B,EAAUx4B,EAAIu4B,EAAiBv4B,GAAK8oB,EACxC7oB,GAAIu4B,EAAUv4B,EAAIs4B,EAAiBt4B,GAAK6oB,GAQ5C,OANIzc,EAAgBrM,IAAMslB,MACtBjZ,EAAgBrM,EAAI,GAEpBqM,EAAgBpM,IAAMqlB,MACtBjZ,EAAgBpM,EAAI,GAEjBoM,CACX,CCvJA,SAASosB,GAAWC,GAChB,OAAOA,EAAKxgC,IAAMwgC,EAAKvgC,GAC3B,CACA,SAASwgC,GAAOjrC,GAAuC,IAAhCmZ,EAAMtZ,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAGqrC,EAAWrrC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAO0K,KAAK0gB,IAAIjrB,EAAQmZ,IAAW+xB,CACvC,CACA,SAASC,GAAcriC,EAAOsQ,EAAQD,GAAsB,IAAdmC,EAAMzb,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,GACnDiJ,EAAMwS,OAASA,EACfxS,EAAMsiC,YAAcrsB,GAAI3F,EAAO3O,IAAK2O,EAAO5O,IAAK1B,EAAMwS,QACtDxS,EAAMyK,MAAQw3B,GAAW5xB,GAAU4xB,GAAW3xB,IAC1C6xB,GAAOniC,EAAMyK,MAAO,EAAG,OAAWwc,MAAMjnB,EAAMyK,UAC9CzK,EAAMyK,MAAQ,GAClBzK,EAAMuiC,UACFtsB,GAAI5F,EAAO1O,IAAK0O,EAAO3O,IAAK1B,EAAMwS,QAAUxS,EAAMsiC,aAClDH,GAAOniC,EAAMuiC,YAActb,MAAMjnB,EAAMuiC,cACvCviC,EAAMuiC,UAAY,EAC1B,CACA,SAASC,GAAaxiC,EAAOsQ,EAAQD,EAAQmC,GACzC6vB,GAAcriC,EAAMwJ,EAAG8G,EAAO9G,EAAG6G,EAAO7G,EAAGgJ,EAASA,EAAOlE,aAAUtT,GACrEqnC,GAAcriC,EAAMyJ,EAAG6G,EAAO7G,EAAG4G,EAAO5G,EAAG+I,EAASA,EAAOjE,aAAUvT,EACzE,CACA,SAASynC,GAAiBpyB,EAAQqyB,EAAU57B,GACxCuJ,EAAO1O,IAAMmF,EAAOnF,IAAM+gC,EAAS/gC,IACnC0O,EAAO3O,IAAM2O,EAAO1O,IAAMsgC,GAAWS,EACzC,CACA,SAASC,GAAgBtyB,EAAQqyB,EAAU57B,GACvC27B,GAAiBpyB,EAAO7G,EAAGk5B,EAASl5B,EAAG1C,EAAO0C,GAC9Ci5B,GAAiBpyB,EAAO5G,EAAGi5B,EAASj5B,EAAG3C,EAAO2C,EAClD,CACA,SAASm5B,GAAyBvyB,EAAQlL,EAAQ2B,GAC9CuJ,EAAO1O,IAAMwD,EAAOxD,IAAMmF,EAAOnF,IACjC0O,EAAO3O,IAAM2O,EAAO1O,IAAMsgC,GAAW98B,EACzC,CACA,SAAS09B,GAAqBxyB,EAAQlL,EAAQ2B,GAC1C87B,GAAyBvyB,EAAO7G,EAAGrE,EAAOqE,EAAG1C,EAAO0C,GACpDo5B,GAAyBvyB,EAAO5G,EAAGtE,EAAOsE,EAAG3C,EAAO2C,EACxD,CCZA,SAASq5B,GAA4BZ,EAAMvgC,EAAKD,GAC5C,MAAO,CACHC,SAAa3G,IAAR2G,EAAoBugC,EAAKvgC,IAAMA,OAAM3G,EAC1C0G,SAAa1G,IAAR0G,EACCwgC,EAAKxgC,IAAMA,GAAOwgC,EAAKxgC,IAAMwgC,EAAKvgC,UAClC3G,EAEd,CAcA,SAAS+nC,GAA4BC,EAAYC,GAC7C,IAAIthC,EAAMshC,EAAgBthC,IAAMqhC,EAAWrhC,IACvCD,EAAMuhC,EAAgBvhC,IAAMshC,EAAWthC,IAG3C,GAAIuhC,EAAgBvhC,IAAMuhC,EAAgBthC,IACtCqhC,EAAWthC,IAAMshC,EAAWrhC,IAAK,KAAA66B,EACpB,CAAC96B,EAAKC,GAAlBA,EAAG66B,EAAA,GAAE96B,EAAG86B,EAAA,EACb,CACA,MAAO,CAAE76B,IAAAA,EAAKD,IAAAA,EAClB,CAuCA,IAAMwhC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH3hC,IAAK4hC,GAAoBH,EAAaC,GACtC3hC,IAAK6hC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,SAASC,GAAS5nC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS6nC,GAAuBprC,GAAgC,IAA7BP,EAAGO,EAAHP,IAC/B,MAAO,CACHyR,EAAG,CAAE7H,IAF+BrJ,EAAJL,KAEhByJ,IAF2BpJ,EAALoU,OAGtCjD,EAAG,CAAE9H,IAAK5J,EAAK2J,IAHoCpJ,EAANqU,QAKrD,CCVA,SAASg3B,GAAgBl5B,GACrB,YAAiBzP,IAAVyP,GAAiC,IAAVA,CAClC,CACA,SAASm5B,GAAQtrC,GAA4B,IAAzBmS,EAAKnS,EAALmS,MAAOiD,EAAMpV,EAANoV,OAAQC,EAAMrV,EAANqV,OAC/B,OAASg2B,GAAgBl5B,KACpBk5B,GAAgBj2B,KAChBi2B,GAAgBh2B,EACzB,CACA,SAASwB,GAAa5U,GAClB,OAAQqpC,GAASrpC,IACbspC,GAAetpC,IACfA,EAAOmP,GACPnP,EAAO+S,QACP/S,EAAOgT,SACPhT,EAAOiT,OACf,CACA,SAASq2B,GAAetpC,GACpB,OAAOupC,GAAcvpC,EAAOiP,IAAMs6B,GAAcvpC,EAAOkP,EAC3D,CACA,SAASq6B,GAAc5sC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS6sC,GAAWzrB,EAAO7N,EAAO63B,GAG9B,OAAOA,EADQ73B,GADY6N,EAAQgqB,EAGvC,CAIA,SAAS0B,GAAgB1rB,EAAOiqB,EAAW93B,EAAO63B,EAAa2B,GAI3D,YAHiBjpC,IAAbipC,IACA3rB,EAAQyrB,GAAWzrB,EAAO2rB,EAAU3B,IAEjCyB,GAAWzrB,EAAO7N,EAAO63B,GAAeC,CACnD,CAIA,SAAS2B,GAAehC,GAAuD,IAAjDK,EAASxrC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAG0T,EAAK1T,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAGurC,EAAWvrC,UAAA8G,OAAA,EAAA9G,UAAA,QAAAiE,EAAEipC,EAAQltC,UAAA8G,OAAA,EAAA9G,UAAA,QAAAiE,EACzEknC,EAAKvgC,IAAMqiC,GAAgB9B,EAAKvgC,IAAK4gC,EAAW93B,EAAO63B,EAAa2B,GACpE/B,EAAKxgC,IAAMsiC,GAAgB9B,EAAKxgC,IAAK6gC,EAAW93B,EAAO63B,EAAa2B,EACxE,CAIA,SAASE,GAAcC,EAAG9rC,GAAY,IAARkR,EAAClR,EAADkR,EAAGC,EAACnR,EAADmR,EAC7By6B,GAAeE,EAAI56B,EAAGA,EAAE+4B,UAAW/4B,EAAEiB,MAAOjB,EAAE84B,aAC9C4B,GAAeE,EAAI36B,EAAGA,EAAE84B,UAAW94B,EAAEgB,MAAOhB,EAAE64B,YAClD,CAuDA,SAAS+B,GAAc55B,GACnB,OAAI65B,OAAOC,UAAU95B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS+5B,GAActC,EAAMl0B,GACzBk0B,EAAKvgC,IAAMugC,EAAKvgC,IAAMqM,EACtBk0B,EAAKxgC,IAAMwgC,EAAKxgC,IAAMsM,CAC1B,CAMA,SAASy2B,GAAcvC,EAAMwC,EAAUr8B,GAA8B,IAAAm0B,GAAApgC,EAAAA,GAAAA,GAAAiM,EAAA,GAA3BpR,EAAGulC,EAAA,GAAEmI,EAAQnI,EAAA,GAAEoI,EAASpI,EAAA,GACxDqI,OAAuC7pC,IAA1B0pC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAcrsB,GAAIisB,EAAKvgC,IAAKugC,EAAKxgC,IAAKmjC,GAE5CX,GAAehC,EAAMwC,EAAWztC,GAAMytC,EAAWC,GAAWrC,EAAaoC,EAAWj6B,MACxF,CAIA,IAAMq6B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKj6B,GACvBs6B,GAAcL,EAAI56B,EAAGW,EAAW26B,IAChCL,GAAcL,EAAI36B,EAAGU,EAAW46B,GACpC,CCpHA,SAASE,GAAmBh9B,EAAUg5B,GAClC,OAAOyC,GHeX,SAA4BprB,EAAO2oB,GAC/B,IAAKA,EACD,OAAO3oB,EACX,IAAM4sB,EAAUjE,EAAe,CAAEz3B,EAAG8O,EAAMrgB,KAAMwR,EAAG6O,EAAMvgB,MACnDotC,EAAclE,EAAe,CAAEz3B,EAAG8O,EAAM5L,MAAOjD,EAAG6O,EAAM3L,SAC9D,MAAO,CACH5U,IAAKmtC,EAAQz7B,EACbxR,KAAMitC,EAAQ17B,EACdmD,OAAQw4B,EAAY17B,EACpBiD,MAAOy4B,EAAY37B,EAE3B,CG1BmC47B,CAAmBn9B,EAASqP,wBAAyB2pB,GACxF,CCJA,IAAMoE,GAAmB,SAAH/sC,GAAoB,IAAd/B,EAAO+B,EAAP/B,QACxB,OAAOA,EAAUA,EAAQ+uC,cAAcC,YAAc,IACzD,ECgBMC,GAAsB,IAAI3oB,QAK1B4oB,GAAyB,WAC3B,SAAAA,EAAY5+B,IAAehQ,EAAAA,GAAAA,GAAA,KAAA4uC,GAIvBpuC,KAAKquC,eAAiB,KACtBruC,KAAKsuC,YAAa,EAClBtuC,KAAKuuC,iBAAmB,KACxBvuC,KAAKirC,YAAc,CAAE94B,EAAG,EAAGC,EAAG,GAI9BpS,KAAKwuC,aAAc,EACnBxuC,KAAKyuC,uBAAwB,EAI7BzuC,KAAK0uC,QC9BY,CACrBv8B,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,IDgCjCrK,KAAKwP,cAAgBA,CACzB,CA6ZC,OA7ZA7P,EAAAA,GAAAA,GAAAyuC,EAAA,EAAAxuC,IAAA,QAAAC,MACD,SAAM8uC,GAA4C,IAAA3rB,EAAA,KAAA/hB,EAAAvB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACkvC,EAAA3tC,EAA3B4tC,aAAAA,OAAY,IAAAD,GAAQA,EAI7Bj/B,EAAoB3P,KAAKwP,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBxP,UAAvC,CAEA,IAAMkqC,EAAiB,SAAC1pB,GACSqC,EAAKN,WAA1BsmB,iBAGWhmB,EAAK8rB,iBAAmB9rB,EAAK+rB,gBAC5CF,GACA7rB,EAAK6rB,aAAa9tB,GAAiBJ,EAAO,QAAQM,MAE1D,EACMwoB,EAAU,SAAC9oB,EAAO8B,GAEpB,IAAAusB,EAA+ChsB,EAAKN,WAA5ClV,EAAIwhC,EAAJxhC,KAAMyhC,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAI1hC,GAASyhC,IACLjsB,EAAKqrB,gBACLrrB,EAAKqrB,iBACTrrB,EAAKqrB,eAAiBtsB,GAAcvU,GAE/BwV,EAAKqrB,gBALd,CAQArrB,EAAKsrB,YAAa,EAClBtrB,EAAKurB,iBAAmB,KACxBvrB,EAAKmsB,qBACDnsB,EAAKxT,cAAc+N,aACnByF,EAAKxT,cAAc+N,WAAW6xB,oBAAqB,EACnDpsB,EAAKxT,cAAc+N,WAAWvE,YAASrV,GAK3CyoC,IAAS,SAACvB,GACN,IAAI3rC,EAAU8jB,EAAKqsB,mBAAmBxE,GAAMhkC,OAAS,EAIrD,GAAIoN,GAAQvC,KAAKxS,GAAU,CACvB,IAAQqe,EAAeyF,EAAKxT,cAApB+N,WACR,GAAIA,GAAcA,EAAWzP,OAAQ,CACjC,IAAMwhC,EAAe/xB,EAAWzP,OAAOyhC,UAAU1E,GACjD,GAAIyE,EAEApwC,EADe0rC,GAAW0E,IACNp8B,WAAWhU,GAAW,IAElD,CACJ,CACA8jB,EAAKioB,YAAYJ,GAAQ3rC,CAC7B,IAEIgwC,GACA/pC,GAAAA,GAAAA,QAAa,kBAAM+pC,EAAYvuB,EAAO8B,EAAK,IAAE,GAAO,GAExD,IAAQpS,EAAmB2S,EAAKxT,cAAxBa,eACRA,GAAkBA,EAAeuS,UAAU,aAAa,EAjCxD,CAkCJ,EACM8mB,EAAS,SAAC/oB,EAAO8B,GAEnB,IAAA+sB,EAAyExsB,EAAKN,WAAtEusB,EAAeO,EAAfP,gBAAiBQ,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKV,GAAoBjsB,EAAKqrB,eAA9B,CAEA,IAAQjzB,EAAWqH,EAAXrH,OAER,GAAIq0B,GAA+C,OAA1BzsB,EAAKurB,iBAM1B,OALAvrB,EAAKurB,iBAAmBqB,GAAoBx0B,QAEd,OAA1B4H,EAAKurB,kBACLmB,GAAmBA,EAAgB1sB,EAAKurB,mBAKhDvrB,EAAK6sB,WAAW,IAAKptB,EAAKxB,MAAO7F,GACjC4H,EAAK6sB,WAAW,IAAKptB,EAAKxB,MAAO7F,GAOjC4H,EAAKxT,cAAcY,SAKnBu/B,GAAUA,EAAOhvB,EAAO8B,EAzBd,CA0Bd,EACMwnB,EAAe,SAACtpB,EAAO8B,GAAI,OAAKO,EAAKsU,KAAK3W,EAAO8B,EAAK,EACtDynB,EAAkB,WAAH,OAASkC,IAAS,SAACvB,GACpC,IAAItwB,EACJ,MAAwC,WAAjCyI,EAAK8sB,kBAAkBjF,KAC0B,QAAlDtwB,EAAKyI,EAAKqsB,mBAAmBxE,GAAMv9B,iBAA8B,IAAPiN,OAAgB,EAASA,EAAGsgB,OAChG,GAAE,EACFkV,EAA6B/vC,KAAK0iB,WAA1BsmB,EAAgB+G,EAAhB/G,iBACRhpC,KAAKgwC,WAAa,IAAIpH,GAAW+F,EAAa,CAC1CtE,eAAAA,EACAZ,QAAAA,EACAC,OAAAA,EACAO,aAAAA,EACAC,gBAAAA,GACD,CACCn/B,mBAAoB/K,KAAKwP,cAAcygC,wBACvCjH,iBAAAA,EACAF,cAAekF,GAAiBhuC,KAAKwP,gBAvG/B,CAyGd,GAAC,CAAA5P,IAAA,OAAAC,MACD,SAAK8gB,EAAO8B,GACR,IAAM6rB,EAAatuC,KAAKsuC,WAExB,GADAtuC,KAAK2J,SACA2kC,EAAL,CAEA,IAAQ/lB,EAAa9F,EAAb8F,SACRvoB,KAAKkiC,eAAe3Z,GACpB,IAAQ2nB,EAAclwC,KAAK0iB,WAAnBwtB,UACJA,GACA/qC,GAAAA,GAAAA,QAAa,kBAAM+qC,EAAUvvB,EAAO8B,EAAK,GALnC,CAOd,GAAC,CAAA7iB,IAAA,SAAAC,MACD,WACIG,KAAKsuC,YAAa,EAClB,IAAA6B,EAAuCnwC,KAAKwP,cAApC+N,EAAU4yB,EAAV5yB,WAAYlN,EAAc8/B,EAAd9/B,eAChBkN,IACAA,EAAW6xB,oBAAqB,GAEpCpvC,KAAKgwC,YAAchwC,KAAKgwC,WAAWlG,MACnC9pC,KAAKgwC,gBAAarsC,GACU3D,KAAK0iB,WAAzBusB,iBACgBjvC,KAAKquC,iBACzBruC,KAAKquC,iBACLruC,KAAKquC,eAAiB,MAE1Bh+B,GAAkBA,EAAeuS,UAAU,aAAa,EAC5D,GAAC,CAAAhjB,IAAA,aAAAC,MACD,SAAWgrC,EAAMuF,EAAQh1B,GACrB,IAAQ5N,EAASxN,KAAK0iB,WAAdlV,KAER,GAAK4N,GAAWi1B,GAAWxF,EAAMr9B,EAAMxN,KAAKuuC,kBAA5C,CAEA,IAAM+B,EAAYtwC,KAAKqvC,mBAAmBxE,GACtC3iB,EAAOloB,KAAKirC,YAAYJ,GAAQzvB,EAAOyvB,GAEvC7qC,KAAKwuC,aAAexuC,KAAKwuC,YAAY3D,KACrC3iB,EPtLZ,SAA0BjH,EAAKhgB,EAAgBytC,GAAS,IAArBpkC,EAAGrJ,EAAHqJ,IAAKD,EAAGpJ,EAAHoJ,IASpC,YARY1G,IAAR2G,GAAqB2W,EAAQ3W,EAE7B2W,EAAQytB,EAAU9vB,GAAItU,EAAK2W,EAAOytB,EAAQpkC,KAAOF,KAAKC,IAAI4W,EAAO3W,QAEpD3G,IAAR0G,GAAqB4W,EAAQ5W,IAElC4W,EAAQytB,EAAU9vB,GAAIvU,EAAK4W,EAAOytB,EAAQrkC,KAAOD,KAAKE,IAAI2W,EAAO5W,IAE9D4W,CACX,CO4KmBsvB,CAAiBroB,EAAMloB,KAAKwuC,YAAY3D,GAAO7qC,KAAK0uC,QAAQ7D,KAEvEyF,EAAUxtC,IAAIolB,EAPJ,CAQd,GAAC,CAAAtoB,IAAA,qBAAAC,MACD,WAAqB,IACb0a,EADa4I,EAAA,KAEjBqtB,EAAyCxwC,KAAK0iB,WAAtC+tB,EAAeD,EAAfC,gBAAiB1E,EAAWyE,EAAXzE,YACnBj+B,EAAS9N,KAAKwP,cAAc+N,aAC7Bvd,KAAKwP,cAAc+N,WAAWzP,OAC7B9N,KAAKwP,cAAc+N,WAAWmzB,SAAQ,GACG,QAAxCn2B,EAAKva,KAAKwP,cAAc+N,kBAA+B,IAAPhD,OAAgB,EAASA,EAAGzM,OAC7E6iC,EAAkB3wC,KAAKwuC,YACzBiC,GAAmB9kC,EAAY8kC,GAC1BzwC,KAAKwuC,cACNxuC,KAAKwuC,YAAcxuC,KAAK4wC,yBAKxB5wC,KAAKwuC,eADLiC,IAAmB3iC,IP5KnC,SAAiCyhC,EAASv+B,GAAgC,IAA5BtQ,EAAGsQ,EAAHtQ,IAAKE,EAAIoQ,EAAJpQ,KAAM0U,EAAMtE,EAANsE,OAAQD,EAAKrE,EAALqE,MAC7D,MAAO,CACHlD,EAAGs5B,GAA4B8D,EAAUp9B,EAAGvR,EAAMyU,GAClDjD,EAAGq5B,GAA4B8D,EAAUn9B,EAAG1R,EAAK4U,GAEzD,COwKmCu7B,CAAwB/iC,EAAOyhC,UAAWkB,GAMrEzwC,KAAK0uC,QPrHb,WAA0D,IAA9B3C,EAAWrsC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAGmsC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH15B,EAAG25B,GAAmBC,EAAa,OAAQ,SAC3C35B,EAAG05B,GAAmBC,EAAa,MAAO,UAElD,CO0GuB+E,CAAmB/E,GAK9B4E,IAAoB3wC,KAAKwuC,aACzB1gC,GACA9N,KAAKwuC,cACJxuC,KAAKyuC,uBACNrC,IAAS,SAACvB,GACF1nB,EAAKksB,mBAAmBxE,KACxB1nB,EAAKqrB,YAAY3D,GP9IrC,SAA+B/8B,EAAQ0gC,GACnC,IAAMuC,EAAsB,CAAC,EAO7B,YANwBptC,IAApB6qC,EAAYlkC,MACZymC,EAAoBzmC,IAAMkkC,EAAYlkC,IAAMwD,EAAOxD,UAE/B3G,IAApB6qC,EAAYnkC,MACZ0mC,EAAoB1mC,IAAMmkC,EAAYnkC,IAAMyD,EAAOxD,KAEhDymC,CACX,COqI6CC,CAAsBljC,EAAOyhC,UAAU1E,GAAO1nB,EAAKqrB,YAAY3D,IAEhG,GAER,GAAC,CAAAjrC,IAAA,wBAAAC,MACD,WACI,IAAAoxC,EAAmEjxC,KAAK0iB,WAA/C8rB,EAAWyC,EAA5BR,gBAA8BS,EAAwBD,EAAxBC,yBACtC,IAAK1C,IAAgB7iC,EAAY6iC,GAC7B,OAAO,EACX,IAAM2C,EAAqB3C,EAAYtvC,SACvCqF,EAAAA,GAAAA,GAAiC,OAAvB4sC,EAA6B,0GACvC,IAAQ5zB,EAAevd,KAAKwP,cAApB+N,WAER,IAAKA,IAAeA,EAAWzP,OAC3B,OAAO,EACX,IAAMsjC,EF7Od,SAAwBrxC,EAASsxC,EAAoBtmC,GACjD,IAAMumC,EAAc1D,GAAmB7tC,EAASgL,GACxCwmC,EAAWF,EAAXE,OAKR,OAJIA,IACApE,GAAcmE,EAAYn/B,EAAGo/B,EAAOn2B,OAAOjJ,GAC3Cg7B,GAAcmE,EAAYl/B,EAAGm/B,EAAOn2B,OAAOhJ,IAExCk/B,CACX,CEqO+BE,CAAeL,EAAoB5zB,EAAWyI,KAAMhmB,KAAKwP,cAAcygC,yBAC1FwB,EPvLZ,SAAiClC,EAAW6B,GACxC,MAAO,CACHj/B,EAAGu5B,GAA4B6D,EAAUp9B,EAAGi/B,EAAej/B,GAC3DC,EAAGs5B,GAA4B6D,EAAUn9B,EAAGg/B,EAAeh/B,GAEnE,COkLkCs/B,CAAwBn0B,EAAWzP,OAAOyhC,UAAW6B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EL/OpC,SAAgClgC,GAAW,IAARmB,EAACnB,EAADmB,EAAGC,EAACpB,EAADoB,EAClC,MAAO,CAAE1R,IAAK0R,EAAE9H,IAAK+K,MAAOlD,EAAE9H,IAAKiL,OAAQlD,EAAE/H,IAAKzJ,KAAMuR,EAAE7H,IAC9D,CK6O6DsnC,CAAwBH,IACzEzxC,KAAKyuC,wBAA0BkD,EAC3BA,IACAF,EAAsBpF,GAAwBsF,GAEtD,CACA,OAAOF,CACX,GAAC,CAAA7xC,IAAA,iBAAAC,MACD,SAAe0oB,GAAU,IAAA4Z,EAAA,KACrB0P,EAAoG7xC,KAAK0iB,WAAjGlV,EAAIqkC,EAAJrkC,KAAMskC,EAAYD,EAAZC,aAAc/F,EAAW8F,EAAX9F,YAAagG,EAAcF,EAAdE,eAAgB/I,EAAgB6I,EAAhB7I,iBAAkBgJ,EAAmBH,EAAnBG,oBACrExD,EAAcxuC,KAAKwuC,aAAe,CAAC,EACnCyD,EAAqB7F,IAAS,SAACvB,GACjC,GAAKwF,GAAWxF,EAAMr9B,EAAM20B,EAAKoM,kBAAjC,CAGA,IAAI1uB,EAAc2uB,GAAeA,EAAY3D,IAAU,CAAC,EACpD7B,IACAnpB,EAAa,CAAEvV,IAAK,EAAGD,IAAK,IAOhC,IAAMisB,EAAkByV,EAAc,IAAM,IACtC3V,EAAgB2V,EAAc,GAAK,IACnCjW,GAAOjnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTgE,KAAM,UACN0V,SAAUupB,EAAevpB,EAASsiB,GAAQ,EAC1CvU,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACdvB,UAAW,EACXC,UAAW,IACRmd,GACAlyB,GAKP,OAAOsiB,EAAK+P,wBAAwBrH,EAAM/U,EA1B1C,CA2BJ,IAEA,OAAOwD,QAAQ5S,IAAIurB,GAAoBlX,KAAKiX,EAChD,GAAC,CAAApyC,IAAA,0BAAAC,MACD,SAAwBgrC,EAAMhrB,GAC1B,IAAMywB,EAAYtwC,KAAKqvC,mBAAmBxE,GAC1C,OAAOyF,EAAUlkC,MAAMqzB,GAAmBoL,EAAMyF,EAAW,EAAGzwB,GAClE,GAAC,CAAAjgB,IAAA,gBAAAC,MACD,WAAgB,IAAAsyC,EAAA,KACZ/F,IAAS,SAACvB,GAAI,OAAKsH,EAAK9C,mBAAmBxE,GAAMvT,MAAM,GAC3D,GAAC,CAAA13B,IAAA,iBAAAC,MACD,WAAiB,IAAAuyC,EAAA,KACbhG,IAAS,SAACvB,GAAW,IAAItwB,EAAI,OAA0D,QAAlDA,EAAK63B,EAAK/C,mBAAmBxE,GAAMv9B,iBAA8B,IAAPiN,OAAgB,EAASA,EAAG6gB,OAAS,GACxI,GAAC,CAAAx7B,IAAA,oBAAAC,MACD,SAAkBgrC,GACd,IAAItwB,EACJ,OAA0D,QAAlDA,EAAKva,KAAKqvC,mBAAmBxE,GAAMv9B,iBAA8B,IAAPiN,OAAgB,EAASA,EAAG7R,KAClG,GACA,CAAA9I,IAAA,qBAAAC,MAMA,SAAmBgrC,GACf,IAAMwH,EAAU,QAAUxH,EAAK1sB,cACzBle,EAAQD,KAAKwP,cAAckT,WAC3B4vB,EAAsBryC,EAAMoyC,GAClC,OAAOC,GAEDtyC,KAAKwP,cAAcwzB,SAAS6H,GAAO5qC,EAAMkC,QAAUlC,EAAMkC,QAAQ0oC,QAAQlnC,IAAc,EACjG,GAAC,CAAA/D,IAAA,eAAAC,MACD,SAAaohB,GAAO,IAAAsxB,EAAA,KAChBnG,IAAS,SAACvB,GAGN,GAAKwF,GAAWxF,EAFC0H,EAAK7vB,WAAdlV,KAEoB+kC,EAAKhE,kBAAjC,CAEA,IAAQhxB,EAAeg1B,EAAK/iC,cAApB+N,WACF+yB,EAAYiC,EAAKlD,mBAAmBxE,GAC1C,GAAIttB,GAAcA,EAAWzP,OAAQ,CACjC,IAAA0kC,EAAqBj1B,EAAWzP,OAAOyhC,UAAU1E,GAAzCvgC,EAAGkoC,EAAHloC,IAAKD,EAAGmoC,EAAHnoC,IACbimC,EAAUxtC,IAAIme,EAAM4pB,GAAQjsB,GAAItU,EAAKD,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,CAAAzK,IAAA,iCAAAC,MAKA,WAAiC,IAAA4yC,EAAA,KAC7B,GAAKzyC,KAAKwP,cAActQ,QAAxB,CAEA,IAAAwzC,EAAkC1yC,KAAK0iB,WAA/BlV,EAAIklC,EAAJllC,KAAMijC,EAAeiC,EAAfjC,gBACNlzB,EAAevd,KAAKwP,cAApB+N,WACR,GAAK5R,EAAY8kC,IAAqBlzB,GAAevd,KAAKwuC,YAA1D,CAMAxuC,KAAK+uC,gBAKL,IAAM4D,EAAc,CAAExgC,EAAG,EAAGC,EAAG,GAC/Bg6B,IAAS,SAACvB,GACN,IAAMyF,EAAYmC,EAAKpD,mBAAmBxE,GAC1C,GAAIyF,EAAW,CACX,IAAMrZ,EAASqZ,EAAUzpC,MACzB8rC,EAAY9H,GPpS5B,SAAoB5xB,EAAQD,GACxB,IAAImC,EAAS,GACPy3B,EAAehI,GAAW3xB,GAC1B45B,EAAejI,GAAW5xB,GAOhC,OANI65B,EAAeD,EACfz3B,EAASoS,GAASvU,EAAO1O,IAAK0O,EAAO3O,IAAMuoC,EAAc35B,EAAO3O,KAE3DsoC,EAAeC,IACpB13B,EAASoS,GAAStU,EAAO3O,IAAK2O,EAAO5O,IAAMwoC,EAAc75B,EAAO1O,MAE7DyI,EAAM,EAAG,EAAGoI,EACvB,COyRoCD,CAAW,CAAE5Q,IAAK2sB,EAAQ5sB,IAAK4sB,GAAUwb,EAAKjE,YAAY3D,GAClF,CACJ,IAIA,IAAQlzB,EAAsB3X,KAAKwP,cAAckT,WAAzC/K,kBACR3X,KAAKwP,cAActQ,QAAQuC,MAAMqR,UAAY6E,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN4F,EAAWyI,MAAQzI,EAAWyI,KAAK8sB,eACnCv1B,EAAWw1B,eACX/yC,KAAKmvC,qBAKL/C,IAAS,SAACvB,GACN,GAAKwF,GAAWxF,EAAMr9B,EAAM,MAA5B,CAKA,IAAM8iC,EAAYmC,EAAKpD,mBAAmBxE,GAC1CmI,EAAqBP,EAAKjE,YAAY3D,GAA9BvgC,EAAG0oC,EAAH1oC,IAAKD,EAAG2oC,EAAH3oC,IACbimC,EAAUxtC,IAAI8b,GAAItU,EAAKD,EAAKsoC,EAAY9H,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAAjrC,IAAA,eAAAC,MACD,WAAe,IAAAozC,EAAA,KACX,GAAKjzC,KAAKwP,cAActQ,QAAxB,CAEAivC,GAAoBrrC,IAAI9C,KAAKwP,cAAexP,MAC5C,IAIMkzC,EAAsBhyB,GAJZlhB,KAAKwP,cAActQ,QAIkB,eAAe,SAACyhB,GACjE,IAAAwyB,EAAsCF,EAAKvwB,WAAnClV,EAAI2lC,EAAJ3lC,KAAI4lC,EAAAD,EAAE35B,aACdhM,SAD0B,IAAA4lC,GAAOA,IACTH,EAAK7mC,MAAMuU,EACvC,IACM0yB,EAAyB,WAEvB1nC,EADwBsnC,EAAKvwB,WAAzB+tB,mBAEJwC,EAAKzE,YAAcyE,EAAKrC,wBAEhC,EACQrzB,EAAevd,KAAKwP,cAApB+N,WACF+1B,EAA4B/1B,EAAWiD,iBAAiB,UAAW6yB,GACrE91B,IAAeA,EAAWzP,SAC1ByP,EAAWyI,MAAQzI,EAAWyI,KAAK8sB,eACnCv1B,EAAWw1B,gBAEfM,IAKA,IAAME,EAAqBnzB,GAAYlQ,OAAQ,UAAU,kBAAM+iC,EAAKO,gCAAgC,IAK9FC,EAA2Bl2B,EAAWiD,iBAAiB,aAAc,SAAAxP,GAAiC,IAA9BrI,EAAKqI,EAALrI,MAAO+qC,EAAgB1iC,EAAhB0iC,iBAC7ET,EAAK3E,YAAcoF,IACnBtH,IAAS,SAACvB,GACN,IAAMpI,EAAcwQ,EAAK5D,mBAAmBxE,GACvCpI,IAELwQ,EAAKhI,YAAYJ,IAASliC,EAAMkiC,GAAMK,UACtCzI,EAAY3/B,IAAI2/B,EAAY57B,MAAQ8B,EAAMkiC,GAAMK,WACpD,IACA+H,EAAKzjC,cAAcY,SAE3B,IACA,OAAO,WACHmjC,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAA7zC,IAAA,WAAAC,MACD,WACI,IAAMI,EAAQD,KAAKwP,cAAckT,WACjCixB,EAA0J1zC,EAAlJuN,KAAAA,OAAI,IAAAmmC,GAAQA,EAAAC,EAAsI3zC,EAApIwvC,kBAAAA,OAAiB,IAAAmE,GAAQA,EAAAC,EAA2G5zC,EAAzGgvC,gBAAAA,OAAe,IAAA4E,GAAQA,EAAAC,EAAkF7zC,EAAhFwwC,gBAAAA,OAAe,IAAAqD,GAAQA,EAAAC,EAAyD9zC,EAAvD8rC,YAAAA,OAAW,IAAAgI,EAAGlI,GAAckI,EAAAC,EAA2B/zC,EAAzB6xC,aAAAA,OAAY,IAAAkC,GAAOA,EACpJ,OAAAnlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO5O,GAAK,IACRuN,KAAAA,EACAiiC,kBAAAA,EACAR,gBAAAA,EACAwB,gBAAAA,EACA1E,YAAAA,EACA+F,aAAAA,GAER,KAAC1D,CAAA,CAhb0B,GAkb/B,SAASiC,GAAWhU,EAAW7uB,EAAM+gC,GACjC,QAAkB,IAAT/gC,GAAiBA,IAAS6uB,KACT,OAArBkS,GAA6BA,IAAqBlS,EAC3D,CAQA,SAASuT,GAAoBx0B,GAA4B,IAApB64B,EAAav0C,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,GAC7C28B,EAAY,KAOhB,OANIjyB,KAAK0gB,IAAI1P,EAAOhJ,GAAK6hC,EACrB5X,EAAY,IAEPjyB,KAAK0gB,IAAI1P,EAAOjJ,GAAK8hC,IAC1B5X,EAAY,KAETA,CACX,CE5d4E,IAEtE6X,GAAW,SAAApxB,IAAAzjB,EAAAA,GAAAA,GAAA60C,EAAApxB,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAA20C,GACb,SAAAA,EAAY7xB,GAAM,IAAAW,EAIsC,OAJtCxjB,EAAAA,GAAAA,GAAA,KAAA00C,IACdlxB,EAAA1jB,EAAAyM,KAAA,KAAMsW,IACD8xB,oBAAsBvpC,GAAAA,EAC3BoY,EAAKsnB,gBAAkB1/B,GAAAA,EACvBoY,EAAK8X,SAAW,IAAIsT,GAA0B/rB,GAAMW,CACxD,CAaC,OAbArjB,EAAAA,GAAAA,GAAAu0C,EAAA,EAAAt0C,IAAA,QAAAC,MACD,WAGI,IAAQu0C,EAAiBp0C,KAAKqiB,KAAKK,WAA3B0xB,aACJA,IACAp0C,KAAKm0C,oBAAsBC,EAAalM,UAAUloC,KAAK86B,WAE3D96B,KAAKsqC,gBAAkBtqC,KAAK86B,SAASuZ,gBAAkBzpC,GAAAA,CAC3D,GAAC,CAAAhL,IAAA,UAAAC,MACD,WACIG,KAAKm0C,sBACLn0C,KAAKsqC,iBACT,KAAC4J,CAAA,CAnBY,CAAS9xB,ICGpBkyB,GAAe,SAACh0B,GAAO,OAAK,SAACK,EAAO8B,GAClCnC,GACAnb,GAAAA,GAAAA,QAAa,kBAAMmb,EAAQK,EAAO8B,EAAK,GAE/C,CAAC,EACK8xB,GAAU,SAAAzxB,IAAAzjB,EAAAA,GAAAA,GAAAk1C,EAAAzxB,GAAA,IAAAxjB,GAAAC,EAAAA,GAAAA,GAAAg1C,GACZ,SAAAA,IAAc,IAAAvxB,EAE4B,OAF5BxjB,EAAAA,GAAAA,GAAA,KAAA+0C,IACVvxB,EAAA1jB,EAAAG,MAAA,KAASC,YACJ80C,0BAA4B5pC,GAAAA,EAAKoY,CAC1C,CA8BC,OA9BArjB,EAAAA,GAAAA,GAAA40C,EAAA,EAAA30C,IAAA,gBAAAC,MACD,SAAc40C,GACVz0C,KAAK00C,QAAU,IAAI9L,GAAW6L,EAAkBz0C,KAAK20C,oBAAqB,CACtE5pC,mBAAoB/K,KAAKqiB,KAAK4tB,wBAC9BnH,cAAekF,GAAiBhuC,KAAKqiB,OAE7C,GAAC,CAAAziB,IAAA,oBAAAC,MACD,WAAoB,IAAAsjB,EAAA,KAChBoB,EAA2DvkB,KAAKqiB,KAAKK,WAA7DkyB,EAAiBrwB,EAAjBqwB,kBAAmBC,EAAUtwB,EAAVswB,WAAYC,EAAKvwB,EAALuwB,MAAOC,EAAQxwB,EAARwwB,SAC9C,MAAO,CACH1K,eAAgBiK,GAAaM,GAC7BnL,QAAS6K,GAAaO,GACtBnL,OAAQoL,EACR9K,MAAO,SAACrpB,EAAO8B,UACJU,EAAKuxB,QACRK,GACA5vC,GAAAA,GAAAA,QAAa,kBAAM4vC,EAASp0B,EAAO8B,EAAK,GAEhD,EAER,GAAC,CAAA7iB,IAAA,QAAAC,MACD,WAAQ,IAAAsiC,EAAA,KACJniC,KAAKw0C,0BAA4BtzB,GAAgBlhB,KAAKqiB,KAAKnjB,QAAS,eAAe,SAACyhB,GAAK,OAAKwhB,EAAK6S,cAAcr0B,EAAM,GAC3H,GAAC,CAAA/gB,IAAA,SAAAC,MACD,WACIG,KAAK00C,SAAW10C,KAAK00C,QAAQO,eAAej1C,KAAK20C,oBACrD,GAAC,CAAA/0C,IAAA,UAAAC,MACD,WACIG,KAAKw0C,4BACLx0C,KAAK00C,SAAW10C,KAAK00C,QAAQ5K,KACjC,KAACyK,CAAA,CAlCW,CAASnyB,ICPzB,IAAM8yB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQzK,GAC7B,OAAIA,EAAKxgC,MAAQwgC,EAAKvgC,IACX,EACHgrC,GAAUzK,EAAKxgC,IAAMwgC,EAAKvgC,KAAQ,GAC9C,CAQA,IAAMirC,GAAsB,CACxBC,QAAS,SAACve,EAAQ5U,GACd,IAAKA,EAAKrJ,OACN,OAAOie,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI/iB,GAAGxC,KAAKulB,GAIR,OAAOA,EAHPA,EAAS/jB,WAAW+jB,EAK5B,CAKA,IAAM9kB,EAAIkjC,GAAgBpe,EAAQ5U,EAAKrJ,OAAO7G,GACxCC,EAAIijC,GAAgBpe,EAAQ5U,EAAKrJ,OAAO5G,GAC9C,MAAO,GAAPpQ,OAAUmQ,EAAC,MAAAnQ,OAAKoQ,EAAC,IACrB,GClCEqjC,GAAmB,CACrBD,QAAS,SAACve,EAAMh2B,GAAqC,IAAjCy0C,EAASz0C,EAATy0C,UAAWC,EAAe10C,EAAf00C,gBACrBC,EAAW3e,EACX4e,EAASnmB,GAAQzc,MAAMgkB,GAE7B,GAAI4e,EAAOrvC,OAAS,EAChB,OAAOovC,EACX,IAAMrlB,EAAWb,GAAQL,kBAAkB4H,GACrC7b,EAA8B,kBAAdy6B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBxjC,EAAEiB,MAAQsiC,EAAUvjC,EAC7C4jC,EAASJ,EAAgBvjC,EAAEgB,MAAQsiC,EAAUtjC,EACnDyjC,EAAO,EAAIz6B,IAAW06B,EACtBD,EAAO,EAAIz6B,IAAW26B,EAOtB,IAAMC,EAAep3B,GAAIk3B,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAIz6B,KAClBy6B,EAAO,EAAIz6B,IAAW46B,GAEQ,kBAAvBH,EAAO,EAAIz6B,KAClBy6B,EAAO,EAAIz6B,IAAW46B,GACnBzlB,EAASslB,EACpB,GCrBEI,GAAwB,SAAAC,IAAA72C,EAAAA,GAAAA,GAAA42C,EAAAC,GAAA,IAAA52C,GAAAC,EAAAA,GAAAA,GAAA02C,GAAA,SAAAA,IAAA,OAAAz2C,EAAAA,GAAAA,GAAA,KAAAy2C,GAAA32C,EAAAG,MAAA,KAAAC,UAAA,CAgGzB,OAhGyBC,EAAAA,GAAAA,GAAAs2C,EAAA,EAAAr2C,IAAA,oBAAAC,MAM1B,WAAoB,I9IfGs2C,E8IeHnzB,EAAA,KAChBozB,EAAoEp2C,KAAKC,MAAjEuP,EAAa4mC,EAAb5mC,cAAe6mC,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmBlnC,EAAQgnC,EAARhnC,SAC/CmO,EAAe/N,EAAf+N,W9IjBW44B,E8IkBDI,G9IjBtB3qC,OAAOuN,OAAOxH,EAAiBwkC,G8IkBvB54B,IACI84B,EAAYG,OACZH,EAAYG,MAAMtuC,IAAIqV,GACtB+4B,GAAqBA,EAAkB7yC,UAAY2L,GACnDknC,EAAkB7yC,SAAS8Z,GAE/BA,EAAWyI,KAAKywB,YAChBl5B,EAAWiD,iBAAiB,qBAAqB,WAC7CwC,EAAK0zB,cACT,IACAn5B,EAAWo5B,YAAU9nC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChB0O,EAAW7F,SAAO,IACrBtV,eAAgB,kBAAM4gB,EAAK0zB,cAAc,MAGjDxB,GAAsBE,gBAAiB,CAC3C,GAAC,CAAAx1C,IAAA,0BAAAC,MACD,SAAwBC,GAAW,IAAAqjB,EAAA,KAC/ByzB,EAA6D52C,KAAKC,MAA1D42C,EAAgBD,EAAhBC,iBAAkBrnC,EAAaonC,EAAbpnC,cAAehC,EAAIopC,EAAJppC,KAAMrN,EAASy2C,EAATz2C,UACzCod,EAAa/N,EAAc+N,WACjC,OAAKA,GASLA,EAAWpd,UAAYA,EACnBqN,GACA1N,EAAU+2C,mBAAqBA,QACVlzC,IAArBkzC,EACAt5B,EAAWu5B,aAGX92C,KAAK02C,eAEL52C,EAAUK,YAAcA,IACpBA,EACAod,EAAWw5B,UAELx5B,EAAWy5B,YAMjB7xC,GAAAA,GAAAA,YAAiB,WACb,IAAM8xC,EAAQ15B,EAAW25B,WACpBD,GAAUA,EAAME,QAAQ3wC,QACzB2c,EAAKuzB,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAA92C,IAAA,qBAAAC,MACD,WAAqB,IAAAsiC,EAAA,KACT5kB,EAAevd,KAAKC,MAAMuP,cAA1B+N,WACJA,IACAA,EAAWyI,KAAKywB,YAChBW,gBAAe,YACN75B,EAAW85B,kBAAoB95B,EAAW+5B,UAC3CnV,EAAKuU,cAEb,IAER,GAAC,CAAA92C,IAAA,uBAAAC,MACD,WACI,IAAA03C,EAA2Ev3C,KAAKC,MAAxEuP,EAAa+nC,EAAb/nC,cAAe6mC,EAAWkB,EAAXlB,YAAgCmB,EAAcD,EAAjCjB,kBAC5B/4B,EAAe/N,EAAf+N,WACJA,IACAA,EAAWk6B,4BACPpB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM5sC,OAAO2T,GACzBi6B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWn6B,GAEtC,GAAC,CAAA3d,IAAA,eAAAC,MACD,WACI,IAAQ62C,EAAiB12C,KAAKC,MAAtBy2C,aACRA,GAAgBA,GACpB,GAAC,CAAA92C,IAAA,SAAAC,MACD,WACI,OAAO,IACX,KAACo2C,CAAA,CAhGyB,CAAS0B,EAAAA,WAkGvC,SAASzoC,GAAcjP,GACnB,IAAA23C,ECnFJ,WACI,IAAMj1C,GAAU+B,EAAAA,EAAAA,YAAWZ,EAAAA,GAC3B,GAAgB,OAAZnB,EACA,MAAO,EAAC,EAAM,MAClB,IAAQxC,EAAwCwC,EAAxCxC,UAAWiC,EAA6BO,EAA7BP,eAAgBqB,EAAad,EAAbc,SAG7BvC,GAAKC,EAAAA,EAAAA,SAGX,OAFA+E,EAAAA,EAAAA,YAAU,kBAAMzC,EAASvC,EAAG,GAAE,KAEtBf,GAAaiC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAelB,EAAG,GACD,EAAC,EACnE,CDwEsC22C,GAAaC,GAAA/yC,EAAAA,GAAAA,GAAA6yC,EAAA,GAAxCz3C,EAAS23C,EAAA,GAAEpB,EAAYoB,EAAA,GACxBzB,GAAc3xC,EAAAA,EAAAA,YAAWC,EAAAA,GAC/B,OAAQgzC,EAAAA,cAA6B1B,IAAwBpnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO5O,GAAK,IAAEo2C,YAAaA,EAAaC,mBAAmB5xC,EAAAA,EAAAA,YAAWwJ,GAA2B/N,UAAWA,EAAWu2C,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3B1hC,cAAYhG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL0mC,IAAmB,IACtBwC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRhjC,oBAAqBwgC,GACrBvgC,qBAAsBugC,GACtBrgC,uBAAwBqgC,GACxBtgC,wBAAyBsgC,GACzByC,UAAWvC,IEzHTwC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQzxC,OACrB2xC,GAAW,SAACt4C,GAAK,MAAsB,kBAAVA,EAAqBqT,WAAWrT,GAASA,CAAK,EAC3Eu4C,GAAO,SAACv4C,GAAK,MAAsB,kBAAVA,GAAsBqU,GAAGxC,KAAK7R,EAAM,EACnE,SAASw4C,GAAUr/B,EAAQs/B,EAAQC,EAAMhrB,EAAUirB,EAAwBC,GACnED,GACAx/B,EAAOhC,QAAU4H,GAAI,OAEJjb,IAAjB40C,EAAKvhC,QAAwBuhC,EAAKvhC,QAAU,EAAG0hC,GAAgBnrB,IAC/DvU,EAAO2/B,YAAc/5B,QAAuBjb,IAAnB20C,EAAOthC,QAAwBshC,EAAOthC,QAAU,EAAG,EAAG4hC,GAAiBrrB,KAE3FkrB,IACLz/B,EAAOhC,QAAU4H,QAAuBjb,IAAnB20C,EAAOthC,QAAwBshC,EAAOthC,QAAU,OAAoBrT,IAAjB40C,EAAKvhC,QAAwBuhC,EAAKvhC,QAAU,EAAGuW,IAK3H,IAAK,IAAI9mB,EAAI,EAAGA,EAAIyxC,GAAYzxC,IAAK,CACjC,IAAMoyC,EAAc,SAAH72C,OAAYi2C,GAAQxxC,GAAE,UACnCqyC,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBl1C,IAAjBm1C,QAA6Cn1C,IAAfq1C,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BhgC,EAAO6/B,GAAezuC,KAAKC,IAAIuU,GAAIu5B,GAASW,GAAeX,GAASa,GAAazrB,GAAW,IACxFtZ,GAAQvC,KAAKsnC,IAAe/kC,GAAQvC,KAAKonC,MACzC9/B,EAAO6/B,IAAgB,MAI3B7/B,EAAO6/B,GAAeG,CAE9B,EAIIV,EAAOriC,QAAUsiC,EAAKtiC,UACtB+C,EAAO/C,OAAS2I,GAAI05B,EAAOriC,QAAU,EAAGsiC,EAAKtiC,QAAU,EAAGsX,GAElE,CACA,SAASwrB,GAAU71C,EAAQ+1C,GACvB,YAA8Bt1C,IAAvBT,EAAO+1C,GACR/1C,EAAO+1C,GACP/1C,EAAO2R,YACjB,CAwBA,IAAM6jC,GAAkBQ,GAAS,EAAG,GAAKvvB,IACnCivB,GAAmBM,GAAS,GAAK,IAAMtuC,GAAAA,GAC7C,SAASsuC,GAAS5uC,EAAKD,EAAKye,GACxB,OAAO,SAAC9d,GAEJ,OAAIA,EAAIV,EACG,EACPU,EAAIX,EACG,EACJye,EAAOyE,GAASjjB,EAAKD,EAAKW,GACrC,CACJ,CCrFA,SAASmuC,GAAatO,EAAMuO,GACxBvO,EAAKvgC,IAAM8uC,EAAW9uC,IACtBugC,EAAKxgC,IAAM+uC,EAAW/uC,GAC1B,CAMA,SAASgvC,GAAYtM,EAAKuM,GACtBH,GAAapM,EAAI56B,EAAGmnC,EAAUnnC,GAC9BgnC,GAAapM,EAAI36B,EAAGknC,EAAUlnC,EAClC,CCVA,SAASmnC,GAAiBt4B,EAAOiqB,EAAW93B,EAAO63B,EAAa2B,GAM5D,OAJA3rB,EAAQyrB,GADRzrB,GAASiqB,EACiB,EAAI93B,EAAO63B,QACpBtnC,IAAbipC,IACA3rB,EAAQyrB,GAAWzrB,EAAO,EAAI2rB,EAAU3B,IAErChqB,CACX,CAsBA,SAASu4B,GAAqB3O,EAAMwC,EAAUpsC,EAA8Bka,EAAQs+B,GAAY,IAAAzoC,GAAAjM,EAAAA,GAAAA,GAAA9D,EAAA,GAA/CrB,EAAGoR,EAAA,GAAEs8B,EAAQt8B,EAAA,GAAEu8B,EAASv8B,EAAA,IAlBzE,SAAyB65B,GAA8F,IAAxFK,EAASxrC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAG0T,EAAK1T,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,EAAGyb,EAAMzb,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,GAAKktC,EAAQltC,UAAA8G,OAAA,EAAA9G,UAAA,QAAAiE,EAAEy1C,EAAU15C,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAGmrC,EAAM4O,EAAU/5C,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAGmrC,EAC7G,GAAI52B,GAAQvC,KAAKw5B,GAAY,CACzBA,EAAYh4B,WAAWg4B,GAEvBA,EADyBtsB,GAAI66B,EAAWnvC,IAAKmvC,EAAWpvC,IAAK6gC,EAAY,KAC1CuO,EAAWnvC,GAC9C,CACA,GAAyB,kBAAd4gC,EAAX,CAEA,IAAID,EAAcrsB,GAAIw6B,EAAW9uC,IAAK8uC,EAAW/uC,IAAK8Q,GAClD0vB,IAASuO,IACTnO,GAAeC,GACnBL,EAAKvgC,IAAMivC,GAAiB1O,EAAKvgC,IAAK4gC,EAAW93B,EAAO63B,EAAa2B,GACrE/B,EAAKxgC,IAAMkvC,GAAiB1O,EAAKxgC,IAAK6gC,EAAW93B,EAAO63B,EAAa2B,EAL3D,CAMd,CAMI8M,CAAgB7O,EAAMwC,EAAWztC,GAAMytC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWj6B,MAAO+H,EAAQs+B,EAClH,CAIA,IAAMhM,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiM,GAAoB5M,EAAKM,EAAYiM,EAAWM,GACrDJ,GAAqBzM,EAAI56B,EAAGk7B,EAAYI,GAAO6L,EAAYA,EAAUnnC,OAAIxO,EAAWi2C,EAAYA,EAAUznC,OAAIxO,GAC9G61C,GAAqBzM,EAAI36B,EAAGi7B,EAAYK,GAAO4L,EAAYA,EAAUlnC,OAAIzO,EAAWi2C,EAAYA,EAAUxnC,OAAIzO,EAClH,CCjDA,SAASk2C,GAAgBlxC,GACrB,OAA2B,IAApBA,EAAMuiC,WAAmC,IAAhBviC,EAAMyK,KAC1C,CACA,SAAS0mC,GAAYnxC,GACjB,OAAOkxC,GAAgBlxC,EAAMwJ,IAAM0nC,GAAgBlxC,EAAMyJ,EAC7D,CACA,SAAS2nC,GAAU14B,EAAGC,GAClB,OAAQD,EAAElP,EAAE7H,MAAQgX,EAAEnP,EAAE7H,KACpB+W,EAAElP,EAAE9H,MAAQiX,EAAEnP,EAAE9H,KAChBgX,EAAEjP,EAAE9H,MAAQgX,EAAElP,EAAE9H,KAChB+W,EAAEjP,EAAE/H,MAAQiX,EAAElP,EAAE/H,GACxB,CACA,SAAS2vC,GAAiB34B,EAAGC,GACzB,OAAQlX,KAAKmJ,MAAM8N,EAAElP,EAAE7H,OAASF,KAAKmJ,MAAM+N,EAAEnP,EAAE7H,MAC3CF,KAAKmJ,MAAM8N,EAAElP,EAAE9H,OAASD,KAAKmJ,MAAM+N,EAAEnP,EAAE9H,MACvCD,KAAKmJ,MAAM8N,EAAEjP,EAAE9H,OAASF,KAAKmJ,MAAM+N,EAAElP,EAAE9H,MACvCF,KAAKmJ,MAAM8N,EAAEjP,EAAE/H,OAASD,KAAKmJ,MAAM+N,EAAElP,EAAE/H,IAC/C,CACA,SAAS4vC,GAAYlN,GACjB,OAAOnC,GAAWmC,EAAI56B,GAAKy4B,GAAWmC,EAAI36B,EAC9C,CCtBkE,IAE5D8nC,GAAS,WACX,SAAAA,KAAc16C,EAAAA,GAAAA,GAAA,KAAA06C,GACVl6C,KAAKm3C,QAAU,EACnB,CAuGC,OAvGAx3C,EAAAA,GAAAA,GAAAu6C,EAAA,EAAAt6C,IAAA,MAAAC,MACD,SAAIwiB,GACA+d,GAAcpgC,KAAKm3C,QAAS90B,GAC5BA,EAAK83B,gBACT,GAAC,CAAAv6C,IAAA,SAAAC,MACD,SAAOwiB,GAKH,GAJAie,GAAWtgC,KAAKm3C,QAAS90B,GACrBA,IAASriB,KAAKo6C,WACdp6C,KAAKo6C,cAAWz2C,GAEhB0e,IAASriB,KAAKu4C,KAAM,CACpB,IAAM6B,EAAWp6C,KAAKm3C,QAAQn3C,KAAKm3C,QAAQ3wC,OAAS,GAChD4zC,GACAp6C,KAAK+2C,QAAQqD,EAErB,CACJ,GAAC,CAAAx6C,IAAA,WAAAC,MACD,SAASwiB,GACL,IAMI+3B,EANEC,EAAcr6C,KAAKm3C,QAAQmD,WAAU,SAACC,GAAM,OAAKl4B,IAASk4B,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAI5zC,EAAI4zC,EAAa5zC,GAAK,EAAGA,IAAK,CACnC,IAAM8zC,EAASv6C,KAAKm3C,QAAQ1wC,GAC5B,IAAyB,IAArB8zC,EAAOp6C,UAAqB,CAC5Bi6C,EAAWG,EACX,KACJ,CACJ,CACA,QAAIH,IACAp6C,KAAK+2C,QAAQqD,IACN,EAKf,GAAC,CAAAx6C,IAAA,UAAAC,MACD,SAAQwiB,EAAMm4B,GACV,IAAMJ,EAAWp6C,KAAKu4C,KAClBl2B,IAAS+3B,IAEbp6C,KAAKo6C,SAAWA,EAChBp6C,KAAKu4C,KAAOl2B,EACZA,EAAKo4B,OACDL,IACAA,EAASxpC,UAAYwpC,EAASD,iBAC9B93B,EAAK83B,iBACL93B,EAAKq4B,WAAaN,EACdI,IACAn4B,EAAKq4B,WAAWC,iBAAkB,GAElCP,EAASQ,WACTv4B,EAAKu4B,SAAWR,EAASQ,SACzBv4B,EAAKu4B,SAASnjC,aACV2iC,EAASS,iBAAmBT,EAAS3iC,cAEzC4K,EAAK2D,MAAQ3D,EAAK2D,KAAK80B,aACvBz4B,EAAK04B,eAAgB,IAGP,IADI14B,EAAK3K,QAAnBsjC,WAEJZ,EAASa,QAerB,GAAC,CAAAr7C,IAAA,wBAAAC,MACD,WACIG,KAAKm3C,QAAQvzC,SAAQ,SAACye,GAClB,IAAQ3K,EAA0B2K,EAA1B3K,QAASwjC,EAAiB74B,EAAjB64B,aACjBxjC,EAAQtV,gBAAkBsV,EAAQtV,iBAC9B84C,GACAA,EAAaxjC,QAAQtV,gBACjB84C,EAAaxjC,QAAQtV,gBAEjC,GACJ,GAAC,CAAAxC,IAAA,iBAAAC,MACD,WACIG,KAAKm3C,QAAQvzC,SAAQ,SAACye,GAClBA,EAAKzR,UAAYyR,EAAK83B,gBAAe,EACzC,GACJ,GACA,CAAAv6C,IAAA,qBAAAC,MAIA,WACQG,KAAKu4C,MAAQv4C,KAAKu4C,KAAKqC,WACvB56C,KAAKu4C,KAAKqC,cAAWj3C,EAE7B,KAACu2C,CAAA,CA1GU,GCFf,SAASiB,GAAyBxyC,EAAO+sC,EAAW0F,GAChD,IAAItoC,EAAY,GAOVuoC,EAAa1yC,EAAMwJ,EAAE+4B,UAAYwK,EAAUvjC,EAC3CmpC,EAAa3yC,EAAMyJ,EAAE84B,UAAYwK,EAAUtjC,EAWjD,IAVIipC,GAAcC,KACdxoC,EAAY,eAAH9Q,OAAkBq5C,EAAU,QAAAr5C,OAAOs5C,EAAU,YAMtC,IAAhB5F,EAAUvjC,GAA2B,IAAhBujC,EAAUtjC,IAC/BU,GAAa,SAAJ9Q,OAAa,EAAI0zC,EAAUvjC,EAAC,MAAAnQ,OAAK,EAAI0zC,EAAUtjC,EAAC,OAEzDgpC,EAAiB,CACjB,IAAQnlC,EAA6BmlC,EAA7BnlC,OAAQC,EAAqBklC,EAArBllC,QAASC,EAAYilC,EAAZjlC,QACrBF,IACAnD,GAAa,UAAJ9Q,OAAciU,EAAM,UAC7BC,IACApD,GAAa,WAAJ9Q,OAAekU,EAAO,UAC/BC,IACArD,GAAa,WAAJ9Q,OAAemU,EAAO,SACvC,CAKA,IAAMolC,EAAgB5yC,EAAMwJ,EAAEiB,MAAQsiC,EAAUvjC,EAC1CqpC,EAAgB7yC,EAAMyJ,EAAEgB,MAAQsiC,EAAUtjC,EAIhD,OAHsB,IAAlBmpC,GAAyC,IAAlBC,IACvB1oC,GAAa,SAAJ9Q,OAAau5C,EAAa,MAAAv5C,OAAKw5C,EAAa,MAElD1oC,GAAa,MACxB,CCvCA,IAAM2oC,GAAiB,SAACp6B,EAAGC,GAAC,OAAKD,EAAEq6B,MAAQp6B,EAAEo6B,KAAK,ECG5CC,GAAQ,WACV,SAAAA,KAAcn8C,EAAAA,GAAAA,GAAA,KAAAm8C,GACV37C,KAAKc,SAAW,GAChBd,KAAK47C,SAAU,CACnB,CAaC,OAbAj8C,EAAAA,GAAAA,GAAAg8C,EAAA,EAAA/7C,IAAA,MAAAC,MACD,SAAIoE,GACAm8B,GAAcpgC,KAAKc,SAAUmD,GAC7BjE,KAAK47C,SAAU,CACnB,GAAC,CAAAh8C,IAAA,SAAAC,MACD,SAAOoE,GACHq8B,GAAWtgC,KAAKc,SAAUmD,GAC1BjE,KAAK47C,SAAU,CACnB,GAAC,CAAAh8C,IAAA,UAAAC,MACD,SAAQ2E,GACJxE,KAAK47C,SAAW57C,KAAKc,SAAS0kC,KAAKiW,IACnCz7C,KAAK47C,SAAU,EACf57C,KAAKc,SAAS8C,QAAQY,EAC1B,KAACm3C,CAAA,CAjBS,GCEd,SAASvjB,GAAM5zB,EAAUq3C,GACrB,IAAMzvC,EAAQlC,YAAYC,MACpB2xC,EAAe,SAAfA,EAAY76C,GAAsB,IAC9Bo5B,EADuBp5B,EAAT2H,UACQwD,EACxBiuB,GAAWwhB,KACXhxC,EAAAA,GAAAA,IAAYixC,GACZt3C,EAAS61B,EAAUwhB,GAE3B,EAEA,OADA12C,GAAAA,GAAAA,KAAW22C,GAAc,GAClB,kBAAMjxC,EAAAA,GAAAA,IAAYixC,EAAa,CAC1C,CChBA,SAASC,GAAOC,GACR9rC,OAAO+rC,aACP/rC,OAAO+rC,YAAYF,OAAOC,EAElC,CCJA,SAASE,GAAan8C,GAClB,OAAOA,aAAmBo8C,YAAkC,QAApBp8C,EAAQmgB,OACpD,CCwBA,IAAMk8B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMnCp7C,GAAK,EAKHq7C,GAAsB,CACxB1pC,KAAM,kBACN2pC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB17C,GAA6F,IAA1F27C,EAAoB37C,EAApB27C,qBAAsBC,EAAa57C,EAAb47C,cAAeC,EAAa77C,EAAb67C,cAAeC,EAAiB97C,EAAjB87C,kBAAmBC,EAAc/7C,EAAd+7C,eACnG,kBACI,SAAAC,IAAuH,IAAAj6B,EAAA,KAA3GvL,EAAY/X,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG+P,EAAM/P,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAqB,OAAlBm9C,QAA4C,IAAlBA,OAA2B,EAASA,KAAer9C,EAAAA,GAAAA,GAAA,KAAAy9C,GAIjHj9C,KAAKkB,GAAKA,KAIVlB,KAAKk9C,YAAc,EAOnBl9C,KAAKc,SAAW,IAAIkH,IAKpBhI,KAAK0X,QAAU,CAAC,EAMhB1X,KAAKm9C,iBAAkB,EACvBn9C,KAAKovC,oBAAqB,EAO1BpvC,KAAK+6C,eAAgB,EAKrB/6C,KAAKo9C,mBAAoB,EAKzBp9C,KAAKq9C,yBAA0B,EAK/Br9C,KAAKs9C,kBAAmB,EAIxBt9C,KAAKu9C,uBAAwB,EAC7Bv9C,KAAKw9C,uBAAwB,EAK7Bx9C,KAAK86C,YAAa,EAIlB96C,KAAKy9C,OAAQ,EAKbz9C,KAAK09C,YAAa,EAIlB19C,KAAK29C,sBAAuB,EAS5B39C,KAAK01C,UAAY,CAAEvjC,EAAG,EAAGC,EAAG,GAI5BpS,KAAK49C,cAAgB,IAAI75C,IACzB/D,KAAK69C,iBAAkB,EAEvB79C,KAAK89C,iBAAkB,EACvB99C,KAAK+9C,2BAA4B,EACjC/9C,KAAKg+C,kBAAoB,WACjBh7B,EAAK83B,aACL93B,EAAK83B,YAAa,EAClB93B,EAAKi7B,oBAEb,EAMAj+C,KAAKk+C,iBAAmB,WACpBl7B,EAAK+6B,2BAA4B,EAKjCxB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ15B,EAAKm7B,MAAMv6C,QAAQw6C,IACnBp7B,EAAKm7B,MAAMv6C,QAAQy6C,IACnBr7B,EAAKm7B,MAAMv6C,QAAQ06C,IACnBt7B,EAAKm7B,MAAMv6C,QAAQ26C,IACnBxC,GAAOQ,GACX,EACAv8C,KAAKw+C,cAAe,EACpBx+C,KAAKy+C,WAAY,EACjBz+C,KAAK0+C,kBAAoB,EAKzB1+C,KAAK2+C,YAAc,IAAI56C,IACvB/D,KAAKyX,aAAeA,EACpBzX,KAAKgmB,KAAOvW,EAASA,EAAOuW,MAAQvW,EAASzP,KAC7CA,KAAK4+C,KAAOnvC,EAAS,GAAHzN,QAAAoE,EAAAA,GAAAA,GAAOqJ,EAAOmvC,MAAI,CAAEnvC,IAAU,GAChDzP,KAAKyP,OAASA,EACdzP,KAAK07C,MAAQjsC,EAASA,EAAOisC,MAAQ,EAAI,EACzC,IAAK,IAAIj1C,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAClCzG,KAAK4+C,KAAKn4C,GAAGk3C,sBAAuB,EAEpC39C,KAAKgmB,OAAShmB,OACdA,KAAKm+C,MAAQ,IAAIxC,GACzB,CAilCC,OAjlCAh8C,EAAAA,GAAAA,GAAAs9C,EAAA,EAAAr9C,IAAA,mBAAAC,MACD,SAAiB6M,EAAM4T,GAInB,OAHKtgB,KAAK49C,cAAcj3C,IAAI+F,IACxB1M,KAAK49C,cAAc96C,IAAI4J,EAAM,IAAI6zB,IAE9BvgC,KAAK49C,cAAc/2C,IAAI6F,GAAMxE,IAAIoY,EAC5C,GAAC,CAAA1gB,IAAA,kBAAAC,MACD,SAAgB6M,GAC6C,IAAzD,IAAMmyC,EAAsB7+C,KAAK49C,cAAc/2C,IAAI6F,GAAM8U,EAAA9hB,UAAA8G,OADpCs4C,EAAI,IAAA73C,MAAAua,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJo9B,EAAIp9B,EAAA,GAAAhiB,UAAAgiB,GAEzBm9B,GAAuBA,EAAoBvd,OAAM7hC,MAA1Bo/C,EAA8BC,EACzD,GAAC,CAAAl/C,IAAA,eAAAC,MACD,SAAa6M,GACT,OAAO1M,KAAK49C,cAAcj3C,IAAI+F,EAClC,GACA,CAAA9M,IAAA,QAAAC,MAGA,SAAM+Q,GAAqD,IAAAuS,EAAA,KAA3C43B,EAAar7C,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAGM,KAAKgmB,KAAK63B,gBACtC,IAAI79C,KAAK4Q,SAAT,CAEA5Q,KAAKy9C,MAAQvB,GAAatrC,GAC1B5Q,KAAK4Q,SAAWA,EAChB,IAAAmuC,EAA4C/+C,KAAK0X,QAAzCtI,EAAQ2vC,EAAR3vC,SAAUtB,EAAMixC,EAANjxC,OAAQ0B,EAAauvC,EAAbvvC,cAS1B,GARIA,IAAkBA,EAActQ,SAChCsQ,EAAcqB,MAAMD,GAExB5Q,KAAKgmB,KAAKm4B,MAAMj2C,IAAIlI,MACpBA,KAAKyP,QAAUzP,KAAKyP,OAAO3O,SAASoH,IAAIlI,MACpC+6C,IAAkBjtC,GAAUsB,KAC5BpP,KAAK+6C,eAAgB,GAErB6B,EAAsB,CACtB,IAAIoC,EACEC,EAAsB,WAAH,OAAU97B,EAAK6C,KAAKw3B,uBAAwB,CAAK,EAC1EZ,EAAqBhsC,GAAU,WAC3BuS,EAAK6C,KAAKw3B,uBAAwB,EAClCwB,GAAeA,IACfA,EAAc5mB,GAAM6mB,EAAqB,KACrC/J,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/ChyB,EAAKg7B,MAAMv6C,QAAQs7C,IAE3B,GACJ,CACI9vC,GACApP,KAAKgmB,KAAKm5B,mBAAmB/vC,EAAUpP,OAGd,IAAzBA,KAAK0X,QAAQlL,SACbgD,IACCJ,GAAYtB,IACb9N,KAAKwgB,iBAAiB,aAAa,SAAAxP,GAA+E,IAA5ErI,EAAKqI,EAALrI,MAAO+qC,EAAgB1iC,EAAhB0iC,iBAAkB0L,EAAwBpuC,EAAxBouC,yBAAkCC,EAASruC,EAAjBlD,OACrF,GAAIqV,EAAKm8B,yBAGL,OAFAn8B,EAAKnK,YAASrV,OACdwf,EAAKo8B,oBAAiB57C,GAI1B,IAAM67C,EAAmBr8B,EAAKzL,QAAQmI,YAClCrQ,EAAc4tB,wBACdqiB,GACJC,EAA+DlwC,EAAckT,WAArEi9B,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiB18B,EAAK28B,eACvB9F,GAAiB72B,EAAK28B,aAAcT,IACrCD,EAMEW,GAAgCrM,GAAoB0L,EAC1D,GAAIj8B,EAAKzL,QAAQsoC,YACZ78B,EAAKu3B,YAAcv3B,EAAKu3B,WAAW9pC,UACpCmvC,GACCrM,IACImM,IAAkB18B,EAAKk0B,kBAAoB,CAC5Cl0B,EAAKu3B,aACLv3B,EAAK+3B,aAAe/3B,EAAKu3B,WACzBv3B,EAAK+3B,aAAaA,kBAAev3C,GAErCwf,EAAK88B,mBAAmBt3C,EAAOo3C,GAC/B,IAAMG,GAAgBrxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf0wB,GAAmBigB,EAAkB,WAAS,IACjDzmB,OAAQ4mB,EACR1mB,WAAY2mB,KAEZpwC,EAAc+0B,oBACdphB,EAAKzL,QAAQsoC,cACbE,EAAiB9nB,MAAQ,EACzB8nB,EAAiBrtC,MAAO,GAE5BsQ,EAAK+e,eAAege,EACxB,MAOSxM,GACDwL,GAAgB/7B,GAEhBA,EAAKm0B,UAAYn0B,EAAKzL,QAAQtV,gBAC9B+gB,EAAKzL,QAAQtV,iBAGrB+gB,EAAK28B,aAAeT,CACxB,GA5FM,CA8Fd,GAAC,CAAAz/C,IAAA,UAAAC,MACD,WACIG,KAAK0X,QAAQtI,UAAYpP,KAAK82C,aAC9B92C,KAAKgmB,KAAKm4B,MAAMv0C,OAAO5J,MACvB,IAAMi3C,EAAQj3C,KAAKk3C,WACnBD,GAASA,EAAMrtC,OAAO5J,MACtBA,KAAKyP,QAAUzP,KAAKyP,OAAO3O,SAAS4C,OAAO1D,MAC3CA,KAAK4Q,cAAWjN,GAChBkH,EAAAA,GAAAA,IAAY7K,KAAKk+C,iBACrB,GACA,CAAAt+C,IAAA,cAAAC,MACA,WACIG,KAAKu9C,uBAAwB,CACjC,GAAC,CAAA39C,IAAA,gBAAAC,MACD,WACIG,KAAKu9C,uBAAwB,CACjC,GAAC,CAAA39C,IAAA,kBAAAC,MACD,WACI,OAAOG,KAAKu9C,uBAAyBv9C,KAAKw9C,qBAC9C,GAAC,CAAA59C,IAAA,yBAAAC,MACD,WACI,OAAQG,KAAKovC,oBACRpvC,KAAKyP,QAAUzP,KAAKyP,OAAO6vC,2BAC5B,CACR,GACA,CAAA1/C,IAAA,cAAAC,MACA,WACQG,KAAKmgD,oBAETngD,KAAK86C,YAAa,EAClB96C,KAAKm+C,OAASn+C,KAAKm+C,MAAMv6C,QAAQw8C,IACjCpgD,KAAKk9C,cACT,GAAC,CAAAt9C,IAAA,uBAAAC,MACD,WACI,IAAQ2P,EAAkBxP,KAAK0X,QAAvBlI,cACR,OAAOA,GAAiBA,EAAckT,WAAW/K,iBACrD,GAAC,CAAA/X,IAAA,aAAAC,MACD,WAAyC,IAA9BwgD,IAAqB3gD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GAE5B,GADAM,KAAKgmB,KAAK63B,iBAAkB,EACxB79C,KAAKgmB,KAAKm6B,kBACVngD,KAAK0X,QAAQtV,gBAAkBpC,KAAK0X,QAAQtV,sBAIhD,IADCpC,KAAKgmB,KAAK80B,YAAc96C,KAAKgmB,KAAKs6B,eAC/BtgD,KAAK+6C,cAAT,CAEA/6C,KAAK+6C,eAAgB,EACrB,IAAK,IAAIt0C,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAAK,CACvC,IAAM4b,EAAOriB,KAAK4+C,KAAKn4C,GACvB4b,EAAKs7B,sBAAuB,EAC5Bt7B,EAAKywB,aAAa,YACdzwB,EAAK3K,QAAQsoC,YACb39B,EAAKy0B,YAAW,EAExB,CACA,IAAAyJ,EAA6BvgD,KAAK0X,QAA1BtI,EAAQmxC,EAARnxC,SAAUtB,EAAMyyC,EAANzyC,OAClB,QAAiBnK,IAAbyL,GAA2BtB,EAA/B,CAEA,IAAM6J,EAAoB3X,KAAKwgD,uBAC/BxgD,KAAKygD,2BAA6B9oC,EAC5BA,EAAkB3X,KAAKyX,aAAc,SACrC9T,EACN3D,KAAK0gD,iBACLL,GAAyBrgD,KAAK2gD,gBAAgB,aANpC,CAZA,CAmBd,GAAC,CAAA/gD,IAAA,SAAAC,MACD,WAMI,GALAG,KAAK89C,iBAAkB,EACE99C,KAAKmgD,kBAQ1B,OAHAngD,KAAK4gD,gBACL5gD,KAAKi+C,yBACLj+C,KAAKm+C,MAAMv6C,QAAQi9C,IAGlB7gD,KAAK86C,YACN96C,KAAKm+C,MAAMv6C,QAAQk9C,IAEvB9gD,KAAK86C,YAAa,EAIlB96C,KAAKm+C,MAAMv6C,QAAQm9C,IAKnB/gD,KAAKm+C,MAAMv6C,QAAQmvC,IAKnB/yC,KAAKm+C,MAAMv6C,QAAQo9C,IACnBhhD,KAAKi+C,oBAML,IAAM9zC,EAAMD,YAAYC,MACxBN,GAAAA,GAAAA,MAAkBkJ,EAAM,EAAG,IAAO,GAAI5I,EAAMN,GAAAA,GAAAA,WAC5CA,GAAAA,GAAAA,UAAsBM,EACtBN,GAAAA,GAAAA,cAAyB,EACzBf,GAAAA,GAAAA,OAAAA,QAAqBe,GAAAA,IACrBf,GAAAA,GAAAA,UAAAA,QAAwBe,GAAAA,IACxBf,GAAAA,GAAAA,OAAAA,QAAqBe,GAAAA,IACrBA,GAAAA,GAAAA,cAAyB,CAC7B,GAAC,CAAAjK,IAAA,YAAAC,MACD,WAAY,IAAAsiC,EAAA,KACHniC,KAAK89C,kBACN99C,KAAK89C,iBAAkB,EACvB1G,gBAAe,kBAAMjV,EAAKnyB,QAAQ,IAE1C,GAAC,CAAApQ,IAAA,oBAAAC,MACD,WACIG,KAAKm+C,MAAMv6C,QAAQq9C,IACnBjhD,KAAK2+C,YAAY/6C,QAAQs9C,GAC7B,GAAC,CAAAthD,IAAA,2BAAAC,MACD,WACSG,KAAK+9C,4BACN/9C,KAAK+9C,2BAA4B,EACjC54C,GAAAA,GAAAA,UAAgBnF,KAAKk+C,kBAAkB,GAAO,GAEtD,GAAC,CAAAt+C,IAAA,4BAAAC,MACD,WAA4B,IAAAsyC,EAAA,KAMxBhtC,GAAAA,GAAAA,YAAiB,WACTgtC,EAAK4I,cACL5I,EAAKnsB,KAAKywB,YAGVtE,EAAKnsB,KAAKg4B,mBAElB,GACJ,GACA,CAAAp+C,IAAA,iBAAAC,MAGA,YACQG,KAAK46C,UAAa56C,KAAK4Q,WAE3B5Q,KAAK46C,SAAW56C,KAAK0wC,UACzB,GAAC,CAAA9wC,IAAA,eAAAC,MACD,WACI,GAAKG,KAAK4Q,WAGV5Q,KAAK8yC,eACC9yC,KAAK0X,QAAQypC,qBAAuBnhD,KAAKs3C,UAC1Ct3C,KAAK+6C,eADV,CAWA,GAAI/6C,KAAK06C,aAAe16C,KAAK06C,WAAW9pC,SACpC,IAAK,IAAInK,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAAK,CAC1BzG,KAAK4+C,KAAKn4C,GAClBqsC,cACT,CAEJ,IAAMsO,EAAaphD,KAAK8N,OACxB9N,KAAK8N,OAAS9N,KAAK0wC,SAAQ,GAC3B1wC,KAAKqhD,gBnBxcQ,CACrBlvC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB0c7BrK,KAAK+6C,eAAgB,EACrB/6C,KAAK21C,qBAAkBhyC,EACvB3D,KAAK2gD,gBAAgB,UAAW3gD,KAAK8N,OAAOyhC,WAC5C,IAAQ//B,EAAkBxP,KAAK0X,QAAvBlI,cACRA,GACIA,EAAc8xB,OAAO,gBAAiBthC,KAAK8N,OAAOyhC,UAAW6R,EAAaA,EAAW7R,eAAY5rC,EAtBrG,CAuBJ,GAAC,CAAA/D,IAAA,eAAAC,MACD,WAAgC,IAAnByhD,EAAK5hD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,UACb6hD,EAAmB30C,QAAQ5M,KAAK0X,QAAQ8pC,cAAgBxhD,KAAK4Q,UAC7D5Q,KAAKuxC,QACLvxC,KAAKuxC,OAAO2L,cAAgBl9C,KAAKgmB,KAAKk3B,aACtCl9C,KAAKuxC,OAAO+P,QAAUA,IACtBC,GAAmB,GAEnBA,IACAvhD,KAAKuxC,OAAS,CACV2L,YAAal9C,KAAKgmB,KAAKk3B,YACvBoE,MAAAA,EACAG,OAAQ1E,EAAkB/8C,KAAK4Q,UAC/BwK,OAAQ0hC,EAAc98C,KAAK4Q,WAGvC,GAAC,CAAAhR,IAAA,iBAAAC,MACD,WACI,GAAKm9C,EAAL,CAEA,IAAM0E,EAAmB1hD,KAAK+6C,eAAiB/6C,KAAK29C,qBAC9CgE,EAAgB3hD,KAAK21C,kBAAoBmE,GAAY95C,KAAK21C,iBAC1Dh+B,EAAoB3X,KAAKwgD,uBACzBoB,EAAyBjqC,EACzBA,EAAkB3X,KAAKyX,aAAc,SACrC9T,EACAk+C,EAA8BD,IAA2B5hD,KAAKygD,2BAChEiB,IACCC,GACG7pC,GAAa9X,KAAKyX,eAClBoqC,KACJ7E,EAAeh9C,KAAK4Q,SAAUgxC,GAC9B5hD,KAAK29C,sBAAuB,EAC5B39C,KAAKm6C,iBAdC,CAgBd,GAAC,CAAAv6C,IAAA,UAAAC,MACD,WAAgC,IAAxBiiD,IAAepiD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GACbqiD,EAAU/hD,KAAKwxC,iBACjBjC,EAAYvvC,KAAKgiD,oBAAoBD,GAUzC,OAJID,IACAvS,EAAYvvC,KAAK8hD,gBAAgBvS,IAErC0S,GAAS1S,GACF,CACH2N,YAAal9C,KAAKgmB,KAAKk3B,YACvBgF,YAAaH,EACbxS,UAAAA,EACA93B,aAAc,CAAC,EACfwB,OAAQjZ,KAAKkB,GAErB,GAAC,CAAAtB,IAAA,iBAAAC,MACD,WACI,IAAQ2P,EAAkBxP,KAAK0X,QAAvBlI,cACR,IAAKA,EACD,MnB1gBS,CACrB2C,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB4gB7B,IAAM0iC,EAAMv9B,EAAco+B,qBAElB2D,EAAWvxC,KAAKgmB,KAAhBurB,OAKR,OAJIA,IACApE,GAAcJ,EAAI56B,EAAGo/B,EAAOn2B,OAAOjJ,GACnCg7B,GAAcJ,EAAI36B,EAAGm/B,EAAOn2B,OAAOhJ,IAEhC26B,CACX,GAAC,CAAAntC,IAAA,sBAAAC,MACD,SAAoBktC,GAChB,IAAMoV,EnBrhBO,CACrBhwC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBuhB7BgvC,GAAY8I,EAAkBpV,GAK9B,IAAK,IAAItmC,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAAK,CACvC,IAAM4b,EAAOriB,KAAK4+C,KAAKn4C,GACf8qC,EAAoBlvB,EAApBkvB,OAAQ75B,EAAY2K,EAAZ3K,QAChB,GAAI2K,IAASriB,KAAKgmB,MAAQurB,GAAU75B,EAAQ8pC,aAAc,CAKtD,GAAIjQ,EAAOkQ,OAAQ,CACfpI,GAAY8I,EAAkBpV,GAC9B,IAAgBqV,EAAepiD,KAAKgmB,KAA5BurB,OAKJ6Q,IACAjV,GAAcgV,EAAiBhwC,GAAIiwC,EAAWhnC,OAAOjJ,GACrDg7B,GAAcgV,EAAiB/vC,GAAIgwC,EAAWhnC,OAAOhJ,GAE7D,CACA+6B,GAAcgV,EAAiBhwC,EAAGo/B,EAAOn2B,OAAOjJ,GAChDg7B,GAAcgV,EAAiB/vC,EAAGm/B,EAAOn2B,OAAOhJ,EACpD,CACJ,CACA,OAAO+vC,CACX,GAAC,CAAAviD,IAAA,iBAAAC,MACD,SAAektC,GAA4B,IAAvBsV,EAAa3iD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GACvB4iD,EnBtjBO,CACrBnwC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBwjB7BgvC,GAAYiJ,EAAgBvV,GAC5B,IAAK,IAAItmC,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAAK,CACvC,IAAM4b,EAAOriB,KAAK4+C,KAAKn4C,IAClB47C,GACDhgC,EAAK3K,QAAQ8pC,cACbn/B,EAAKkvB,QACLlvB,IAASA,EAAK2D,MACd2nB,GAAa2U,EAAgB,CACzBnwC,GAAIkQ,EAAKkvB,OAAOn2B,OAAOjJ,EACvBC,GAAIiQ,EAAKkvB,OAAOn2B,OAAOhJ,IAG1B0F,GAAauK,EAAK5K,eAEvBk2B,GAAa2U,EAAgBjgC,EAAK5K,aACtC,CAIA,OAHIK,GAAa9X,KAAKyX,eAClBk2B,GAAa2U,EAAgBtiD,KAAKyX,cAE/B6qC,CACX,GAAC,CAAA1iD,IAAA,kBAAAC,MACD,SAAgBktC,GACZ,IAAMwV,EnB7kBO,CACrBpwC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB+kB7BgvC,GAAYkJ,EAAqBxV,GACjC,IAAK,IAAItmC,EAAI,EAAGA,EAAIzG,KAAK4+C,KAAKp4C,OAAQC,IAAK,CACvC,IAAM4b,EAAOriB,KAAK4+C,KAAKn4C,GACvB,GAAK4b,EAAKzR,UAELkH,GAAauK,EAAK5K,cAAvB,CAEA80B,GAASlqB,EAAK5K,eAAiB4K,EAAKq+B,iBACpC,IAAM9G,EnBtlBG,CACrBznC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBylBzBgvC,GAAYO,EADIv3B,EAAKmvB,kBAErBmI,GAAoB4I,EAAqBlgC,EAAK5K,aAAc4K,EAAKu4B,SAAWv4B,EAAKu4B,SAASrL,eAAY5rC,EAAWi2C,EALrG,CAMhB,CAIA,OAHI9hC,GAAa9X,KAAKyX,eAClBkiC,GAAoB4I,EAAqBviD,KAAKyX,cAE3C8qC,CACX,GAAC,CAAA3iD,IAAA,iBAAAC,MACD,SAAe8I,GACX3I,KAAKwiD,YAAc75C,EACnB3I,KAAKgmB,KAAKy8B,2BACVziD,KAAKo9C,mBAAoB,CAC7B,GAAC,CAAAx9C,IAAA,aAAAC,MACD,SAAW6X,GACP1X,KAAK0X,SAAO7I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL7O,KAAK0X,SACLA,GAAO,IACVsjC,eAAiCr3C,IAAtB+T,EAAQsjC,WAA0BtjC,EAAQsjC,WAE7D,GAAC,CAAAp7C,IAAA,oBAAAC,MACD,WACIG,KAAKuxC,YAAS5tC,EACd3D,KAAK8N,YAASnK,EACd3D,KAAK46C,cAAWj3C,EAChB3D,KAAKygD,gCAA6B98C,EAClC3D,KAAKwiD,iBAAc7+C,EACnB3D,KAAKgZ,YAASrV,EACd3D,KAAK+6C,eAAgB,CACzB,GAAC,CAAAn7C,IAAA,qCAAAC,MACD,WACSG,KAAK0iD,gBAQN1iD,KAAK0iD,eAAeC,2BACpB94C,GAAAA,GAAAA,WACA7J,KAAK0iD,eAAerE,oBAAmB,EAE/C,GAAC,CAAAz+C,IAAA,qBAAAC,MACD,WAA+C,IACvC0a,EADWqoC,EAAkBljD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAO3B64C,EAAOv4C,KAAK6iD,UAClB7iD,KAAKo9C,oBAAsBp9C,KAAKo9C,kBAAoB7E,EAAK6E,mBACzDp9C,KAAKs9C,mBAAqBt9C,KAAKs9C,iBAAmB/E,EAAK+E,kBACvDt9C,KAAKq9C,0BAA4Br9C,KAAKq9C,wBAA0B9E,EAAK8E,yBACrE,IAAMyF,EAAWl2C,QAAQ5M,KAAKk7C,eAAiBl7C,OAASu4C,EAKlDjU,IAAYse,GACbE,GAAY9iD,KAAKq9C,yBAClBr9C,KAAKo9C,oBACmB,QAAtB7iC,EAAKva,KAAKyP,cAA2B,IAAP8K,OAAgB,EAASA,EAAG6iC,oBAC5Dp9C,KAAK+iD,gCACT,IAAIze,EAAJ,CAEA,IAAA0e,EAA6BhjD,KAAK0X,QAA1B5J,EAAMk1C,EAANl1C,OAAQsB,EAAQ4zC,EAAR5zC,SAIhB,GAAKpP,KAAK8N,SAAYA,GAAUsB,GAAhC,CASA,GAPApP,KAAK2iD,yBAA2B94C,GAAAA,GAAAA,WAO3B7J,KAAKwiD,cAAgBxiD,KAAKu/C,eAAgB,CAE3C,IAAMmD,EAAiB1iD,KAAKijD,6BACxBP,GACAA,EAAe50C,QACY,IAA3B9N,KAAK0+C,mBACL1+C,KAAK0iD,eAAiBA,EACtB1iD,KAAKkjD,qCACLljD,KAAKu/C,enB/qBA,CACrBptC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBirBrBrK,KAAKmjD,qBnBhrBA,CACrBhxC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBkrBrBmhC,GAAqBxrC,KAAKmjD,qBAAsBnjD,KAAK8N,OAAOyhC,UAAWmT,EAAe50C,OAAOyhC,WAC7F8J,GAAYr5C,KAAKu/C,eAAgBv/C,KAAKmjD,uBAGtCnjD,KAAK0iD,eAAiB1iD,KAAKu/C,oBAAiB57C,CAEpD,CAKA,GAAK3D,KAAKu/C,gBAAmBv/C,KAAKwiD,YAAlC,CAyCA,GApCKxiD,KAAKgZ,SACNhZ,KAAKgZ,OnBlsBI,CACrB7G,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBosBzBrK,KAAKojD,qBnBnsBI,CACrBjxC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,KmBysBzBrK,KAAKu/C,gBACLv/C,KAAKmjD,sBACLnjD,KAAK0iD,gBACL1iD,KAAK0iD,eAAe1pC,QACpBhZ,KAAKkjD,qCACL5X,GAAgBtrC,KAAKgZ,OAAQhZ,KAAKu/C,eAAgBv/C,KAAK0iD,eAAe1pC,SAKjEhZ,KAAKwiD,aACN51C,QAAQ5M,KAAKk7C,cAEbl7C,KAAKgZ,OAAShZ,KAAKqjD,eAAerjD,KAAK8N,OAAOyhC,WAG9C8J,GAAYr5C,KAAKgZ,OAAQhZ,KAAK8N,OAAOyhC,WAEzCzC,GAAc9sC,KAAKgZ,OAAQhZ,KAAKwiD,cAMhCnJ,GAAYr5C,KAAKgZ,OAAQhZ,KAAK8N,OAAOyhC,WAKrCvvC,KAAK+iD,+BAAgC,CACrC/iD,KAAK+iD,gCAAiC,EACtC,IAAML,EAAiB1iD,KAAKijD,6BACxBP,GACA91C,QAAQ81C,EAAexH,gBACnBtuC,QAAQ5M,KAAKk7C,gBAChBwH,EAAehrC,QAAQ8pC,cACxBkB,EAAe1pC,QACY,IAA3BhZ,KAAK0+C,mBACL1+C,KAAK0iD,eAAiBA,EACtB1iD,KAAKkjD,qCACLljD,KAAKu/C,enBhvBA,CACrBptC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBkvBrBrK,KAAKmjD,qBnBjvBA,CACrBhxC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBmvBrBmhC,GAAqBxrC,KAAKmjD,qBAAsBnjD,KAAKgZ,OAAQ0pC,EAAe1pC,QAC5EqgC,GAAYr5C,KAAKu/C,eAAgBv/C,KAAKmjD,uBAGtCnjD,KAAK0iD,eAAiB1iD,KAAKu/C,oBAAiB57C,CAEpD,CAIA44C,GAAoBE,sBA/DV,CA9BA,CANA,CAoGd,GAAC,CAAA78C,IAAA,6BAAAC,MACD,WACI,GAAKG,KAAKyP,SACN88B,GAASvsC,KAAKyP,OAAOgI,gBACrB+0B,GAAexsC,KAAKyP,OAAOgI,cAG/B,OAAIzX,KAAKyP,OAAO6zC,eACLtjD,KAAKyP,OAGLzP,KAAKyP,OAAOwzC,4BAE3B,GAAC,CAAArjD,IAAA,eAAAC,MACD,WACI,OAAO+M,SAAS5M,KAAKu/C,gBACjBv/C,KAAKwiD,aACLxiD,KAAK0X,QAAQsoC,aACbhgD,KAAK8N,OACb,GAAC,CAAAlO,IAAA,iBAAAC,MACD,WACI,IAAI0a,EACEg+B,EAAOv4C,KAAK6iD,UACZC,EAAWl2C,QAAQ5M,KAAKk7C,eAAiBl7C,OAASu4C,EACpDjU,GAAU,EAuBd,IAlBItkC,KAAKo9C,oBAA6C,QAAtB7iC,EAAKva,KAAKyP,cAA2B,IAAP8K,OAAgB,EAASA,EAAG6iC,sBACtF9Y,GAAU,GAMVwe,IACC9iD,KAAKq9C,yBAA2Br9C,KAAKs9C,oBACtChZ,GAAU,GAMVtkC,KAAK2iD,2BAA6B94C,GAAAA,GAAAA,YAClCy6B,GAAU,IAEVA,EAAJ,CAEA,IAAAif,EAA6BvjD,KAAK0X,QAA1B5J,EAAMy1C,EAANz1C,OAAQsB,EAAQm0C,EAARn0C,SAWhB,GANApP,KAAKm9C,gBAAkBvwC,QAAS5M,KAAKyP,QAAUzP,KAAKyP,OAAO0tC,iBACvDn9C,KAAKq3C,kBACLr3C,KAAKwjD,kBACJxjD,KAAKm9C,kBACNn9C,KAAKwiD,YAAcxiD,KAAKu/C,oBAAiB57C,GAExC3D,KAAK8N,SAAYA,GAAUsB,GAAhC,CAMAiqC,GAAYr5C,KAAKqhD,gBAAiBrhD,KAAK8N,OAAOyhC,WAI9C,IAAMkU,EAAiBzjD,KAAK01C,UAAUvjC,EAChCuxC,EAAiB1jD,KAAK01C,UAAUtjC,GvBvyBlD,SAAyB26B,EAAK2I,EAAWiO,GAAsC,IAA5BC,EAAkBlkD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAC3DmkD,EAAaF,EAASn9C,OAC5B,GAAKq9C,EAAL,CAIA,IAAIxhC,EACA1Z,EAFJ+sC,EAAUvjC,EAAIujC,EAAUtjC,EAAI,EAG5B,IAAK,IAAI3L,EAAI,EAAGA,EAAIo9C,EAAYp9C,IAAK,CAEjCkC,GADA0Z,EAAOshC,EAASl9C,IACHkvC,gBAKb,IAAM/kC,EAAWyR,EAAKzR,SAClBA,GACAA,EAASnP,OACkB,aAA3BmP,EAASnP,MAAMqiD,UAGfF,GACAvhC,EAAK3K,QAAQ8pC,cACbn/B,EAAKkvB,QACLlvB,IAASA,EAAK2D,MACd2nB,GAAaZ,EAAK,CACd56B,GAAIkQ,EAAKkvB,OAAOn2B,OAAOjJ,EACvBC,GAAIiQ,EAAKkvB,OAAOn2B,OAAOhJ,IAG3BzJ,IAEA+sC,EAAUvjC,GAAKxJ,EAAMwJ,EAAEiB,MACvBsiC,EAAUtjC,GAAKzJ,EAAMyJ,EAAEgB,MAEvB05B,GAAcC,EAAKpkC,IAEnBi7C,GAAsB9rC,GAAauK,EAAK5K,eACxCk2B,GAAaZ,EAAK1qB,EAAK5K,cAE/B,CAKAi+B,EAAUvjC,EAAI66B,GAAc0I,EAAUvjC,GACtCujC,EAAUtjC,EAAI46B,GAAc0I,EAAUtjC,EA3C5B,CA4Cd,CuB6vBY2xC,CAAgB/jD,KAAKqhD,gBAAiBrhD,KAAK01C,UAAW11C,KAAK4+C,KAAMkE,IAK7DvK,EAAKzqC,QACJyqC,EAAKv/B,QACgB,IAArBhZ,KAAK01C,UAAUvjC,GAAgC,IAArBnS,KAAK01C,UAAUtjC,IAC1CmmC,EAAKv/B,OAASu/B,EAAKzqC,OAAOyhC,WAE9B,IAAQv2B,EAAWu/B,EAAXv/B,OACR,GAAKA,EAAL,CAaKhZ,KAAK21C,kBACN31C,KAAK21C,gBnBv2BM,CACvBxjC,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,ImB02BDjrC,KAAKgkD,6BnBx2BM,CACvB7xC,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,KmB42BL,IAAMgZ,EAA0BjkD,KAAKkkD,oBAUrC/Y,GAAanrC,KAAK21C,gBAAiB31C,KAAKqhD,gBAAiBroC,EAAQhZ,KAAKyX,cACtEzX,KAAKkkD,oBAAsB/I,GAAyBn7C,KAAK21C,gBAAiB31C,KAAK01C,WAC3E11C,KAAKkkD,sBAAwBD,GAC7BjkD,KAAK01C,UAAUvjC,IAAMsxC,GACrBzjD,KAAK01C,UAAUtjC,IAAMsxC,IACrB1jD,KAAKw+C,cAAe,EACpBx+C,KAAKm6C,iBACLn6C,KAAK2gD,gBAAgB,mBAAoB3nC,IAK7CujC,GAAoBG,wBA3BpB,MANQ18C,KAAKkkD,sBACLlkD,KAAK21C,gBnBh2BE,CACvBxjC,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,ImBm2BGjrC,KAAKkkD,oBAAsB,OAC3BlkD,KAAKm6C,iBAnCH,CAbA,CA+Ed,GAAC,CAAAv6C,IAAA,OAAAC,MACD,WACIG,KAAKy+C,WAAY,CAErB,GAAC,CAAA7+C,IAAA,OAAAC,MACD,WACIG,KAAKy+C,WAAY,CAErB,GAAC,CAAA7+C,IAAA,iBAAAC,MACD,WAAiC,IAAlBskD,IAASzkD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GAEpB,GADAM,KAAK0X,QAAQyiC,gBAAkBn6C,KAAK0X,QAAQyiC,iBACxCgK,EAAW,CACX,IAAMlN,EAAQj3C,KAAKk3C,WACnBD,GAASA,EAAMkD,gBACnB,CACIn6C,KAAKk7C,eAAiBl7C,KAAKk7C,aAAatqC,WACxC5Q,KAAKk7C,kBAAev3C,EAE5B,GAAC,CAAA/D,IAAA,qBAAAC,MACD,SAAmB8I,GAA6C,IAAAypC,EAAA,KAAtC2N,EAA4BrgD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAC5Ck7C,EAAW56C,KAAK46C,SAChBwJ,EAAuBxJ,EACvBA,EAASnjC,aACT,CAAC,EACD4sC,GAAWx1C,EAAAA,EAAAA,GAAA,GAAQ7O,KAAKyX,cACxB+qC,EnB15BS,CACvBrwC,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,ImB65BAjrC,KAAK0iD,gBACL1iD,KAAK0iD,eAAehrC,QAAQsoC,aAC7BhgD,KAAKu/C,eAAiBv/C,KAAKmjD,0BAAuBx/C,GAEtD3D,KAAK+iD,gCAAkChD,EACvC,IAWIuE,EAXEC,EnB35BO,CACrBpyC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB65BvBm6C,EAAiB5J,EAAWA,EAAS3hC,YAAStV,EAC9C8gD,EAAezkD,KAAK8N,OAAS9N,KAAK8N,OAAOmL,YAAStV,EAClD+gD,EAA0BF,IAAmBC,EAC7CxN,EAAQj3C,KAAKk3C,WACbuB,GAAgBxB,GAASA,EAAME,QAAQ3wC,QAAU,EACjDgyC,EAAyB5rC,QAAQ83C,IAClCjM,IAC0B,IAA3Bz4C,KAAK0X,QAAQsjC,YACZh7C,KAAK4+C,KAAKnyC,KAAKk4C,KACpB3kD,KAAK0+C,kBAAoB,EAEzB1+C,KAAK4kD,eAAiB,SAAC3tB,GACnB,IAAM1J,EAAW0J,EAAS,IAC1B4tB,GAAarC,EAAYrwC,EAAGxJ,EAAMwJ,EAAGob,GACrCs3B,GAAarC,EAAYpwC,EAAGzJ,EAAMyJ,EAAGmb,GACrC6kB,EAAK0S,eAAetC,GAChBpQ,EAAKmN,gBACLnN,EAAK+Q,sBACL/Q,EAAKtkC,QACLskC,EAAKsQ,gBACLtQ,EAAKsQ,eAAe50C,SACpB09B,GAAqB+Y,EAAgBnS,EAAKtkC,OAAOyhC,UAAW6C,EAAKsQ,eAAe50C,OAAOyhC,WACvFwV,GAAO3S,EAAKmN,eAAgBnN,EAAK+Q,qBAAsBoB,EAAgBh3B,GAKnE+2B,GACAvK,GAAU3H,EAAKmN,eAAgB+E,KAC/BlS,EAAKgL,mBAAoB,GAExBkH,IACDA,EnB57BC,CACrBnyC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,KmB87BrBgvC,GAAYiL,EAAoBlS,EAAKmN,iBAErCmF,IACAtS,EAAKyI,gBAAkBwJ,EACvBhM,GAAUgM,EAAaD,EAAsBhS,EAAK36B,aAAc8V,EAAUirB,EAAwBC,IAEtGrG,EAAKpsB,KAAKy8B,2BACVrQ,EAAK+H,iBACL/H,EAAKsM,kBAAoBnxB,CAC7B,EACAvtB,KAAK4kD,eAAe5kD,KAAK0X,QAAQsoC,WAAa,IAAO,EACzD,GAAC,CAAApgD,IAAA,iBAAAC,MACD,SAAe6X,GAAS,IAAA66B,EAAA,KACpBvyC,KAAK2gD,gBAAgB,kBACrB3gD,KAAKq3C,kBAAoBr3C,KAAKq3C,iBAAiB/f,OAC3Ct3B,KAAKk7C,cAAgBl7C,KAAKk7C,aAAa7D,kBACvCr3C,KAAKk7C,aAAa7D,iBAAiB/f,OAEnCt3B,KAAKwjD,oBACL34C,EAAAA,GAAAA,IAAY7K,KAAKwjD,kBACjBxjD,KAAKwjD,sBAAmB7/C,GAO5B3D,KAAKwjD,iBAAmBr+C,GAAAA,GAAAA,QAAa,WACjC+vC,GAAsBC,wBAAyB,EAC/C5C,EAAK8E,iBCj+BrB,SAA4Bx3C,EAAOoyB,EAAWva,GAC1C,IAAMstC,EAAgBhzC,EAAcnS,GAASA,EAAQ4iC,GAAY5iC,GAEjE,OADAmlD,EAAc54C,MAAMqzB,GAAmB,GAAIulB,EAAe/yB,EAAWva,IAC9DstC,EAAc13C,SACzB,CD69BwC23C,CAAmB,EAr8BnC,KAq8BqDp2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtD6I,GAAO,IACVwhB,SAAU,SAACjC,GACPsb,EAAKqS,eAAe3tB,GACpBvf,EAAQwhB,UAAYxhB,EAAQwhB,SAASjC,EACzC,EACAgC,WAAY,WACRvhB,EAAQuhB,YAAcvhB,EAAQuhB,aAC9BsZ,EAAK2S,mBACT,KAEA3S,EAAK2I,eACL3I,EAAK2I,aAAa7D,iBAAmB9E,EAAK8E,kBAE9C9E,EAAKiR,sBAAmB7/C,CAC5B,GACJ,GAAC,CAAA/D,IAAA,oBAAAC,MACD,WACQG,KAAKk7C,eACLl7C,KAAKk7C,aAAa7D,sBAAmB1zC,EACrC3D,KAAKk7C,aAAaP,qBAAkBh3C,GAExC,IAAMszC,EAAQj3C,KAAKk3C,WACnBD,GAASA,EAAMkO,wBACfnlD,KAAKk7C,aACDl7C,KAAKq3C,iBACDr3C,KAAK66C,qBACDl3C,EACZ3D,KAAK2gD,gBAAgB,oBACzB,GAAC,CAAA/gD,IAAA,kBAAAC,MACD,WACQG,KAAKq3C,mBACLr3C,KAAK4kD,gBAAkB5kD,KAAK4kD,eAr+BpB,KAs+BR5kD,KAAKq3C,iBAAiB/f,QAE1Bt3B,KAAKklD,mBACT,GAAC,CAAAtlD,IAAA,0BAAAC,MACD,WACI,IAAM04C,EAAOv4C,KAAK6iD,UACZO,EAAuD7K,EAAvD6K,qBAAsBpqC,EAAiCu/B,EAAjCv/B,OAAQlL,EAAyByqC,EAAzBzqC,OAAQ2J,EAAiB8gC,EAAjB9gC,aAC5C,GAAK2rC,GAAyBpqC,GAAWlL,EAAzC,CAOA,GAAI9N,OAASu4C,GACTv4C,KAAK8N,QACLA,GACAs3C,GAA0BplD,KAAK0X,QAAQ2tC,cAAerlD,KAAK8N,OAAOyhC,UAAWzhC,EAAOyhC,WAAY,CAChGv2B,EAAShZ,KAAKgZ,QnB7gCL,CACrB7G,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB+gCzB,IAAMi7C,EAAU1a,GAAW5qC,KAAK8N,OAAOyhC,UAAUp9B,GACjD6G,EAAO7G,EAAE7H,IAAMiuC,EAAKv/B,OAAO7G,EAAE7H,IAC7B0O,EAAO7G,EAAE9H,IAAM2O,EAAO7G,EAAE7H,IAAMg7C,EAC9B,IAAMC,EAAU3a,GAAW5qC,KAAK8N,OAAOyhC,UAAUn9B,GACjD4G,EAAO5G,EAAE9H,IAAMiuC,EAAKv/B,OAAO5G,EAAE9H,IAC7B0O,EAAO5G,EAAE/H,IAAM2O,EAAO5G,EAAE9H,IAAMi7C,CAClC,CACAlM,GAAY+J,EAAsBpqC,GAMlC20B,GAAayV,EAAsB3rC,GAOnC0zB,GAAanrC,KAAKgkD,6BAA8BhkD,KAAKqhD,gBAAiB+B,EAAsB3rC,EA/BlF,CAgCd,GAAC,CAAA7X,IAAA,qBAAAC,MACD,SAAmBuP,EAAUiT,GACpBriB,KAAK2+C,YAAYh4C,IAAIyI,IACtBpP,KAAK2+C,YAAY77C,IAAIsM,EAAU,IAAI8qC,IAEzBl6C,KAAK2+C,YAAY93C,IAAIuI,GAC7BlH,IAAIma,GACV,IAAMtD,EAASsD,EAAK3K,QAAQ8tC,uBAC5BnjC,EAAK00B,QAAQ,CACTl3B,WAAYd,EAASA,EAAOc,gBAAalc,EACzC62C,sBAAuBz7B,GAAUA,EAAO0mC,4BAClC1mC,EAAO0mC,4BAA4BpjC,QACnC1e,GAEd,GAAC,CAAA/D,IAAA,SAAAC,MACD,WACI,IAAMo3C,EAAQj3C,KAAKk3C,WACnB,OAAOD,GAAQA,EAAMsB,OAASv4C,IAClC,GAAC,CAAAJ,IAAA,UAAAC,MACD,WACI,IAAI0a,EAEJ,OADqBva,KAAK0X,QAAlBtI,WACsC,QAA1BmL,EAAKva,KAAKk3C,kBAA+B,IAAP38B,OAAgB,EAASA,EAAGg+B,OAAgBv4C,IACtG,GAAC,CAAAJ,IAAA,cAAAC,MACD,WACI,IAAI0a,EAEJ,OADqBva,KAAK0X,QAAlBtI,SACqC,QAA1BmL,EAAKva,KAAKk3C,kBAA+B,IAAP38B,OAAgB,EAASA,EAAG6/B,cAAWz2C,CAChG,GAAC,CAAA/D,IAAA,WAAAC,MACD,WACI,IAAQuP,EAAapP,KAAK0X,QAAlBtI,SACR,GAAIA,EACA,OAAOpP,KAAKgmB,KAAK24B,YAAY93C,IAAIuI,EACzC,GAAC,CAAAxP,IAAA,UAAAC,MACD,WAAiE,IAAAslC,EAAAzlC,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDg+C,EAAUvY,EAAVuY,WAAY79B,EAAUslB,EAAVtlB,WAAY26B,EAAqBrV,EAArBqV,sBACxBvD,EAAQj3C,KAAKk3C,WACfD,GACAA,EAAMF,QAAQ/2C,KAAMw6C,GACpBkD,IACA19C,KAAK21C,qBAAkBhyC,EACvB3D,KAAK09C,YAAa,GAElB79B,GACA7f,KAAK22C,WAAW,CAAE92B,WAAAA,GAC1B,GAAC,CAAAjgB,IAAA,WAAAC,MACD,WACI,IAAMo3C,EAAQj3C,KAAKk3C,WACnB,QAAID,GACOA,EAAMD,SAASh3C,KAK9B,GAAC,CAAAJ,IAAA,gBAAAC,MACD,WACI,IAAQ2P,EAAkBxP,KAAK0X,QAAvBlI,cACR,GAAKA,EAAL,CAGA,IAAIk2C,GAAY,EAKRjuC,EAAiBjI,EAAjBiI,aAQR,IAPIA,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACbsvC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZl/C,EAAI,EAAGA,EAAI21C,GAAc51C,OAAQC,IAAK,CAC3C,IAAM7G,EAAM,SAAWw8C,GAAc31C,GAEjCgR,EAAa7X,KACb+lD,EAAY/lD,GAAO6X,EAAa7X,GAChC4P,EAAco2C,eAAehmD,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFX4P,EAAcY,SAEIu1C,EACdn2C,EAAco2C,eAAehmD,EAAK+lD,EAAY/lD,IAIlD4P,EAAc2qC,gBApBJ,CAhBA,CAqCd,GAAC,CAAAv6C,IAAA,sBAAAC,MACD,SAAoByd,GAChB,IAAI/C,EAAIoV,EACR,GAAK3vB,KAAK4Q,WAAY5Q,KAAKy9C,MAA3B,CAEA,IAAKz9C,KAAKy+C,UACN,OAAOpC,GAEX,IAAMwJ,EAAS,CACXvJ,WAAY,IAEV3kC,EAAoB3X,KAAKwgD,uBAC/B,GAAIxgD,KAAK09C,WAQL,OAPA19C,KAAK09C,YAAa,EAClBmI,EAAO7uC,QAAU,GACjB6uC,EAAOC,cACHpnC,GAAiC,OAAdpB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwoC,gBAAkB,GACzGD,EAAO/yC,UAAY6E,EACbA,EAAkB3X,KAAKyX,aAAc,IACrC,OACCouC,EAEX,IAAMtN,EAAOv4C,KAAK6iD,UAClB,IAAK7iD,KAAK21C,kBAAoB31C,KAAK8N,SAAWyqC,EAAKv/B,OAAQ,CACvD,IAAM+sC,EAAc,CAAC,EAerB,OAdI/lD,KAAK0X,QAAQtI,WACb22C,EAAY/uC,aACsBrT,IAA9B3D,KAAKyX,aAAaT,QACZhX,KAAKyX,aAAaT,QAClB,EACV+uC,EAAYD,cACRpnC,GAAiC,OAAdpB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwoC,gBAAkB,IAEzG9lD,KAAKw+C,eAAiB1mC,GAAa9X,KAAKyX,gBACxCsuC,EAAYjzC,UAAY6E,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN3X,KAAKw+C,cAAe,GAEjBuH,CACX,CACA,IAAMC,EAAiBzN,EAAKsC,iBAAmBtC,EAAK9gC,aACpDzX,KAAKimD,0BACLJ,EAAO/yC,UAAYqoC,GAAyBn7C,KAAKgkD,6BAA8BhkD,KAAK01C,UAAWsQ,GAC3FruC,IACAkuC,EAAO/yC,UAAY6E,EAAkBquC,EAAgBH,EAAO/yC,YAEhE,IAAAozC,EAAiBlmD,KAAK21C,gBAAdxjC,EAAC+zC,EAAD/zC,EAAGC,EAAC8zC,EAAD9zC,EA+BX,IAAK,IAAMxS,KA9BXimD,EAAOhuC,gBAAkB,GAAH7V,OAAiB,IAAXmQ,EAAEgJ,OAAY,MAAAnZ,OAAgB,IAAXoQ,EAAE+I,OAAY,OACzDo9B,EAAKsC,gBAKLgL,EAAO7uC,QACHuhC,IAASv4C,KACiG,QAAnG2vB,EAAuC,QAAjCpV,EAAKyrC,EAAehvC,eAA4B,IAAPuD,EAAgBA,EAAKva,KAAKyX,aAAaT,eAA4B,IAAP2Y,EAAgBA,EAAK,EACjI3vB,KAAK26C,gBACD36C,KAAKyX,aAAaT,QAClBgvC,EAAerN,YAO7BkN,EAAO7uC,QACHuhC,IAASv4C,UACwB2D,IAA3BqiD,EAAehvC,QACXgvC,EAAehvC,QACf,QAC2BrT,IAA/BqiD,EAAerN,YACXqN,EAAerN,YACf,EAKAhnC,EACd,QAA4BhO,IAAxBqiD,EAAepmD,GAAnB,CAEA,IAAAumD,EAA6Bx0C,EAAgB/R,GAArC41C,EAAO2Q,EAAP3Q,QAASuC,EAAOoO,EAAPpO,QAOXqO,EAAiC,SAArBP,EAAO/yC,UACnBkzC,EAAepmD,GACf41C,EAAQwQ,EAAepmD,GAAM24C,GACnC,GAAIR,EAEA,IADA,IAAMsO,EAAMtO,EAAQvxC,OACXC,EAAI,EAAGA,EAAI4/C,EAAK5/C,IACrBo/C,EAAO9N,EAAQtxC,IAAM2/C,OAIzBP,EAAOjmD,GAAOwmD,CAlBN,CAgChB,OANIpmD,KAAK0X,QAAQtI,WACby2C,EAAOC,cACHvN,IAASv4C,KACH0e,GAAiC,OAAdpB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwoC,gBAAkB,GACrG,QAEPD,CA5Ga,CA6GxB,GAAC,CAAAjmD,IAAA,gBAAAC,MACD,WACIG,KAAK06C,WAAa16C,KAAK46C,cAAWj3C,CACtC,GACA,CAAA/D,IAAA,YAAAC,MACA,WACIG,KAAKgmB,KAAKm4B,MAAMv6C,SAAQ,SAACye,GAAW,IAAI9H,EAAI,OAAwC,QAAhCA,EAAK8H,EAAKg1B,wBAAqC,IAAP98B,OAAgB,EAASA,EAAG+c,MAAQ,IAChIt3B,KAAKgmB,KAAKm4B,MAAMv6C,QAAQi9C,IACxB7gD,KAAKgmB,KAAK24B,YAAY14C,OAC1B,KAACg3C,CAAA,CAztCL,EA2tCJ,CACA,SAASlK,GAAa1wB,GAClBA,EAAK0wB,cACT,CACA,SAASiO,GAAmB3+B,GACxB,IAAI9H,EACEqgC,GAAuC,QAA1BrgC,EAAK8H,EAAKq4B,kBAA+B,IAAPngC,OAAgB,EAASA,EAAGqgC,WAAav4B,EAAKu4B,SACnG,GAAIv4B,EAAKi1B,UACLj1B,EAAKvU,QACL8sC,GACAv4B,EAAKikC,aAAa,aAAc,CAChC,IAAAC,EAA2DlkC,EAAKvU,OAA7CA,EAAMy4C,EAAjBhX,UAAgCiX,EAAcD,EAA3BrE,YACnBmD,EAAkBhjC,EAAK3K,QAAvB2tC,cACFvC,EAAWlI,EAAS3hC,SAAWoJ,EAAKvU,OAAOmL,OAG3B,SAAlBosC,EACAjZ,IAAS,SAACvB,GACN,IAAM4b,EAAe3D,EACflI,EAASsH,YAAYrX,GACrB+P,EAASrL,UAAU1E,GACnBrkC,EAASokC,GAAW6b,GAC1BA,EAAan8C,IAAMwD,EAAO+8B,GAAMvgC,IAChCm8C,EAAap8C,IAAMo8C,EAAan8C,IAAM9D,CAC1C,IAEK4+C,GAA0BC,EAAezK,EAASrL,UAAWzhC,IAClEs+B,IAAS,SAACvB,GACN,IAAM4b,EAAe3D,EACflI,EAASsH,YAAYrX,GACrB+P,EAASrL,UAAU1E,GACnBrkC,EAASokC,GAAW98B,EAAO+8B,IACjC4b,EAAap8C,IAAMo8C,EAAan8C,IAAM9D,EAIlC6b,EAAKk9B,iBAAmBl9B,EAAKg1B,mBAC7Bh1B,EAAK+6B,mBAAoB,EACzB/6B,EAAKk9B,eAAe1U,GAAMxgC,IACtBgY,EAAKk9B,eAAe1U,GAAMvgC,IAAM9D,EAE5C,IAEJ,IAAMkgD,EnB7yCa,CACvBv0C,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,ImBgzCTE,GAAaub,EAAa54C,EAAQ8sC,EAASrL,WAC3C,IAAMoX,EnB/yCa,CACvBx0C,EAP2B,CAC3B+4B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,GAIb74B,EAR2B,CAC3B84B,UAAW,EACX93B,MAAO,EACP+H,OAAQ,EACR8vB,YAAa,ImBkzCL6X,EACA3X,GAAawb,EAAatkC,EAAKghC,eAAemD,GAAgB,GAAO5L,EAASsH,aAG9E/W,GAAawb,EAAa74C,EAAQ8sC,EAASrL,WAE/C,IAAMmE,GAAoBoG,GAAY4M,GAClCtH,GAA2B,EAC/B,IAAK/8B,EAAKq4B,WAAY,CAClB,IAAMgI,EAAiBrgC,EAAK4gC,6BAK5B,GAAIP,IAAmBA,EAAehI,WAAY,CAC9C,IAAkBkM,EAAyClE,EAAnD9H,SAAkCiM,EAAiBnE,EAAzB50C,OAClC,GAAI84C,GAAkBC,EAAc,CAChC,IAAMC,EnB5zCD,CACrB30C,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImB8zCrBmhC,GAAqBsb,EAAkBlM,EAASrL,UAAWqX,EAAerX,WAC1E,IAAMgV,EnB9zCD,CACrBpyC,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,ImBg0CrBmhC,GAAqB+Y,EAAgBz2C,EAAQ+4C,EAAatX,WACrDyK,GAAiB8M,EAAkBvC,KACpCnF,GAA2B,GAE3BsD,EAAehrC,QAAQsoC,aACvB39B,EAAKk9B,eAAiBgF,EACtBliC,EAAK8gC,qBAAuB2D,EAC5BzkC,EAAKqgC,eAAiBA,EAE9B,CACJ,CACJ,CACArgC,EAAKs+B,gBAAgB,YAAa,CAC9B7yC,OAAAA,EACA8sC,SAAAA,EACAjyC,MAAOg+C,EACPD,YAAAA,EACAhT,iBAAAA,EACA0L,yBAAAA,GAER,MACK,GAAI/8B,EAAKi1B,SAAU,CACpB,IAAQl1C,EAAmBigB,EAAK3K,QAAxBtV,eACRA,GAAkBA,GACtB,CAMAigB,EAAK3K,QAAQmI,gBAAalc,CAC9B,CACA,SAASy6C,GAAoB/7B,GAIzBk6B,GAAoBC,aACfn6B,EAAK5S,SAQL4S,EAAKihC,iBACNjhC,EAAK+6B,kBAAoB/6B,EAAK5S,OAAO2tC,mBAOzC/6B,EAAKg7B,0BAA4Bh7B,EAAKg7B,wBAA0BzwC,QAAQyV,EAAK+6B,mBACzE/6B,EAAK5S,OAAO2tC,mBACZ/6B,EAAK5S,OAAO4tC,0BAChBh7B,EAAKi7B,mBAAqBj7B,EAAKi7B,iBAAmBj7B,EAAK5S,OAAO6tC,kBAClE,CACA,SAASiB,GAAgBl8B,GACrBA,EAAK+6B,kBACD/6B,EAAKg7B,wBACDh7B,EAAKi7B,kBACD,CAChB,CACA,SAAS2D,GAAc5+B,GACnBA,EAAK4+B,eACT,CACA,SAASJ,GAAkBx+B,GACvBA,EAAKw+B,mBACT,CACA,SAASC,GAAmBz+B,GACxBA,EAAK04B,eAAgB,CACzB,CACA,SAASgG,GAAoB1+B,GACzB,IAAQ7S,EAAkB6S,EAAK3K,QAAvBlI,cACJA,GAAiBA,EAAckT,WAAWqkC,uBAC1Cv3C,EAAc8xB,OAAO,uBAEzBjf,EAAK26B,gBACT,CACA,SAASkC,GAAgB78B,GACrBA,EAAK68B,kBACL78B,EAAKmgC,YAAcngC,EAAKk9B,eAAiBl9B,EAAKrJ,YAASrV,EACvD0e,EAAK+6B,mBAAoB,CAC7B,CACA,SAASiB,GAAmBh8B,GACxBA,EAAKg8B,oBACT,CACA,SAASC,GAAej8B,GACpBA,EAAKi8B,gBACT,CACA,SAAS8B,GAAc/9B,GACnBA,EAAK+9B,eACT,CACA,SAASc,GAAoBjK,GACzBA,EAAM+P,oBACV,CACA,SAASnC,GAAar1B,EAAQ7mB,EAAOqC,GACjCwkB,EAAO0b,UAAYtsB,GAAIjW,EAAMuiC,UAAW,EAAGlgC,GAC3CwkB,EAAOpc,MAAQwL,GAAIjW,EAAMyK,MAAO,EAAGpI,GACnCwkB,EAAOrU,OAASxS,EAAMwS,OACtBqU,EAAOyb,YAActiC,EAAMsiC,WAC/B,CACA,SAASgc,GAAQz3B,EAAQtoB,EAAMomB,EAAItiB,GAC/BwkB,EAAOllB,IAAMsU,GAAI1X,EAAKoD,IAAKgjB,EAAGhjB,IAAKU,GACnCwkB,EAAOnlB,IAAMuU,GAAI1X,EAAKmD,IAAKijB,EAAGjjB,IAAKW,EACvC,CACA,SAAS+5C,GAAOv1B,EAAQtoB,EAAMomB,EAAItiB,GAC9Bi8C,GAAQz3B,EAAOrd,EAAGjL,EAAKiL,EAAGmb,EAAGnb,EAAGnH,GAChCi8C,GAAQz3B,EAAOpd,EAAGlL,EAAKkL,EAAGkb,EAAGlb,EAAGpH,EACpC,CACA,SAAS25C,GAAoBtiC,GACzB,OAAQA,EAAKw4B,sBAAwDl3C,IAArC0e,EAAKw4B,gBAAgBlC,WACzD,CACA,IAAM8G,GAA0B,CAC5BttB,SAAU,IACV7I,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB49B,GAAoB,SAACC,GAAM,MAA0B,qBAAdC,WACzCA,UAAUC,UAAU57C,cAAcnE,SAAS6/C,EAAO,EAMhDG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE98C,KAAKmJ,MACL3I,GAAAA,EACN,SAAS28C,GAAU1c,GAEfA,EAAKvgC,IAAMg9C,GAAWzc,EAAKvgC,KAC3BugC,EAAKxgC,IAAMi9C,GAAWzc,EAAKxgC,IAC/B,CACA,SAAS43C,GAASlV,GACdwa,GAAUxa,EAAI56B,GACdo1C,GAAUxa,EAAI36B,EAClB,CACA,SAASgzC,GAA0BC,EAAezK,EAAU9sC,GACxD,MAA0B,aAAlBu3C,GACe,oBAAlBA,IACIva,GAAOmP,GAAYW,GAAWX,GAAYnsC,GAAS,GAChE,CEp9CA,IAAM05C,GAAyB7K,GAAqB,CAChDC,qBAAsB,SAACx7C,EAAKkgC,GAAM,OAAKlhB,GAAYhf,EAAK,SAAUkgC,EAAO,EACzEwb,cAAe,iBAAO,CAClB3qC,EAAGzQ,SAAS+lD,gBAAgBC,YAAchmD,SAASimD,KAAKD,WACxDt1C,EAAG1Q,SAAS+lD,gBAAgBG,WAAalmD,SAASimD,KAAKC,UAC1D,EACD7K,kBAAmB,kBAAM,CAAI,ICN3B1L,GAAqB,CACvBnyC,aAASyE,GAEPkkD,GAAqBlL,GAAqB,CAC5CG,cAAe,SAAClsC,GAAQ,MAAM,CAC1BuB,EAAGvB,EAAS82C,WACZt1C,EAAGxB,EAASg3C,UACf,EACD/K,cAAe,WACX,IAAKxL,GAAmBnyC,QAAS,CAC7B,IAAM4oD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaj3C,MAAMX,QACnB43C,EAAanR,WAAW,CAAE6K,cAAc,IACxCnQ,GAAmBnyC,QAAU4oD,CACjC,CACA,OAAOzW,GAAmBnyC,OAC9B,EACA89C,eAAgB,SAACpsC,EAAU/Q,GACvB+Q,EAASnP,MAAMqR,eAAsBnP,IAAV9D,EAAsBA,EAAQ,MAC7D,EACAk9C,kBAAmB,SAACnsC,GAAQ,OAAKhE,QAAuD,UAA/CsD,OAAO63C,iBAAiBn3C,GAAUo3C,SAAqB,IClB9Fx6C,GAAO,CACTI,IAAK,CACDwU,QAASmyB,IAEb/mC,KAAM,CACF4U,QAAS8xB,GACT+I,eAAgB4K,GAChB34C,cAAAA,KCCF+4C,GAAwB,uDAC9B,SAASC,GAAiBhpD,GACtB,IAAMgtB,EAAQ+7B,GAAsBE,KAAKjpD,GACzC,IAAKgtB,EACD,MAAO,CAAC,GACZ,IAAAk8B,GAAArjD,EAAAA,GAAAA,GAA4BmnB,EAAK,GACjC,MAAO,CADOk8B,EAAA,GAAUA,EAAA,GAE5B,CAEA,SAASC,GAAiBnpD,EAASa,GAAoB,IAAX27C,EAAKh8C,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,GAChD6E,EAAAA,GAAAA,GAAUm3C,GAFG,EAEgB,yDAAF15C,OAA2D9C,EAAO,yDAC7F,IAAAopD,EAA0BJ,GAAiBhpD,GAAQqpD,GAAAxjD,EAAAA,GAAAA,GAAAujD,EAAA,GAA5C71C,EAAK81C,EAAA,GAAEC,EAAQD,EAAA,GAEtB,GAAK91C,EAAL,CAGA,IAAMkN,EAAWzP,OAAO63C,iBAAiBhoD,GAAS0oD,iBAAiBh2C,GACnE,GAAIkN,EAAU,CACV,IAAM+oC,EAAU/oC,EAASlH,OACzB,OAAO0nB,GAAkBuoB,GAAWx1C,WAAWw1C,GAAWA,CAC9D,CACK,OAAI/1C,EAAmB61C,GAEjBH,GAAiBG,EAAUzoD,EAAS27C,EAAQ,GAG5C8M,CAZD,CAcd,CCjCA,IAAMG,GAAiB,IAAI3gD,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE4gD,GAAkB,SAAChpD,GAAG,OAAK+oD,GAAehiD,IAAI/G,EAAI,EAIlDipD,GAAgB,SAAC58C,GAAC,OAAKA,IAAM+G,GAAU/G,IAAMiI,EAAE,EAC/C40C,GAAmB,SAACC,EAAQC,GAAG,OAAK91C,WAAW61C,EAAOh1C,MAAM,MAAMi1C,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAKnoD,GAAoB,IAAhB6R,EAAS7R,EAAT6R,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMu2C,EAAWv2C,EAAUoZ,MAAM,sBACjC,GAAIm9B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASj2C,EAAUoZ,MAAM,oBAC/B,OAAI68B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIthD,IAAI,CAAC,IAAK,IAAK,MACnCuhD,GAAgC33C,EAAmBxK,QAAO,SAACxH,GAAG,OAAM0pD,GAAc3iD,IAAI/G,EAAI,IAChG,SAAS4pD,GAAgCh6C,GACrC,IAAMi6C,EAAoB,GAW1B,OAVAF,GAA8B3lD,SAAQ,SAAChE,GACnC,IAAMC,EAAQ2P,EAAcwzB,SAASpjC,QACvB+D,IAAV9D,IACA4pD,EAAkBhkD,KAAK,CAAC7F,EAAKC,EAAMgH,QACnChH,EAAMiD,IAAIlD,EAAImS,WAAW,SAAW,EAAI,GAEhD,IAEI03C,EAAkBjjD,QAClBgJ,EAAcY,SACXq5C,CACX,CACA,IAAMC,GAAmB,CAErBlpD,MAAO,SAAAwQ,EAAAm0B,GAAA,IAAGhzB,EAACnB,EAADmB,EAACw3C,EAAAxkB,EAAMxvB,YAAAA,OAAW,IAAAg0C,EAAG,IAAGA,EAAAC,EAAAzkB,EAAE1vB,aAAAA,OAAY,IAAAm0C,EAAG,IAAGA,EAAA,OAAOz3C,EAAE9H,IAAM8H,EAAE7H,IAAM4I,WAAWyC,GAAezC,WAAWuC,EAAa,EAC/HnV,OAAQ,SAAAupD,EAAAC,GAAA,IAAG13C,EAACy3C,EAADz3C,EAAC23C,EAAAD,EAAMt0C,WAAAA,OAAU,IAAAu0C,EAAG,IAAGA,EAAAC,EAAAF,EAAEp0C,cAAAA,OAAa,IAAAs0C,EAAG,IAAGA,EAAA,OAAO53C,EAAE/H,IAAM+H,EAAE9H,IAAM4I,WAAWsC,GAActC,WAAWwC,EAAc,EAChIhV,IAAK,SAAC0oD,EAAKa,GAAA,IAAIvpD,EAAGupD,EAAHvpD,IAAG,OAAOwS,WAAWxS,EAAI,EACxCE,KAAM,SAACwoD,EAAKc,GAAA,IAAItpD,EAAIspD,EAAJtpD,KAAI,OAAOsS,WAAWtS,EAAK,EAC3C0U,OAAQ,SAAA60C,EAAAC,GAAA,IAAGh4C,EAAC+3C,EAAD/3C,EAAO1R,EAAG0pD,EAAH1pD,IAAG,OAAOwS,WAAWxS,IAAQ0R,EAAE/H,IAAM+H,EAAE9H,IAAI,EAC7D+K,MAAO,SAAAg1C,EAAAC,GAAA,IAAGn4C,EAACk4C,EAADl4C,EAAOvR,EAAI0pD,EAAJ1pD,KAAI,OAAOsS,WAAWtS,IAASuR,EAAE9H,IAAM8H,EAAE7H,IAAI,EAE9D6H,EAAG82C,GAAuB,EAAG,IAC7B72C,EAAG62C,GAAuB,EAAG,KAGjCS,GAAiB9yC,WAAa8yC,GAAiBv3C,EAC/Cu3C,GAAiB7yC,WAAa6yC,GAAiBt3C,EAC/C,IAAMm4C,GAA2B,SAACvxC,EAAQxJ,EAAeg7C,GACrD,IAAMC,EAAaj7C,EAAco+B,qBAC3B7tC,EAAUyP,EAActQ,QACxBwrD,EAAuB3C,iBAAiBhoD,GACtC+jD,EAAY4G,EAAZ5G,QACF3oC,EAAS,CAAC,EAGA,SAAZ2oC,GACAt0C,EAAco2C,eAAe,UAAW5sC,EAAO8qC,SAAW,SAK9D0G,EAAY5mD,SAAQ,SAAChE,GACjBub,EAAOvb,GAAO8pD,GAAiB9pD,GAAK6qD,EAAYC,EACpD,IAEAl7C,EAAcY,SACd,IAAMu6C,EAAan7C,EAAco+B,qBAQjC,OAPA4c,EAAY5mD,SAAQ,SAAChE,GAGjB,IAAMC,EAAQ2P,EAAcwzB,SAASpjC,GACrCC,GAASA,EAAM+qD,KAAKzvC,EAAOvb,IAC3BoZ,EAAOpZ,GAAO8pD,GAAiB9pD,GAAK+qD,EAAYD,EACpD,IACO1xC,CACX,EAyHA,SAAS6xC,GAAer7C,EAAewJ,EAAQmC,EAAQyE,GACnD,OA3MqB,SAAC5G,GACtB,OAAOpN,OAAOzE,KAAK6R,GAAQvM,KAAKm8C,GACpC,CAyMWkC,CAAiB9xC,GAzHa,SAACxJ,EAAewJ,GAA4C,IAApCmC,EAAMzb,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkgB,EAAalgB,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FsZ,GAAMnK,EAAAA,EAAAA,GAAA,GAAQmK,GACd4G,GAAa/Q,EAAAA,EAAAA,GAAA,GAAQ+Q,GACrB,IAAMmrC,EAAuBn/C,OAAOzE,KAAK6R,GAAQ5R,OAAOwhD,IAGpDoC,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GAkF7B,GAjFAH,EAAqBnnD,SAAQ,SAAChE,GAC1B,IAAMC,EAAQ2P,EAAcwzB,SAASpjC,GACrC,GAAK4P,EAAcuzB,SAASnjC,GAA5B,CAEA,IAGIurD,EAHAjkD,EAAOiU,EAAOvb,GACdwrD,EAAWxoB,GAAuB17B,GAChComB,EAAKtU,EAAOpZ,GAMlB,GAAI6e,GAAkB6O,GAAK,CACvB,IAAM+9B,EAAe/9B,EAAG9mB,OAClB8kD,EAAsB,OAAVh+B,EAAG,GAAc,EAAI,EACvCpmB,EAAOomB,EAAGg+B,GACVF,EAAWxoB,GAAuB17B,GAClC,IAAK,IAAIT,EAAI6kD,EAAW7kD,EAAI4kD,GAKV,OAAV/9B,EAAG7mB,GAL+BA,IAOjC0kD,GAMD5mD,EAAAA,GAAAA,GAAUq+B,GAAuBtV,EAAG7mB,MAAQ0kD,EAAQ,2CALpDA,EAASvoB,GAAuBtV,EAAG7mB,KACnClC,EAAAA,GAAAA,GAAU4mD,IAAWC,GAChBvC,GAAcuC,IAAavC,GAAcsC,GAAU,gEAMpE,MAEIA,EAASvoB,GAAuBtV,GAEpC,GAAI89B,IAAaD,EAGb,GAAItC,GAAcuC,IAAavC,GAAcsC,GAAS,CAClD,IAAMjsD,EAAUW,EAAMgH,MACC,kBAAZ3H,GACPW,EAAMiD,IAAIoQ,WAAWhU,IAEP,kBAAPouB,EACPtU,EAAOpZ,GAAOsT,WAAWoa,GAEpBrmB,MAAMiF,QAAQohB,IAAO69B,IAAWj3C,KACrC8E,EAAOpZ,GAAO0tB,EAAGnnB,IAAI+M,YAE7B,MACuB,OAAbk4C,QAAkC,IAAbA,OAAsB,EAASA,EAASt4C,aACvD,OAAXq4C,QAA8B,IAAXA,OAAoB,EAASA,EAAOr4C,aAC9C,IAAT5L,GAAqB,IAAPomB,GAGF,IAATpmB,EACArH,EAAMiD,IAAIqoD,EAAOr4C,UAAU5L,IAG3B8R,EAAOpZ,GAAOwrD,EAASt4C,UAAUwa,IAMhC29B,IACDD,EACIxB,GAAgCh6C,GACpCy7C,GAAsC,GAE1CC,EAAqBzlD,KAAK7F,GAC1BggB,EAAchgB,QACa+D,IAAvBic,EAAchgB,GACRggB,EAAchgB,GACdoZ,EAAOpZ,GACjBC,EAAM+qD,KAAKt9B,GA1ET,CA6Ed,IACI49B,EAAqB1kD,OAAQ,CAC7B,IAAM+kD,EAAUL,EAAqBxkD,QAAQ,WAAa,EACpDwJ,OAAOs7C,YACP,KACAC,EAAkBlB,GAAyBvxC,EAAQxJ,EAAe07C,GAaxE,OAXIF,EAAuBxkD,QACvBwkD,EAAuBpnD,SAAQ,SAAA8nD,GAAkB,IAAAC,GAAA5mD,EAAAA,GAAAA,GAAA2mD,EAAA,GAAhB9rD,EAAG+rD,EAAA,GAAE9rD,EAAK8rD,EAAA,GACvCn8C,EAAcwzB,SAASpjC,GAAKkD,IAAIjD,EACpC,IAGJ2P,EAAcY,SAEVb,EAAAA,GAAyB,OAAZg8C,GACbr7C,OAAO07C,SAAS,CAAElrD,IAAK6qD,IAEpB,CAAEvyC,OAAQyyC,EAAiB7rC,cAAAA,EACtC,CAEI,MAAO,CAAE5G,OAAAA,EAAQ4G,cAAAA,EAEzB,CAUUisC,CAAiCr8C,EAAewJ,EAAQmC,EAAQyE,GAChE,CAAE5G,OAAAA,EAAQ4G,cAAAA,EACpB,CC5NA,IAAMksC,GAAkB,SAACt8C,EAAewJ,EAAQmC,EAAQyE,GACpD,IAAMD,EFuCV,SAA6BnQ,EAAavO,EAAiB2e,GAAe,IAAzB5G,EAAMpN,OAAAuN,OAAA,GAAAlY,GAC7ClB,EAAUyP,EAActQ,QAC9B,KAAMa,aAAmB07B,SACrB,MAAO,CAAEziB,OAAAA,EAAQ4G,cAAAA,GAiBrB,IAAK,IAAMhgB,KAdPggB,IACAA,GAAa/Q,EAAAA,EAAAA,GAAA,GAAQ+Q,IAGzBpQ,EAActM,OAAOU,SAAQ,SAAC/D,GAC1B,IAAMX,EAAUW,EAAMgH,MACtB,GAAK8L,EAAmBzT,GAAxB,CAEA,IAAMygB,EAAW0oC,GAAiBnpD,EAASa,GACvC4f,GACA9f,EAAMiD,IAAI6c,EAHJ,CAId,IAGkB3G,EAAQ,CACtB,IAAM9Z,EAAU8Z,EAAOpZ,GACvB,GAAK+S,EAAmBzT,GAAxB,CAEA,IAAMygB,EAAW0oC,GAAiBnpD,EAASa,GACtC4f,IAGL3G,EAAOpZ,GAAO+f,EACTC,IACDA,EAAgB,CAAC,QAIMjc,IAAvBic,EAAchgB,KACdggB,EAAchgB,GAAOV,GAZb,CAchB,CACA,MAAO,CAAE8Z,OAAAA,EAAQ4G,cAAAA,EACrB,CE9EqBmsC,CAAoBv8C,EAAewJ,EAAQ4G,GAG5D,OAAOirC,GAAer7C,EAFtBwJ,EAAS2G,EAAS3G,OAE2BmC,EAD7CyE,EAAgBD,EAASC,cAE7B,ECXMosC,GAAuB,CAAE9sD,QAAS,MAClC+sD,GAA2B,CAAE/sD,SAAS,GCF5C,IAAMgtD,GAAqB,IAAI1mC,Q,kCCoBzB2mC,GAAevgD,OAAOzE,KAAK4G,GAC3Bq+C,GAAcD,GAAa3lD,OAC3B6lD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBhgD,EAAa9F,OAK/B+lD,GAAa,WACf,SAAAA,EAAAtrD,GAAiG,IAAA+hB,EAAA,KAAnFvT,EAAMxO,EAANwO,OAAQxP,EAAKgB,EAALhB,MAAO0P,EAAe1O,EAAf0O,gBAAiBC,EAAmB3O,EAAnB2O,oBAAqBN,EAAWrO,EAAXqO,YAAgBoI,EAAOhY,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACF,EAAAA,GAAAA,GAAA,KAAA+sD,GAK3FvsD,KAAKd,QAAU,KAIfc,KAAKc,SAAW,IAAIkH,IAIpBhI,KAAK2M,eAAgB,EACrB3M,KAAKuM,uBAAwB,EAQ7BvM,KAAKukC,mBAAqB,KAM1BvkC,KAAKkD,OAAS,IAAIa,IAIlB/D,KAAK4O,SAAW,CAAC,EAKjB5O,KAAKwsD,mBAAqB,IAAIzoD,IAM9B/D,KAAKysD,iBAAmB,CAAC,EAIzBzsD,KAAKkhC,OAAS,CAAC,EAMflhC,KAAK0sD,uBAAyB,CAAC,EAC/B1sD,KAAK2sD,aAAe,kBAAM3pC,EAAKse,OAAO,SAAUte,EAAKvL,aAAa,EAClEzX,KAAKoQ,OAAS,WACL4S,EAAK9jB,UAEV8jB,EAAK4pC,eACL5pC,EAAK6pC,eAAe7pC,EAAK9jB,QAAS8jB,EAAKpF,YAAaoF,EAAK/iB,MAAMwB,MAAOuhB,EAAKzF,YAC/E,EACAvd,KAAKm6C,eAAiB,kBAAMh1C,GAAAA,GAAAA,OAAa6d,EAAK5S,QAAQ,GAAO,EAAK,EAClE,IAAQqH,EAA8BnI,EAA9BmI,aAAcmG,EAAgBtO,EAAhBsO,YACtB5d,KAAKyX,aAAeA,EACpBzX,KAAK8sD,YAAUj+C,EAAAA,EAAAA,GAAA,GAAQ4I,GACvBzX,KAAK+sD,cAAgB9sD,EAAMkC,SAAO0M,EAAAA,EAAAA,GAAA,GAAQ4I,GAAiB,CAAC,EAC5DzX,KAAK4d,YAAcA,EACnB5d,KAAKyP,OAASA,EACdzP,KAAKC,MAAQA,EACbD,KAAK2P,gBAAkBA,EACvB3P,KAAK07C,MAAQjsC,EAASA,EAAOisC,MAAQ,EAAI,EACzC17C,KAAK4P,oBAAsBA,EAC3B5P,KAAK0X,QAAUA,EACf1X,KAAKuM,sBAAwBA,EAAsBtM,GACnDD,KAAK2M,cAAgBA,EAAc1M,GAC/BD,KAAK2M,gBACL3M,KAAK6kC,gBAAkB,IAAI78B,KAE/BhI,KAAK+mC,uBAAyBn6B,QAAQ6C,GAAUA,EAAOvQ,SAWvD,IAAA8tD,EAA+ChtD,KAAK+d,4BAA4B9d,EAAO,CAAC,GAAhF+jC,EAAUgpB,EAAVhpB,WAAeipB,EAAmBryC,GAAAoyC,EAAA9wC,IAC1C,IAAK,IAAMtc,KAAOqtD,EAAqB,CACnC,IAAMptD,EAAQotD,EAAoBrtD,QACR+D,IAAtB8T,EAAa7X,IAAsBoS,EAAcnS,KACjDA,EAAMiD,IAAI2U,EAAa7X,IAAM,GACzBsgC,GAAwB8D,IACxBA,EAAW97B,IAAItI,GAG3B,CACJ,CAiXC,OAhXDD,EAAAA,GAAAA,GAAA4sD,EAAA,EAAA3sD,IAAA,8BAAAC,MAOA,SAA4BqtD,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAAvtD,IAAA,QAAAC,MACD,SAAM+Q,GAAU,IAAAuS,EAAA,KACZnjB,KAAKd,QAAU0R,EACfs7C,GAAmBppD,IAAI8N,EAAU5Q,MAC7BA,KAAKud,aAAevd,KAAKud,WAAW3M,UACpC5Q,KAAKud,WAAW1M,MAAMD,GAEtB5Q,KAAKyP,QAAUzP,KAAK2M,gBAAkB3M,KAAKuM,wBAC3CvM,KAAKotD,sBAAwBptD,KAAKyP,OAAO49C,gBAAgBrtD,OAE7DA,KAAKkD,OAAOU,SAAQ,SAAC/D,EAAOD,GAAG,OAAKujB,EAAKmqC,kBAAkB1tD,EAAKC,EAAM,IACjEosD,GAAyB/sD,SC1JtC,WAEI,GADA+sD,GAAyB/sD,SAAU,EAC9BqQ,EAAAA,EAEL,GAAIW,OAAOq9C,WAAY,CACnB,IAAMC,EAAmBt9C,OAAOq9C,WAAW,4BACrCE,EAA8B,WAAH,OAAUzB,GAAqB9sD,QAAUsuD,EAAiBtqC,OAAO,EAClGsqC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqB9sD,SAAU,CAEvC,CD8IYyuD,GAEJ3tD,KAAKukC,mBAC4B,UAA7BvkC,KAAK4P,sBAE8B,WAA7B5P,KAAK4P,qBAEDo8C,GAAqB9sD,SAI/Bc,KAAKyP,QACLzP,KAAKyP,OAAO3O,SAASoH,IAAIlI,MAC7BA,KAAKgQ,OAAOhQ,KAAKC,MAAOD,KAAK2P,gBACjC,GAAC,CAAA/P,IAAA,UAAAC,MACD,WAQI,IAAK,IAAMD,KAPXssD,GAAAA,OAA0BlsD,KAAKd,SAC/Bc,KAAKud,YAAcvd,KAAKud,WAAWzM,WACnCjG,EAAAA,GAAAA,IAAY7K,KAAK2sD,eACjB9hD,EAAAA,GAAAA,IAAY7K,KAAKoQ,QACjBpQ,KAAKwsD,mBAAmB5oD,SAAQ,SAACgG,GAAM,OAAKA,GAAQ,IACpD5J,KAAKotD,uBAAyBptD,KAAKotD,wBACnCptD,KAAKyP,QAAUzP,KAAKyP,OAAO3O,SAAS4C,OAAO1D,MACzBA,KAAKkhC,OACnBlhC,KAAKkhC,OAAOthC,GAAKqG,QAErB,IAAK,IAAMrG,KAAOI,KAAK4O,SACnB5O,KAAK4O,SAAShP,GAAKkR,UAEvB9Q,KAAKd,QAAU,IACnB,GAAC,CAAAU,IAAA,oBAAAC,MACD,SAAkBD,EAAKC,GAAO,IAAAsiC,EAAA,KACpByrB,EAAmB/7C,EAAelL,IAAI/G,GACtCiuD,EAAiBhuD,EAAM+hC,GAAG,UAAU,SAACksB,GACvC3rB,EAAK1qB,aAAa7X,GAAOkuD,EACzB3rB,EAAKliC,MAAMi5B,UACP/zB,GAAAA,GAAAA,OAAag9B,EAAKwqB,cAAc,GAAO,GACvCiB,GAAoBzrB,EAAK5kB,aACzB4kB,EAAK5kB,WAAW+/B,kBAAmB,EAE3C,IACMyQ,EAAwBluD,EAAM+hC,GAAG,gBAAiB5hC,KAAKm6C,gBAC7Dn6C,KAAKwsD,mBAAmB1pD,IAAIlD,GAAK,WAC7BiuD,IACAE,GACJ,GACJ,GAAC,CAAAnuD,IAAA,mBAAAC,MACD,SAAiBmuD,GAIb,OAAKhuD,KAAKd,SACLc,KAAKiuD,0BACNjuD,KAAK6S,OAASm7C,EAAMn7C,KAGjB7S,KAAKiuD,yBAAyBjuD,KAAKd,QAAS8uD,EAAM9uD,SAF9C,CAGf,GAAC,CAAAU,IAAA,eAAAC,MACD,SAAAmR,EAA6CN,EAAUnC,EAAmBkC,GAetE,IAfgG,IAC5Fy9C,EACAh/C,EAF4FijC,EAAA,KAAxEgc,GAALn9C,EAARlQ,SAA0B8Z,GAAA5J,EAAAo9C,KAe5B3nD,EAAI,EAAGA,EAAI2lD,GAAa3lD,IAAK,CAClC,IAAMiG,EAAOy/C,GAAa1lD,GAC1B4nD,EAA2GtgD,EAAmBrB,GAAtHuB,EAASogD,EAATpgD,UAAoBqgD,EAAkBD,EAA3BjsC,QAA6B66B,EAAcoR,EAAdpR,eAA+BsR,EAAsBF,EAArCn/C,cAC5D+tC,IACAiR,EAA4BjR,GAC5BhvC,EAAUkgD,MACLnuD,KAAK4O,SAASlC,IAAS4hD,IACxBtuD,KAAK4O,SAASlC,GAAQ,IAAI4hD,EAAmBtuD,OAE7CuuD,IACAr/C,EAAgBq/C,GAG5B,CACA,IAAmB,SAAdvuD,KAAK6S,MAAiC,QAAd7S,KAAK6S,QAC7B7S,KAAKud,YACN2wC,EAA2B,CAC3BluD,KAAKud,WAAa,IAAI2wC,EAA0BluD,KAAKyX,aAAczX,KAAKyP,QAAUzP,KAAKyP,OAAO8N,YAC9F,IAAQnO,EAAuE++C,EAAvE/+C,SAAUtB,EAA6DqgD,EAA7DrgD,OAAQN,EAAqD2gD,EAArD3gD,KAAMijC,EAA+C0d,EAA/C1d,gBAAiB+Q,EAA8B2M,EAA9B3M,aAAcxB,EAAgBmO,EAAhBnO,WAC/DhgD,KAAKud,WAAWo5B,WAAW,CACvBvnC,SAAAA,EACAtB,OAAAA,EACAqzC,oBAAqBv0C,QAAQY,IACxBijC,GAAmB9kC,EAAY8kC,GACpCjhC,cAAexP,KACfm6C,eAAgB,kBAAMhI,EAAKgI,gBAAgB,EAQ3CkL,cAAiC,kBAAXv3C,EAAsBA,EAAS,OACrD03C,uBAAwB/0C,EACxB+wC,aAAAA,EACAxB,WAAAA,GAER,CACA,OAAO9wC,CACX,GAAC,CAAAtP,IAAA,iBAAAC,MACD,WACI,IAAK,IAAMD,KAAOI,KAAK4O,SAAU,CAC7B,IAAM4/C,EAAUxuD,KAAK4O,SAAShP,GAC1B4uD,EAAQzvD,UACRyvD,EAAQx+C,UAGRw+C,EAAQ39C,QACR29C,EAAQzvD,WAAY,EAE5B,CACJ,GAAC,CAAAa,IAAA,eAAAC,MACD,WACIG,KAAKyuD,MAAMzuD,KAAK4d,YAAa5d,KAAKyX,aAAczX,KAAK0X,QAAS1X,KAAKC,MACvE,GACA,CAAAL,IAAA,qBAAAC,MAKA,WACI,OAAOG,KAAKd,QACNc,KAAK0uD,2BAA2B1uD,KAAKd,QAASc,KAAKC,O7B3RxC,CACrBkS,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,G6B8RrC,GAAC,CAAAzK,IAAA,iBAAAC,MACD,SAAeD,GACX,OAAOI,KAAKyX,aAAa7X,EAC7B,GAAC,CAAAA,IAAA,iBAAAC,MACD,SAAeD,EAAKC,GAChBG,KAAKyX,aAAa7X,GAAOC,CAC7B,GACA,CAAAD,IAAA,uBAAAC,MAOA,SAAqBmZ,GAA0B,IAAlB21C,IAASjvD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,KAAAA,UAAA,GAClC,OAAOM,KAAK4uD,iCAAiC51C,EAAQhZ,KAAKC,MAAO0uD,EACrE,GACA,CAAA/uD,IAAA,SAAAC,MAIA,SAAOI,EAAO0P,IACN1P,EAAM0X,mBAAqB3X,KAAKC,MAAM0X,oBACtC3X,KAAKm6C,iBAETn6C,KAAKF,UAAYE,KAAKC,MACtBD,KAAKC,MAAQA,EACbD,KAAKuoC,oBAAsBvoC,KAAK2P,gBAChC3P,KAAK2P,gBAAkBA,EAIvB,IAAK,IAAIlJ,EAAI,EAAGA,EAAI4lD,GAAkB7lD,OAAQC,IAAK,CAC/C,IAAM7G,EAAMysD,GAAkB5lD,GAC1BzG,KAAK0sD,uBAAuB9sD,KAC5BI,KAAK0sD,uBAAuB9sD,YACrBI,KAAK0sD,uBAAuB9sD,IAEvC,IAAMivD,EAAW5uD,EAAM,KAAOL,GAC1BivD,IACA7uD,KAAK0sD,uBAAuB9sD,GAAOI,KAAK4hC,GAAGhiC,EAAKivD,GAExD,CACA7uD,KAAKysD,iBE9Ub,SAAqC1sD,EAASmoB,EAAMC,GAChD,IAAQ6b,EAAe9b,EAAf8b,WACR,IAAK,IAAMpkC,KAAOsoB,EAAM,CACpB,IAAM4mC,EAAY5mC,EAAKtoB,GACjBmvD,EAAY5mC,EAAKvoB,GACvB,GAAIoS,EAAc88C,GAKd/uD,EAAQkjC,SAASrjC,EAAKkvD,GAClB5uB,GAAwB8D,IACxBA,EAAW97B,IAAItI,QAUlB,GAAIoS,EAAc+8C,GAKnBhvD,EAAQkjC,SAASrjC,EAAK6iC,GAAYqsB,EAAW,CAAEvyB,MAAOx8B,KAClDmgC,GAAwB8D,IACxBA,EAAWp6B,OAAOhK,QAGrB,GAAImvD,IAAcD,EAMnB,GAAI/uD,EAAQgjC,SAASnjC,GAAM,CACvB,IAAMovD,EAAgBjvD,EAAQijC,SAASpjC,IAEtCovD,EAActtB,aAAestB,EAAclsD,IAAIgsD,EACpD,KACK,CACD,IAAMhB,EAAc/tD,EAAQkvD,eAAervD,GAC3CG,EAAQkjC,SAASrjC,EAAK6iC,QAA4B9+B,IAAhBmqD,EAA4BA,EAAcgB,EAAW,CAAEvyB,MAAOx8B,IACpG,CAER,CAEA,IAAK,IAAMH,KAAOuoB,OACIxkB,IAAdukB,EAAKtoB,IACLG,EAAQmvD,YAAYtvD,GAE5B,OAAOsoB,CACX,CFuRgCinC,CAA4BnvD,KAAMA,KAAK+d,4BAA4B9d,EAAOD,KAAKF,WAAYE,KAAKysD,kBACpHzsD,KAAKovD,wBACLpvD,KAAKovD,wBAEb,GAAC,CAAAxvD,IAAA,WAAAC,MACD,WACI,OAAOG,KAAKC,KAChB,GACA,CAAAL,IAAA,aAAAC,MAGA,SAAW6M,GACP,OAAO1M,KAAKC,MAAM4M,SAAW7M,KAAKC,MAAM4M,SAASH,QAAQ/I,CAC7D,GACA,CAAA/D,IAAA,uBAAAC,MAGA,WACI,OAAOG,KAAKC,MAAM4f,UACtB,GAAC,CAAAjgB,IAAA,wBAAAC,MACD,WACI,OAAOG,KAAKC,MAAM8K,kBACtB,GAAC,CAAAnL,IAAA,wBAAAC,MACD,WACI,OAAOG,KAAK2M,cACN3M,KACAA,KAAKyP,OACDzP,KAAKyP,OAAO4/C,6BACZ1rD,CACd,GAAC,CAAA/D,IAAA,oBAAAC,MACD,WAAyC,IAAvByvD,EAAa5vD,UAAA8G,OAAA,QAAA7C,IAAAjE,UAAA,IAAAA,UAAA,GAC3B,GAAI4vD,EACA,OAAOtvD,KAAKyP,OAASzP,KAAKyP,OAAO82B,yBAAsB5iC,EAE3D,IAAK3D,KAAKuM,sBAAuB,CAC7B,IAAM5J,EAAU3C,KAAKyP,QACfzP,KAAKyP,OAAO82B,qBACZ,CAAC,EAIP,YAH2B5iC,IAAvB3D,KAAKC,MAAMkC,UACXQ,EAAQR,QAAUnC,KAAKC,MAAMkC,SAE1BQ,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACR8D,EAAI,EAAGA,EAAI6lD,GAAiB7lD,IAAK,CACtC,IAAMiG,EAAOJ,EAAa7F,GACpB0G,EAAOnN,KAAKC,MAAMyM,IACpBV,EAAemB,KAAkB,IAATA,KACxBxK,EAAQ+J,GAAQS,EAExB,CACA,OAAOxK,CACX,GACA,CAAA/C,IAAA,kBAAAC,MAGA,SAAgBoE,GACZ,IAAMsrD,EAAqBvvD,KAAKqvD,wBAChC,GAAIE,EAGA,OAFAA,EAAmB1qB,iBACf0qB,EAAmB1qB,gBAAgB38B,IAAIjE,GACpC,kBAAMsrD,EAAmB1qB,gBAAgBnhC,OAAOO,EAAM,CAErE,GACA,CAAArE,IAAA,WAAAC,MAGA,SAASD,EAAKC,GAENA,IAAUG,KAAKkD,OAAO2D,IAAIjH,KAC1BI,KAAKkvD,YAAYtvD,GACjBI,KAAKstD,kBAAkB1tD,EAAKC,IAEhCG,KAAKkD,OAAOJ,IAAIlD,EAAKC,GACrBG,KAAKyX,aAAa7X,GAAOC,EAAMgH,KACnC,GACA,CAAAjH,IAAA,cAAAC,MAGA,SAAYD,GACRI,KAAKkD,OAAOQ,OAAO9D,GACnB,IAAMiiC,EAAc7hC,KAAKwsD,mBAAmB3lD,IAAIjH,GAC5CiiC,IACAA,IACA7hC,KAAKwsD,mBAAmB9oD,OAAO9D,WAE5BI,KAAKyX,aAAa7X,GACzBI,KAAKwvD,2BAA2B5vD,EAAKI,KAAK4d,YAC9C,GACA,CAAAhe,IAAA,WAAAC,MAGA,SAASD,GACL,OAAOI,KAAKkD,OAAOyD,IAAI/G,EAC3B,GAAC,CAAAA,IAAA,WAAAC,MACD,SAASD,EAAKg+B,GACV,GAAI59B,KAAKC,MAAMiD,QAAUlD,KAAKC,MAAMiD,OAAOtD,GACvC,OAAOI,KAAKC,MAAMiD,OAAOtD,GAE7B,IAAIC,EAAQG,KAAKkD,OAAO2D,IAAIjH,GAK5B,YAJc+D,IAAV9D,QAAwC8D,IAAjBi6B,IACvB/9B,EAAQ4iC,GAAY7E,EAAc,CAAErB,MAAOv8B,OAC3CA,KAAKijC,SAASrjC,EAAKC,IAEhBA,CACX,GACA,CAAAD,IAAA,YAAAC,MAKA,SAAUD,GACN,IAAI2a,EACJ,YAAkC5W,IAA3B3D,KAAKyX,aAAa7X,IAAuBI,KAAKd,QAES,QAAvDqb,EAAKva,KAAKyvD,uBAAuBzvD,KAAKC,MAAOL,UAAyB,IAAP2a,EAAgBA,EAAKva,KAAK0vD,sBAAsB1vD,KAAKd,QAASU,EAAKI,KAAK0X,SADxI1X,KAAKyX,aAAa7X,EAE5B,GACA,CAAAA,IAAA,gBAAAC,MAIA,SAAcD,EAAKC,GACfG,KAAK8sD,WAAWltD,GAAOC,CAC3B,GACA,CAAAD,IAAA,gBAAAC,MAIA,SAAcD,GACV,IAAI2a,EACIpY,EAAYnC,KAAKC,MAAjBkC,QACFwtD,EAAsC,kBAAZxtD,GAA2C,kBAAZA,EACD,QAAvDoY,EAAK8D,GAAwBre,KAAKC,MAAOkC,UAA6B,IAAPoY,OAAgB,EAASA,EAAG3a,QAC5F+D,EAIN,GAAIxB,QAAgCwB,IAArBgsD,EACX,OAAOA,EAMX,IAAM32C,EAAShZ,KAAKyvD,uBAAuBzvD,KAAKC,MAAOL,GACvD,YAAe+D,IAAXqV,GAAyBhH,EAAcgH,QAMRrV,IAA5B3D,KAAK+sD,cAAcntD,SACD+D,IAArBgsD,OACEhsD,EACA3D,KAAK8sD,WAAWltD,GARXoZ,CASf,GAAC,CAAApZ,IAAA,KAAAC,MACD,SAAGwgB,EAAW7b,GAIV,OAHKxE,KAAKkhC,OAAO7gB,KACbrgB,KAAKkhC,OAAO7gB,GAAa,IAAIkgB,IAE1BvgC,KAAKkhC,OAAO7gB,GAAWnY,IAAI1D,EACtC,GAAC,CAAA5E,IAAA,SAAAC,MACD,SAAOwgB,GACH,GAAIrgB,KAAKkhC,OAAO7gB,GAAY,SAAAuvC,EAAApuC,EAAA9hB,UAAA8G,OADXs4C,EAAI,IAAA73C,MAAAua,EAAA,EAAAA,EAAA,KAAAquC,EAAA,EAAAA,EAAAruC,EAAAquC,IAAJ/Q,EAAI+Q,EAAA,GAAAnwD,UAAAmwD,IAEjBD,EAAA5vD,KAAKkhC,OAAO7gB,IAAWihB,OAAM7hC,MAAAmwD,EAAI9Q,EACrC,CACJ,KAACyN,CAAA,CArdc,G,kCGhCbuD,GAAgB,SAAAC,IAAA1wD,EAAAA,GAAAA,GAAAywD,EAAAC,GAAA,IAAAzwD,GAAAC,EAAAA,GAAAA,GAAAuwD,GAAA,SAAAA,IAAA,OAAAtwD,EAAAA,GAAAA,GAAA,KAAAswD,GAAAxwD,EAAAG,MAAA,KAAAC,UAAA,CAwCjB,OAxCiBC,EAAAA,GAAAA,GAAAmwD,EAAA,EAAAlwD,IAAA,2BAAAC,MAClB,SAAyBwhB,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE2uC,wBAAwB1uC,GAAS,GAAK,CACnD,GAAC,CAAA1hB,IAAA,yBAAAC,MACD,SAAuBI,EAAOL,GAC1B,OAAOK,EAAMwB,MAAQxB,EAAMwB,MAAM7B,QAAO+D,CAC5C,GAAC,CAAA/D,IAAA,6BAAAC,MACD,SAA2BD,EAAGqB,GAAmB,IAAf2W,EAAI3W,EAAJ2W,KAAMnW,EAAKR,EAALQ,aAC7BmW,EAAKhY,UACL6B,EAAM7B,EACjB,GAAC,CAAAA,IAAA,mCAAAC,MACD,SAAAmR,EAAAm0B,EAAgGpmC,GAAW,IAAxE8gB,EAAU7O,EAAV6O,WAAYD,EAAa5O,EAAb4O,cAAkB5G,EAAM4B,GAAA5J,EAAAkL,IAAM7C,EAAe8rB,EAAf9rB,gBACrE8B,EnDqFZ,SAAmBnC,EAAQ6G,EAAYrQ,GACnC,IAAM2L,EAAS,CAAC,EAChB,IAAK,IAAMvb,KAAOoZ,EAAQ,CACtB,IAAMi3C,EAAmB5sB,GAAwBzjC,EAAKigB,GACtD,QAAyBlc,IAArBssD,EACA90C,EAAOvb,GAAOqwD,MAEb,CACD,IAAMpwD,EAAQ2P,EAAcwzB,SAASpjC,GACjCC,IACAsb,EAAOvb,GAAOC,EAAMgH,MAE5B,CACJ,CACA,OAAOsU,CACX,CmDpGqB+0C,CAAUl3C,EAAQ6G,GAAc,CAAC,EAAG7f,MAYjD,GARIqZ,IACIuG,IACAA,EAAgBvG,EAAgBuG,IAChC5G,IACAA,EAASK,EAAgBL,IACzBmC,IACAA,EAAS9B,EAAgB8B,KAE7Bpc,EAAW,EnDoBvB,SAAiCyQ,EAAewJ,EAAQmC,GACpD,IAAIZ,EAAIoV,ED1CW1jB,EC2CbkkD,EAAevkD,OAAOzE,KAAK6R,GAAQ5R,QAAO,SAACxH,GAAG,OAAM4P,EAAcuzB,SAASnjC,EAAI,IAC/EwwD,EAAeD,EAAa3pD,OAClC,GAAK4pD,EAEL,IAAK,IAAI3pD,EAAI,EAAGA,EAAI2pD,EAAc3pD,IAAK,CACnC,IAAM7G,EAAMuwD,EAAa1pD,GACnB4pD,EAAcr3C,EAAOpZ,GACvBC,EAAQ,KAKRoH,MAAMiF,QAAQmkD,KACdxwD,EAAQwwD,EAAY,IAOV,OAAVxwD,IACAA,EAAoG,QAA3F8vB,EAA4B,QAAtBpV,EAAKY,EAAOvb,UAAyB,IAAP2a,EAAgBA,EAAK/K,EAAc8gD,UAAU1wD,UAAyB,IAAP+vB,EAAgBA,EAAK3W,EAAOpZ,SAM9H+D,IAAV9D,GAAiC,OAAVA,IAEN,kBAAVA,IACNsgC,GAAkBtgC,IAAU8+B,GAAkB9+B,IAE/CA,EAAQqT,WAAWrT,ID3ERoM,EC6ESpM,GD7EHgjC,GAAW9U,KAAK2U,GAAcz2B,KC6EjByjB,GAAQhe,KAAK2+C,KAC3CxwD,EAAQgwB,GAAkBjwB,EAAKywD,KAEnC7gD,EAAcyzB,SAASrjC,EAAK6iC,GAAY5iC,EAAO,CAAE08B,MAAO/sB,UACpC7L,IAAhBwX,EAAOvb,KACPub,EAAOvb,GAAOC,GAEJ,OAAVA,GACA2P,EAAc+gD,cAAc3wD,EAAKC,GACzC,CACJ,CmDjEY2wD,CAAwBxwD,KAAMgZ,EAAQmC,GACtC,IAAM2U,EAASg8B,GAAgB9rD,KAAMgZ,EAAQmC,EAAQyE,GACrDA,EAAgBkQ,EAAOlQ,cACvB5G,EAAS8W,EAAO9W,MACpB,CACA,OAAAnK,EAAAA,EAAAA,GAAA,CACIgR,WAAAA,EACAD,cAAAA,GACG5G,EAEX,KAAC82C,CAAA,CAxCiB,CAASvD,ICQ9B,IACKkE,GAAiB,SAAAC,IAAArxD,EAAAA,GAAAA,GAAAoxD,EAAAC,GAAA,IAAApxD,GAAAC,EAAAA,GAAAA,GAAAkxD,GACnB,SAAAA,IAAc,IAAAztC,EAES,OAFTxjB,EAAAA,GAAAA,GAAA,KAAAixD,IACVztC,EAAA1jB,EAAAG,MAAA,KAASC,YACJmT,KAAO,OAAOmQ,CACvB,CAsCC,OAtCArjB,EAAAA,GAAAA,GAAA8wD,EAAA,EAAA7wD,IAAA,wBAAAC,MACD,SAAsB+Q,EAAUhR,GAC5B,GAAIiS,EAAelL,IAAI/G,GAAM,CACzB,IAAM+wD,EAAclyB,GAAoB7+B,GACxC,OAAO+wD,GAAcA,EAAYt9C,SAAe,CACpD,CAEI,IAdctT,EAcR6wD,GAdQ7wD,EAcyB6Q,EAbxCV,OAAO63C,iBAAiBhoD,IAcjBF,GAAS6S,EAAkB9S,GAC3BgxD,EAAcnI,iBAAiB7oD,GAC/BgxD,EAAchxD,KAAS,EAC7B,MAAwB,kBAAVC,EAAqBA,EAAM4Y,OAAS5Y,CAE1D,GAAC,CAAAD,IAAA,6BAAAC,MACD,SAA2B+Q,EAAQ3P,GAC/B,OAAO2sC,GAAmBh9B,EAD2B3P,EAAlB8J,mBAEvC,GAAC,CAAAnL,IAAA,QAAAC,MACD,SAAM+d,EAAanG,EAAcC,EAASzX,GACtCuX,GAAgBoG,EAAanG,EAAcC,EAASzX,EAAM0X,kBAC9D,GAAC,CAAA/X,IAAA,8BAAAC,MACD,SAA4BI,EAAOH,GAC/B,OAAOie,GAA4B9d,EAAOH,EAC9C,GAAC,CAAAF,IAAA,yBAAAC,MACD,WAAyB,IAAAsjB,EAAA,KACjBnjB,KAAK6wD,oBACL7wD,KAAK6wD,2BACE7wD,KAAK6wD,mBAEhB,IAAQ/vD,EAAad,KAAKC,MAAlBa,SACJkR,EAAclR,KACdd,KAAK6wD,kBAAoB/vD,EAAS8gC,GAAG,UAAU,SAAC3K,GACxC9T,EAAKjkB,UACLikB,EAAKjkB,QAAQ4xD,YAAc,GAAH9uD,OAAMi1B,GACtC,IAER,GAAC,CAAAr3B,IAAA,iBAAAC,MACD,SAAe+Q,EAAUgN,EAAaN,EAAWC,GAC7CF,GAAWzM,EAAUgN,EAAaN,EAAWC,EACjD,KAACkzC,CAAA,CA1CkB,CAASX,I,WCZjB,SAASiB,GAAeC,EAAQC,GAC7C,MAAQrlD,OAAOC,UAAUC,eAAeC,KAAKilD,EAAQC,IAEpC,QADfD,GAAS,EAAAE,GAAA,GAAeF,MAG1B,OAAOA,CACT,CCNe,SAASG,KActB,OAZEA,GADqB,qBAAZC,SAA2BA,QAAQvqD,IACrCuqD,QAAQvqD,IAAIwqD,OAEZ,SAAcr4C,EAAQi4C,EAAUK,GACrC,IAAIC,EAAO,GAAcv4C,EAAQi4C,GACjC,GAAKM,EAAL,CACA,IAAIC,EAAO5lD,OAAO6lD,yBAAyBF,EAAMN,GACjD,OAAIO,EAAK3qD,IACA2qD,EAAK3qD,IAAIkF,KAAKrM,UAAU8G,OAAS,EAAIwS,EAASs4C,GAEhDE,EAAK3xD,KALK,CAMnB,EAEKsxD,GAAK1xD,MAAMO,KAAMN,UAC1B,CCPkD,IAE5CgyD,GAAgB,SAAAhB,IAAArxD,EAAAA,GAAAA,GAAAqyD,EAAAhB,GAAA,IAAApxD,GAAAC,EAAAA,GAAAA,GAAAmyD,GAClB,SAAAA,IAAc,IAAA1uC,EAGY,OAHZxjB,EAAAA,GAAAA,GAAA,KAAAkyD,IACV1uC,EAAA1jB,EAAAG,MAAA,KAASC,YACJmT,KAAO,MACZmQ,EAAKvH,UAAW,EAAMuH,CAC1B,CA2BC,OA3BArjB,EAAAA,GAAAA,GAAA+xD,EAAA,EAAA9xD,IAAA,yBAAAC,MACD,SAAuBI,EAAOL,GAC1B,OAAOK,EAAML,EACjB,GAAC,CAAAA,IAAA,wBAAAC,MACD,SAAsB+Q,EAAUhR,GAC5B,GAAIiS,EAAelL,IAAI/G,GAAM,CACzB,IAAM+wD,EAAclyB,GAAoB7+B,GACxC,OAAO+wD,GAAcA,EAAYt9C,SAAe,CACpD,CAEA,OADAzT,EAAO8d,GAAoB/W,IAAI/G,GAA0BA,EAAnB0L,EAAY1L,GAC3CgR,EAAS+gD,aAAa/xD,EACjC,GAAC,CAAAA,IAAA,6BAAAC,MACD,WACI,MpClBiB,CACrBsS,EAFsB,CAAE7H,IAAK,EAAGD,IAAK,GAGrC+H,EAHsB,CAAE9H,IAAK,EAAGD,IAAK,GoCoBrC,GAAC,CAAAzK,IAAA,8BAAAC,MACD,SAA4BI,EAAOH,GAC/B,OAAOie,GAA4B9d,EAAOH,EAC9C,GAAC,CAAAF,IAAA,QAAAC,MACD,SAAM+d,EAAanG,EAAcC,EAASzX,GACtCub,GAAcoC,EAAanG,EAAcC,EAAS1X,KAAKyb,SAAUxb,EAAM0X,kBAC3E,GAAC,CAAA/X,IAAA,iBAAAC,MACD,SAAe+Q,EAAUgN,EAAaN,EAAWC,GAC7CI,GAAU/M,EAAUgN,EAAaN,EAAWC,EAChD,GAAC,CAAA3d,IAAA,QAAAC,MACD,SAAM+Q,GACF5Q,KAAKyb,SAAWA,GAAS7K,EAASsP,SAClCixC,IAAAS,EAAAA,GAAAA,GAAAF,EAAA7lD,WAAA,cAAAE,KAAA,KAAY6E,EAChB,KAAC8gD,CAAA,CAhCiB,CAAS5B,ICPzB+B,GAAyB,SAACljD,EAAW+I,GACvC,OAAOjG,EAAe9C,GAChB,IAAI+iD,GAAiBh6C,EAAS,CAAEW,4BAA4B,IAC5D,IAAIo4C,GAAkB/4C,EAAS,CAAEW,4BAA4B,GACvE,ECLMvK,GAAS,CACXA,OAAQ,CACJmvC,eAAgB4K,GAChB34C,cAAAA,KCGFX,IAAiBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBo1B,IACAjc,IACAxa,IACAM,IAQDgkD,GAAuB5gD,GAAkB,SAACvC,EAAWoQ,GAAM,OChBjE,SAA+BpQ,EAAS1N,EAAkCsN,EAAmBC,GAAqB,IAAAujD,EAAA9wD,EAAtEyZ,mBAAAA,OAAkB,IAAAq3C,GAAQA,EAC5DC,EAAavgD,EAAe9C,GAC5BoR,GACAI,GACN,OAAAtR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOmjD,GAAU,IACbzjD,kBAAAA,EACAE,UAAWyO,GAAgBxC,GAC3BlM,oBAAAA,EACAG,UAAAA,GAER,CDKsEsjD,CAAsBtjD,EAAWoQ,EAAQxQ,GAAmBsjD,GAAuB,G,4FEnBrJnhC,EAAU9lB,EAAAA,EACVrG,EAAYqG,EAAAA,C,uDCHhB,IAAM2E,EAAgC,qBAAb7N,Q,uDCAzB,IAAMkJ,EAAO,SAACsnD,GAAG,OAAKA,CAAG,C,qECSzB,SAASzvD,EAAYo+B,GACjB,IAAMz/B,GAAMpC,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBoC,EAAIlC,UACJkC,EAAIlC,QAAU2hC,KAEXz/B,EAAIlC,OACf,C,qECZMD,E,QAA4BsQ,EAAY4iD,EAAAA,gBAAkBjsD,EAAAA,S","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","err","e","f","register","delete","undefined","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","callback","forceRender","useContext","LayoutGroupContext","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","useCallback","frame","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","Queue","order","scheduled","Set","process","add","index","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}