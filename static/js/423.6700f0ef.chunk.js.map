{"version":3,"file":"static/js/423.6700f0ef.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/LearnMoreModal/LearnMoreModal.jsx","components/CarItem/CarItem.jsx","components/FavoriteCarsList/FavoriteCarsList.jsx","pages/FavoritesPage.jsx","redux/cars/selectors.js"],"sourcesContent":["import React from 'react';\n\nexport const Button = ({ children, onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Link } from 'react-router-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const LearnMoreModal = ({ car, onClose, isModalOpen }) => {\n  const {\n    img,\n    make,\n    id,\n    address,\n    type,\n    model,\n    year,\n    fuelConsumption,\n    engineSize,\n    description,\n    accessories,\n    functionalities,\n    rentalConditions,\n  } = car;\n\n  isModalOpen\n    ? (document.body.style.overflow = 'hidden')\n    : (document.body.style.overflow = 'auto');\n\n  useEffect(() => {\n    const handleModalCloseByEsc = evt => {\n      if (evt.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleModalCloseByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleModalCloseByEsc);\n    };\n  }, [onClose]);\n\n  const handleModalCloseByClickOnBackdrop = evt => {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <>\n      <div onClick={handleModalCloseByClickOnBackdrop}>\n        <div>\n          <button type=\"button\" onClick={onClose}>\n            Close\n          </button>\n          <img src={img} alt={make} />\n          <h2>{`${make} ${model}, ${year}`}</h2>\n          <p>{address}</p>\n          <p>id: {id}</p>\n          <p>Year: {year}</p>\n          <p>Type: {type}</p>\n          <p>Fuel Consumption: {fuelConsumption}</p>\n          <p>Engine Size: {engineSize}</p>\n          <p>{description}</p>\n          <h3>Accessories and functionalities:</h3>\n          <ul>\n            {accessories.map(item => (\n              <li key={item}>\n                <p>{item}</p>\n              </li>\n            ))}\n          </ul>\n          <ul>\n            {functionalities.map(item => (\n              <li key={item}>\n                <p>{item}</p>\n              </li>\n            ))}\n          </ul>\n          <p>{rentalConditions}</p>\n          <Link>Rental car</Link>\n        </div>\n      </div>\n    </>,\n    modalRoot\n  );\n};\n","import { Button } from 'components/Button/Button';\nimport { LearnMoreModal } from 'components/LearnMoreModal/LearnMoreModal';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFromFavorites, setFavorites } from 'redux/cars/favoritesSlice';\nimport { selectFavorites } from 'redux/cars/selectors';\n\nexport const CarItem = ({ car }) => {\n  const {\n    img,\n    make,\n    rentalPrice,\n    address,\n    rentalCompany,\n    type,\n    model,\n    year,\n    mileage,\n    functionalities,\n  } = car;\n  const dispatch = useDispatch();\n  const { favorites } = useSelector(selectFavorites);\n  const [isFavorited, setIsFavorited] = useState(\n    favorites.some(favorite => favorite.id === car.id)\n  );\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevIsModalOpen => !prevIsModalOpen);\n  };\n\n  const handleSetFavorites = () => {\n    dispatch(setFavorites(car));\n    setIsFavorited(true);\n  };\n\n  const handleRemoveFavorites = () => {\n    dispatch(removeFromFavorites(car));\n    setIsFavorited(false);\n  };\n\n  return (\n    <>\n      <button\n        onClick={isFavorited ? handleRemoveFavorites : handleSetFavorites}\n        type=\"button\"\n      >\n        {isFavorited ? 'Remove from favorites' : 'Add to favorites'}\n      </button>\n      <img src={img} alt={make} />\n      <div>\n        <h2>{`${make} ${model}, ${year}`}</h2>\n        <span>{rentalPrice}</span>\n        <p>{address}</p>\n        <p>{rentalCompany}</p>\n        <p>{type}</p>\n        <p>{model}</p>\n        <p>{mileage}</p>\n        <p>{functionalities[0]}</p>\n      </div>\n      <Button onClick={toggleModal}>Learn more</Button>\n      {isModalOpen && (\n        <LearnMoreModal\n          onClose={toggleModal}\n          car={car}\n          isModalOpen={isModalOpen}\n        />\n      )}\n    </>\n  );\n};\n","import { CarItem } from 'components/CarItem/CarItem';\nimport { useSelector } from 'react-redux';\nimport { selectFavorites } from 'redux/cars/selectors';\n\nexport const FavoriteCarsList = () => {\n  const { favorites } = useSelector(selectFavorites);\n\n  return (\n    <>\n      {favorites.length > 0 && (\n        <ul>\n          {favorites.map(car => (\n            <li key={car.id}>\n              <CarItem car={car} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { FavoriteCarsList } from 'components/FavoriteCarsList/FavoriteCarsList';\nimport { Section } from 'components/Section/Section';\n\nconst FavoritesPage = () => {\n  return (\n    <Section>\n      <FavoriteCarsList />\n    </Section>\n  );\n};\n\nexport default FavoritesPage;\n","export const selectCars = state => {\n  return state.cars.cars;\n};\n\nexport const selectLoading = state => {\n  return state.cars.isLoading;\n};\n\nexport const selectError = state => {\n  return state.cars.error;\n};\n\nexport const selectFilter = state => {\n  return state.filter;\n};\n\nexport const selectPagination = state => {\n  return state.pagination;\n};\n\nexport const selectFavorites = state => {\n  return state.favorites;\n};\n"],"names":["Button","_ref","children","onClick","_jsx","type","modalRoot","document","querySelector","LearnMoreModal","car","onClose","isModalOpen","img","make","id","address","model","year","fuelConsumption","engineSize","description","accessories","functionalities","rentalConditions","body","style","overflow","useEffect","handleModalCloseByEsc","evt","code","window","addEventListener","removeEventListener","createPortal","_Fragment","target","currentTarget","_jsxs","src","alt","concat","map","item","Link","CarItem","rentalPrice","rentalCompany","mileage","dispatch","useDispatch","favorites","useSelector","selectFavorites","_useState","useState","some","favorite","_useState2","_slicedToArray","isFavorited","setIsFavorited","_useState3","_useState4","setIsModalOpen","toggleModal","prevIsModalOpen","removeFromFavorites","setFavorites","FavoriteCarsList","length","Section","selectCars","state","cars","selectLoading","isLoading","selectError","error","selectPagination","pagination"],"sourceRoot":""}