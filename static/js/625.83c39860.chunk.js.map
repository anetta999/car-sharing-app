{"version":3,"file":"static/js/625.83c39860.chunk.js","mappings":"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","sources":["components/CarList/CarList.jsx","components/LoadMoreButton/LoadMoreButton.styled.jsx","components/LoadMoreButton/LoadMoreButton.jsx","components/Button/Button.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import { CarItem } from 'components/CarItem/CarItem';\nimport { useSelector } from 'react-redux';\nimport { selectCars } from 'redux/cars/selectors';\nimport { StyledCarItem, StyledCarList } from './CarList.styled';\n\nexport const CarList = () => {\n  const cars = useSelector(selectCars);\n\n  return (\n    <>\n      {cars.length > 0 && (\n        <StyledCarList>\n          {cars.map(car => (\n            <StyledCarItem key={car.id}>\n              <CarItem car={car} />\n            </StyledCarItem>\n          ))}\n        </StyledCarList>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLoadMoreButton = styled.button`\n  display: block;\n  margin: 100px auto 0;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.blue};\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px; /* 150% */\n  text-decoration-line: underline;\n  transition: color ${({ theme }) => theme.transition.main};\n\n  &:is(:hover, :focus) {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\nimport { setCurrentPage } from 'redux/cars/paginationSlice';\nimport { selectPagination } from 'redux/cars/selectors';\nimport { StyledLoadMoreButton } from './LoadMoreButton.styled';\n\nexport const LoadMoreButton = () => {\n  const { currentPage } = useSelector(selectPagination);\n  const dispatch = useDispatch();\n\n  const handleLoadMore = () => {\n    const nextPage = currentPage + 1;\n\n    dispatch(setCurrentPage(nextPage));\n\n    dispatch(fetchCars({ page: nextPage }));\n  };\n\n  return (\n    <>\n      <StyledLoadMoreButton type=\"button\" onClick={handleLoadMore}>\n        Load more\n      </StyledLoadMoreButton>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const BaseButton = styled.button`\n  min-width: 274px;\n  padding: 12px 99px;\n  border-radius: 12px;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.buttonTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px; /* 142.857% */\n  transition: background-color ${({ theme }) => theme.transition.main};\n\n  &:is(:hover, :focus) {\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { BaseButton } from 'components/Button/Button.styled';\nimport { Field, Form } from 'formik';\n\nexport const SubmitButton = styled(BaseButton)`\n  min-width: 136px;\n  padding: 14px 44px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 18px;\n  margin-bottom: 50px;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: ${({ theme }) => theme.colors.selectLabelTextColor};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 18px; /* 128.571% */\n`;\n\nexport const Select = styled(Field)``;\n","import carMarks from 'data/makes.json';\nimport { Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\nimport { StyledForm, StyledLabel, SubmitButton } from './Searchbar.styled';\n\nexport const Searchbar = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Formik\n        initialValues={{ selectedMark: 'Enter some text' }}\n        onSubmit={(values, actions) => {\n          const { selectedMark } = values;\n          if (selectedMark === 'Enter some text') {\n            return;\n          }\n          dispatch(fetchCars({ value: selectedMark }));\n          actions.resetForm();\n        }}\n      >\n        {({ values }) => (\n          <StyledForm>\n            <StyledLabel>\n              Car brand\n              <Field name=\"selectedMark\" as=\"select\">\n                <option value={values.selectedMark === 'Enter some text'}>\n                  Enter some text\n                </option>\n                {carMarks.map(mark => (\n                  <option key={mark} value={mark}>\n                    {mark}\n                  </option>\n                ))}\n              </Field>\n            </StyledLabel>\n            <SubmitButton type=\"submit\">Search</SubmitButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { CarList } from 'components/CarList/CarList';\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMoreButton';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Section } from 'components/Section/Section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCars } from 'redux/cars/operations';\nimport {\n  selectCars,\n  selectError,\n  selectLoading,\n  selectPagination,\n} from 'redux/cars/selectors';\n\nexport const CatalogPage = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const { currentPage } = useSelector(selectPagination);\n\n  useEffect(() => {\n    dispatch(fetchCars({ page: 1 }));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        {isLoading && !error && <p>Loading...</p>}\n        <Searchbar />\n        <CarList />\n        {cars.length > 0 && !isLoading && currentPage < 3 && <LoadMoreButton />}\n      </Section>\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["CarList","cars","useSelector","selectCars","_jsx","_Fragment","children","length","StyledCarList","map","car","StyledCarItem","CarItem","id","StyledLoadMoreButton","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","blue","_ref2","transition","main","_ref3","accent","LoadMoreButton","currentPage","selectPagination","dispatch","useDispatch","type","onClick","nextPage","setCurrentPage","fetchCars","page","BaseButton","buttonTextColor","_ref4","SubmitButton","StyledForm","Form","_templateObject2","StyledLabel","_templateObject3","selectLabelTextColor","Searchbar","Field","_templateObject4","Formik","initialValues","selectedMark","onSubmit","values","actions","value","resetForm","_jsxs","name","as","carMarks","mark","CatalogPage","isLoading","selectLoading","error","selectError","useEffect","Section"],"sourceRoot":""}