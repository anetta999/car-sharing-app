{"version":3,"file":"static/js/901.21bc2d75.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","components/CarItem/CarItem.jsx","components/CarList/CarList.jsx","components/LoadMoreButton/LoadMoreButton.jsx","pages/CatalogPage.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/cars/selectors.js"],"sourcesContent":["import React from 'react';\n\nexport const Button = ({ children }) => {\n  return <button type=\"button\">{children}</button>;\n};\n","import { Button } from 'components/Button/Button';\nimport carMarks from 'data/makes.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/cars/filterSlice';\nimport { selectFilter } from 'redux/cars/selectors';\n\nexport const Searchbar = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch(setFilter);\n\n  return (\n    <>\n      <label>\n        Car brand\n        <select\n          value={filter}\n          onChange={e => {\n            dispatch(setFilter(e.target.value));\n          }}\n        >\n          <option value=\"Enter the text\">Enter the text</option>\n          {carMarks.map(mark => (\n            <option key={mark} value={mark}>\n              {mark}\n            </option>\n          ))}\n        </select>\n      </label>\n      <Button>Search</Button>\n    </>\n  );\n};\n","export const CarItem = ({ car }) => {\n  const {\n    img,\n    make,\n    rentalPrice,\n    address,\n    rentalCompany,\n    type,\n    model,\n    year,\n    mileage,\n    functionalities,\n  } = car;\n\n  return (\n    <>\n      <img src={img} alt={make} />\n      <div>\n        <h2>{`${make} ${model}, ${year}`}</h2>\n        <span>{rentalPrice}</span>\n        <p>{address}</p>\n        <p>{rentalCompany}</p>\n        <p>{type}</p>\n        <p>{model}</p>\n        <p>{mileage}</p>\n        <p>{functionalities[0]}</p>\n      </div>\n    </>\n  );\n};\n","import { CarItem } from 'components/CarItem/CarItem';\nimport { useSelector } from 'react-redux';\nimport { selectCars } from 'redux/cars/selectors';\n\nexport const CarList = () => {\n  const cars = useSelector(selectCars);\n\n  return (\n    <>\n      {cars.length > 0 && (\n        <ul>\n          {cars.map(car => (\n            <li key={car.id}>\n              <CarItem car={car} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","export const LoadMoreButton = () => {\n  return <div>LoadMoreButton</div>;\n};\n","import { CarList } from 'components/CarList/CarList';\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMoreButton';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Section } from 'components/Section/Section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCars } from 'redux/cars/operations';\nimport { selectError, selectLoading } from 'redux/cars/selectors';\n\nexport const CatalogPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        {isLoading && !error && <p>Loading...</p>}\n        <Searchbar />\n        <CarList />\n        <LoadMoreButton />\n      </Section>\n    </>\n  );\n};\n\nexport default CatalogPage;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectCars = state => {\n  return state.cars.cars;\n};\n\nexport const selectLoading = state => {\n  return state.cars.isLoading;\n};\n\nexport const selectError = state => {\n  return state.cars.error;\n};\n\nexport const selectFilter = state => {\n  return state.filter;\n};\n\nexport const selectFilteredCars = createSelector(\n  [selectCars, selectFilter],\n  (cars, filter) => {\n    return cars.filter(car =>\n      car?.make?.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["Button","_ref","children","_jsx","type","Searchbar","filter","useSelector","selectFilter","dispatch","useDispatch","setFilter","_jsxs","_Fragment","value","onChange","e","target","carMarks","mark","CarItem","car","img","make","rentalPrice","address","rentalCompany","model","year","mileage","functionalities","src","alt","concat","CarList","cars","selectCars","length","map","id","LoadMoreButton","CatalogPage","isLoading","selectLoading","error","selectError","useEffect","fetchCars","Section","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","state","_car$make","toLowerCase","includes"],"sourceRoot":""}